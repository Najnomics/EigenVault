{"abi":[{"type":"function","name":"afterAddLiquidity","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"delta","type":"int256","internalType":"BalanceDelta"},{"name":"feesAccrued","type":"int256","internalType":"BalanceDelta"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int256","internalType":"BalanceDelta"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterDonate","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterInitialize","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"sqrtPriceX96","type":"uint160","internalType":"uint160"},{"name":"tick","type":"int24","internalType":"int24"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterRemoveLiquidity","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"delta","type":"int256","internalType":"BalanceDelta"},{"name":"feesAccrued","type":"int256","internalType":"BalanceDelta"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int256","internalType":"BalanceDelta"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterSwap","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct SwapParams","components":[{"name":"zeroForOne","type":"bool","internalType":"bool"},{"name":"amountSpecified","type":"int256","internalType":"int256"},{"name":"sqrtPriceLimitX96","type":"uint160","internalType":"uint160"}]},{"name":"delta","type":"int256","internalType":"BalanceDelta"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int128","internalType":"int128"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeAddLiquidity","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeDonate","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeInitialize","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"sqrtPriceX96","type":"uint160","internalType":"uint160"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeRemoveLiquidity","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeSwap","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct SwapParams","components":[{"name":"zeroForOne","type":"bool","internalType":"bool"},{"name":"amountSpecified","type":"int256","internalType":"int256"},{"name":"sqrtPriceLimitX96","type":"uint160","internalType":"uint160"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int256","internalType":"BeforeSwapDelta"},{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":"9f063efc","afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":"e1b4af69","afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)":"6fe7e6eb","afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":"6c2bbe7e","afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)":"b47b2fb1","beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":"259982e5","beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":"b6a8b0fa","beforeInitialize(address,(address,address,uint24,int24,address),uint160)":"dc98354e","beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":"21d0ee70","beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":"575e24b4"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Should only be callable by the v4 PoolManager.\",\"kind\":\"dev\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\",\"tick\":\"The current tick after the state of a pool is initialized\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"params\":{\"delta\":\"The amount owed to the caller (positive) or owed to the pool (negative)\",\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"_2\":\"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is added\"},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate\"},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"notice\":\"The hook called after the state of a pool is initialized\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is removed\"},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"notice\":\"The hook called after a swap\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is added\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"notice\":\"The hook called before the state of a pool is initialized\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is removed\"},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"The hook called before a swap\"}},\"notice\":\"V4 decides whether to invoke specific hooks by inspecting the least significant bits of the address that the hooks contract is deployed to. For example, a hooks contract deployed to address: 0x0000000000000000000000000000000000002400 has the lowest bits '10 0100 0000 0000' which would cause the 'before initialize' and 'after add liquidity' hooks to be used. See the Hooks library for the full spec.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v4-core/src/interfaces/IHooks.sol\":\"IHooks\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/src/\",\":@eigenlayer/=lib/eigenlayer-contracts/src/contracts/\",\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\",\":zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/\"]},\"sources\":{\"lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct ModifyLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"BalanceDelta","name":"delta","type":"int256"},{"internalType":"BalanceDelta","name":"feesAccrued","type":"int256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterAddLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"BalanceDelta","name":"","type":"int256"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterDonate","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"}],"stateMutability":"nonpayable","type":"function","name":"afterInitialize","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct ModifyLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"BalanceDelta","name":"delta","type":"int256"},{"internalType":"BalanceDelta","name":"feesAccrued","type":"int256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterRemoveLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"BalanceDelta","name":"","type":"int256"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct SwapParams","name":"params","type":"tuple","components":[{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}]},{"internalType":"BalanceDelta","name":"delta","type":"int256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterSwap","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"int128","name":"","type":"int128"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct ModifyLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeAddLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeDonate","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"stateMutability":"nonpayable","type":"function","name":"beforeInitialize","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct ModifyLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeRemoveLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct SwapParams","name":"params","type":"tuple","components":[{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeSwap","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"BeforeSwapDelta","name":"","type":"int256"},{"internalType":"uint24","name":"","type":"uint24"}]}],"devdoc":{"kind":"dev","methods":{"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"params":{"delta":"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta","feesAccrued":"The fees accrued since the last time fees were collected from this position","hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook","key":"The key for the pool","params":"The parameters for adding liquidity","sender":"The initial msg.sender for the add liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"}},"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"params":{"amount0":"The amount of token0 being donated","amount1":"The amount of token1 being donated","hookData":"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook","key":"The key for the pool","sender":"The initial msg.sender for the donate call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)":{"params":{"key":"The key for the pool being initialized","sender":"The initial msg.sender for the initialize call","sqrtPriceX96":"The sqrt(price) of the pool as a Q64.96","tick":"The current tick after the state of a pool is initialized"},"returns":{"_0":"bytes4 The function selector for the hook"}},"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"params":{"delta":"The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta","feesAccrued":"The fees accrued since the last time fees were collected from this position","hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook","key":"The key for the pool","params":"The parameters for removing liquidity","sender":"The initial msg.sender for the remove liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"}},"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)":{"params":{"delta":"The amount owed to the caller (positive) or owed to the pool (negative)","hookData":"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook","key":"The key for the pool","params":"The parameters for the swap","sender":"The initial msg.sender for the swap call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"}},"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"params":{"hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook","key":"The key for the pool","params":"The parameters for adding liquidity","sender":"The initial msg.sender for the add liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"params":{"amount0":"The amount of token0 being donated","amount1":"The amount of token1 being donated","hookData":"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook","key":"The key for the pool","sender":"The initial msg.sender for the donate call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeInitialize(address,(address,address,uint24,int24,address),uint160)":{"params":{"key":"The key for the pool being initialized","sender":"The initial msg.sender for the initialize call","sqrtPriceX96":"The sqrt(price) of the pool as a Q64.96"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"params":{"hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook","key":"The key for the pool","params":"The parameters for removing liquidity","sender":"The initial msg.sender for the remove liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":{"params":{"hookData":"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook","key":"The key for the pool","params":"The parameters for the swap","sender":"The initial msg.sender for the swap call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency","_2":"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"}}},"version":1},"userdoc":{"kind":"user","methods":{"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"notice":"The hook called after liquidity is added"},"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"notice":"The hook called after donate"},"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)":{"notice":"The hook called after the state of a pool is initialized"},"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"notice":"The hook called after liquidity is removed"},"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)":{"notice":"The hook called after a swap"},"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"notice":"The hook called before liquidity is added"},"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"notice":"The hook called before donate"},"beforeInitialize(address,(address,address,uint24,int24,address),uint160)":{"notice":"The hook called before the state of a pool is initialized"},"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"notice":"The hook called before liquidity is removed"},"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":{"notice":"The hook called before a swap"}},"version":1}},"settings":{"remappings":["@eigenlayer-middleware/=lib/eigenlayer-middleware/src/","@eigenlayer/=lib/eigenlayer-contracts/src/contracts/","@ensdomains/=lib/v4-core/node_modules/@ensdomains/","@forge-std/=lib/forge-std/src/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v4-core/=lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-core/node_modules/hardhat/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-core/lib/solmate/","v4-core/=lib/v4-core/src/","v4-periphery/=lib/v4-periphery/","zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/v4-core/src/interfaces/IHooks.sol":"IHooks"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/v4-core/src/interfaces/IHooks.sol":{"keccak256":"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d","urls":["bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec","dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G"],"license":"MIT"},"lib/v4-core/src/interfaces/external/IERC20Minimal.sol":{"keccak256":"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f","urls":["bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de","dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d"],"license":"MIT"},"lib/v4-core/src/libraries/CustomRevert.sol":{"keccak256":"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de","urls":["bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd","dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"],"license":"MIT"},"lib/v4-core/src/libraries/SafeCast.sol":{"keccak256":"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86","urls":["bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59","dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj"],"license":"MIT"},"lib/v4-core/src/types/BalanceDelta.sol":{"keccak256":"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f","urls":["bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9","dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"],"license":"MIT"},"lib/v4-core/src/types/BeforeSwapDelta.sol":{"keccak256":"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78","urls":["bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782","dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"],"license":"MIT"},"lib/v4-core/src/types/Currency.sol":{"keccak256":"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93","urls":["bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01","dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5"],"license":"MIT"},"lib/v4-core/src/types/PoolId.sol":{"keccak256":"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af","urls":["bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918","dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"],"license":"MIT"},"lib/v4-core/src/types/PoolKey.sol":{"keccak256":"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786","urls":["bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639","dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"],"license":"MIT"},"lib/v4-core/src/types/PoolOperation.sol":{"keccak256":"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162","urls":["bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07","dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/v4-core/src/interfaces/IHooks.sol","id":65295,"exportedSymbols":{"BalanceDelta":[72030],"BeforeSwapDelta":[72192],"IHooks":[65294],"ModifyLiquidityParams":[72606],"PoolKey":[72590],"SwapParams":[72617]},"nodeType":"SourceUnit","src":"32:8197:51","nodes":[{"id":65097,"nodeType":"PragmaDirective","src":"32:23:51","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":65099,"nodeType":"ImportDirective","src":"57:45:51","nodes":[],"absolutePath":"lib/v4-core/src/types/PoolKey.sol","file":"../types/PoolKey.sol","nameLocation":"-1:-1:-1","scope":65295,"sourceUnit":72591,"symbolAliases":[{"foreign":{"id":65098,"name":"PoolKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72590,"src":"65:7:51","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65101,"nodeType":"ImportDirective","src":"103:55:51","nodes":[],"absolutePath":"lib/v4-core/src/types/BalanceDelta.sol","file":"../types/BalanceDelta.sol","nameLocation":"-1:-1:-1","scope":65295,"sourceUnit":72189,"symbolAliases":[{"foreign":{"id":65100,"name":"BalanceDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72030,"src":"111:12:51","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65104,"nodeType":"ImportDirective","src":"159:77:51","nodes":[],"absolutePath":"lib/v4-core/src/types/PoolOperation.sol","file":"../types/PoolOperation.sol","nameLocation":"-1:-1:-1","scope":65295,"sourceUnit":72618,"symbolAliases":[{"foreign":{"id":65102,"name":"ModifyLiquidityParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72606,"src":"167:21:51","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":65103,"name":"SwapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72617,"src":"190:10:51","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65106,"nodeType":"ImportDirective","src":"237:61:51","nodes":[],"absolutePath":"lib/v4-core/src/types/BeforeSwapDelta.sol","file":"../types/BeforeSwapDelta.sol","nameLocation":"-1:-1:-1","scope":65295,"sourceUnit":72237,"symbolAliases":[{"foreign":{"id":65105,"name":"BeforeSwapDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72192,"src":"245:15:51","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65294,"nodeType":"ContractDefinition","src":"785:7443:51","nodes":[{"id":65120,"nodeType":"FunctionDefinition","src":"1135:112:51","nodes":[],"documentation":{"id":65108,"nodeType":"StructuredDocumentation","src":"808:322:51","text":"@notice The hook called before the state of a pool is initialized\n @param sender The initial msg.sender for the initialize call\n @param key The key for the pool being initialized\n @param sqrtPriceX96 The sqrt(price) of the pool as a Q64.96\n @return bytes4 The function selector for the hook"},"functionSelector":"dc98354e","implemented":false,"kind":"function","modifiers":[],"name":"beforeInitialize","nameLocation":"1144:16:51","parameters":{"id":65116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65110,"mutability":"mutable","name":"sender","nameLocation":"1169:6:51","nodeType":"VariableDeclaration","scope":65120,"src":"1161:14:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65109,"name":"address","nodeType":"ElementaryTypeName","src":"1161:7:51","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65113,"mutability":"mutable","name":"key","nameLocation":"1194:3:51","nodeType":"VariableDeclaration","scope":65120,"src":"1177:20:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_calldata_ptr","typeString":"struct PoolKey"},"typeName":{"id":65112,"nodeType":"UserDefinedTypeName","pathNode":{"id":65111,"name":"PoolKey","nameLocations":["1177:7:51"],"nodeType":"IdentifierPath","referencedDeclaration":72590,"src":"1177:7:51"},"referencedDeclaration":72590,"src":"1177:7:51","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65115,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"1207:12:51","nodeType":"VariableDeclaration","scope":65120,"src":"1199:20:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":65114,"name":"uint160","nodeType":"ElementaryTypeName","src":"1199:7:51","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"1160:60:51"},"returnParameters":{"id":65119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65120,"src":"1239:6:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":65117,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1239:6:51","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1238:8:51"},"scope":65294,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65135,"nodeType":"FunctionDefinition","src":"1657:139:51","nodes":[],"documentation":{"id":65121,"nodeType":"StructuredDocumentation","src":"1253:399:51","text":"@notice The hook called after the state of a pool is initialized\n @param sender The initial msg.sender for the initialize call\n @param key The key for the pool being initialized\n @param sqrtPriceX96 The sqrt(price) of the pool as a Q64.96\n @param tick The current tick after the state of a pool is initialized\n @return bytes4 The function selector for the hook"},"functionSelector":"6fe7e6eb","implemented":false,"kind":"function","modifiers":[],"name":"afterInitialize","nameLocation":"1666:15:51","parameters":{"id":65131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65123,"mutability":"mutable","name":"sender","nameLocation":"1690:6:51","nodeType":"VariableDeclaration","scope":65135,"src":"1682:14:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65122,"name":"address","nodeType":"ElementaryTypeName","src":"1682:7:51","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65126,"mutability":"mutable","name":"key","nameLocation":"1715:3:51","nodeType":"VariableDeclaration","scope":65135,"src":"1698:20:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_calldata_ptr","typeString":"struct PoolKey"},"typeName":{"id":65125,"nodeType":"UserDefinedTypeName","pathNode":{"id":65124,"name":"PoolKey","nameLocations":["1698:7:51"],"nodeType":"IdentifierPath","referencedDeclaration":72590,"src":"1698:7:51"},"referencedDeclaration":72590,"src":"1698:7:51","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65128,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"1728:12:51","nodeType":"VariableDeclaration","scope":65135,"src":"1720:20:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":65127,"name":"uint160","nodeType":"ElementaryTypeName","src":"1720:7:51","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":65130,"mutability":"mutable","name":"tick","nameLocation":"1748:4:51","nodeType":"VariableDeclaration","scope":65135,"src":"1742:10:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":65129,"name":"int24","nodeType":"ElementaryTypeName","src":"1742:5:51","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1681:72:51"},"returnParameters":{"id":65134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65135,"src":"1788:6:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":65132,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1788:6:51","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1787:8:51"},"scope":65294,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65151,"nodeType":"FunctionDefinition","src":"2209:194:51","nodes":[],"documentation":{"id":65136,"nodeType":"StructuredDocumentation","src":"1802:402:51","text":"@notice The hook called before liquidity is added\n @param sender The initial msg.sender for the add liquidity call\n @param key The key for the pool\n @param params The parameters for adding liquidity\n @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\n @return bytes4 The function selector for the hook"},"functionSelector":"259982e5","implemented":false,"kind":"function","modifiers":[],"name":"beforeAddLiquidity","nameLocation":"2218:18:51","parameters":{"id":65147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65138,"mutability":"mutable","name":"sender","nameLocation":"2254:6:51","nodeType":"VariableDeclaration","scope":65151,"src":"2246:14:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65137,"name":"address","nodeType":"ElementaryTypeName","src":"2246:7:51","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65141,"mutability":"mutable","name":"key","nameLocation":"2287:3:51","nodeType":"VariableDeclaration","scope":65151,"src":"2270:20:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_calldata_ptr","typeString":"struct PoolKey"},"typeName":{"id":65140,"nodeType":"UserDefinedTypeName","pathNode":{"id":65139,"name":"PoolKey","nameLocations":["2270:7:51"],"nodeType":"IdentifierPath","referencedDeclaration":72590,"src":"2270:7:51"},"referencedDeclaration":72590,"src":"2270:7:51","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65144,"mutability":"mutable","name":"params","nameLocation":"2331:6:51","nodeType":"VariableDeclaration","scope":65151,"src":"2300:37:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyLiquidityParams_$72606_calldata_ptr","typeString":"struct ModifyLiquidityParams"},"typeName":{"id":65143,"nodeType":"UserDefinedTypeName","pathNode":{"id":65142,"name":"ModifyLiquidityParams","nameLocations":["2300:21:51"],"nodeType":"IdentifierPath","referencedDeclaration":72606,"src":"2300:21:51"},"referencedDeclaration":72606,"src":"2300:21:51","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyLiquidityParams_$72606_storage_ptr","typeString":"struct ModifyLiquidityParams"}},"visibility":"internal"},{"constant":false,"id":65146,"mutability":"mutable","name":"hookData","nameLocation":"2362:8:51","nodeType":"VariableDeclaration","scope":65151,"src":"2347:23:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65145,"name":"bytes","nodeType":"ElementaryTypeName","src":"2347:5:51","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2236:140:51"},"returnParameters":{"id":65150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65151,"src":"2395:6:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":65148,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2395:6:51","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2394:8:51"},"scope":65294,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65176,"nodeType":"FunctionDefinition","src":"3195:269:51","nodes":[],"documentation":{"id":65152,"nodeType":"StructuredDocumentation","src":"2409:781:51","text":"@notice The hook called after liquidity is added\n @param sender The initial msg.sender for the add liquidity call\n @param key The key for the pool\n @param params The parameters for adding liquidity\n @param delta The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\n @param feesAccrued The fees accrued since the last time fees were collected from this position\n @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\n @return bytes4 The function selector for the hook\n @return BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"},"functionSelector":"9f063efc","implemented":false,"kind":"function","modifiers":[],"name":"afterAddLiquidity","nameLocation":"3204:17:51","parameters":{"id":65169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65154,"mutability":"mutable","name":"sender","nameLocation":"3239:6:51","nodeType":"VariableDeclaration","scope":65176,"src":"3231:14:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65153,"name":"address","nodeType":"ElementaryTypeName","src":"3231:7:51","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65157,"mutability":"mutable","name":"key","nameLocation":"3272:3:51","nodeType":"VariableDeclaration","scope":65176,"src":"3255:20:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_calldata_ptr","typeString":"struct PoolKey"},"typeName":{"id":65156,"nodeType":"UserDefinedTypeName","pathNode":{"id":65155,"name":"PoolKey","nameLocations":["3255:7:51"],"nodeType":"IdentifierPath","referencedDeclaration":72590,"src":"3255:7:51"},"referencedDeclaration":72590,"src":"3255:7:51","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65160,"mutability":"mutable","name":"params","nameLocation":"3316:6:51","nodeType":"VariableDeclaration","scope":65176,"src":"3285:37:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyLiquidityParams_$72606_calldata_ptr","typeString":"struct ModifyLiquidityParams"},"typeName":{"id":65159,"nodeType":"UserDefinedTypeName","pathNode":{"id":65158,"name":"ModifyLiquidityParams","nameLocations":["3285:21:51"],"nodeType":"IdentifierPath","referencedDeclaration":72606,"src":"3285:21:51"},"referencedDeclaration":72606,"src":"3285:21:51","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyLiquidityParams_$72606_storage_ptr","typeString":"struct ModifyLiquidityParams"}},"visibility":"internal"},{"constant":false,"id":65163,"mutability":"mutable","name":"delta","nameLocation":"3345:5:51","nodeType":"VariableDeclaration","scope":65176,"src":"3332:18:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72030","typeString":"BalanceDelta"},"typeName":{"id":65162,"nodeType":"UserDefinedTypeName","pathNode":{"id":65161,"name":"BalanceDelta","nameLocations":["3332:12:51"],"nodeType":"IdentifierPath","referencedDeclaration":72030,"src":"3332:12:51"},"referencedDeclaration":72030,"src":"3332:12:51","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72030","typeString":"BalanceDelta"}},"visibility":"internal"},{"constant":false,"id":65166,"mutability":"mutable","name":"feesAccrued","nameLocation":"3373:11:51","nodeType":"VariableDeclaration","scope":65176,"src":"3360:24:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72030","typeString":"BalanceDelta"},"typeName":{"id":65165,"nodeType":"UserDefinedTypeName","pathNode":{"id":65164,"name":"BalanceDelta","nameLocations":["3360:12:51"],"nodeType":"IdentifierPath","referencedDeclaration":72030,"src":"3360:12:51"},"referencedDeclaration":72030,"src":"3360:12:51","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72030","typeString":"BalanceDelta"}},"visibility":"internal"},{"constant":false,"id":65168,"mutability":"mutable","name":"hookData","nameLocation":"3409:8:51","nodeType":"VariableDeclaration","scope":65176,"src":"3394:23:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65167,"name":"bytes","nodeType":"ElementaryTypeName","src":"3394:5:51","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3221:202:51"},"returnParameters":{"id":65175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65176,"src":"3442:6:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":65170,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3442:6:51","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":65174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65176,"src":"3450:12:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72030","typeString":"BalanceDelta"},"typeName":{"id":65173,"nodeType":"UserDefinedTypeName","pathNode":{"id":65172,"name":"BalanceDelta","nameLocations":["3450:12:51"],"nodeType":"IdentifierPath","referencedDeclaration":72030,"src":"3450:12:51"},"referencedDeclaration":72030,"src":"3450:12:51","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72030","typeString":"BalanceDelta"}},"visibility":"internal"}],"src":"3441:22:51"},"scope":65294,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65192,"nodeType":"FunctionDefinition","src":"3887:197:51","nodes":[],"documentation":{"id":65177,"nodeType":"StructuredDocumentation","src":"3470:412:51","text":"@notice The hook called before liquidity is removed\n @param sender The initial msg.sender for the remove liquidity call\n @param key The key for the pool\n @param params The parameters for removing liquidity\n @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\n @return bytes4 The function selector for the hook"},"functionSelector":"21d0ee70","implemented":false,"kind":"function","modifiers":[],"name":"beforeRemoveLiquidity","nameLocation":"3896:21:51","parameters":{"id":65188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65179,"mutability":"mutable","name":"sender","nameLocation":"3935:6:51","nodeType":"VariableDeclaration","scope":65192,"src":"3927:14:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65178,"name":"address","nodeType":"ElementaryTypeName","src":"3927:7:51","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65182,"mutability":"mutable","name":"key","nameLocation":"3968:3:51","nodeType":"VariableDeclaration","scope":65192,"src":"3951:20:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_calldata_ptr","typeString":"struct PoolKey"},"typeName":{"id":65181,"nodeType":"UserDefinedTypeName","pathNode":{"id":65180,"name":"PoolKey","nameLocations":["3951:7:51"],"nodeType":"IdentifierPath","referencedDeclaration":72590,"src":"3951:7:51"},"referencedDeclaration":72590,"src":"3951:7:51","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65185,"mutability":"mutable","name":"params","nameLocation":"4012:6:51","nodeType":"VariableDeclaration","scope":65192,"src":"3981:37:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyLiquidityParams_$72606_calldata_ptr","typeString":"struct ModifyLiquidityParams"},"typeName":{"id":65184,"nodeType":"UserDefinedTypeName","pathNode":{"id":65183,"name":"ModifyLiquidityParams","nameLocations":["3981:21:51"],"nodeType":"IdentifierPath","referencedDeclaration":72606,"src":"3981:21:51"},"referencedDeclaration":72606,"src":"3981:21:51","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyLiquidityParams_$72606_storage_ptr","typeString":"struct ModifyLiquidityParams"}},"visibility":"internal"},{"constant":false,"id":65187,"mutability":"mutable","name":"hookData","nameLocation":"4043:8:51","nodeType":"VariableDeclaration","scope":65192,"src":"4028:23:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65186,"name":"bytes","nodeType":"ElementaryTypeName","src":"4028:5:51","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3917:140:51"},"returnParameters":{"id":65191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65192,"src":"4076:6:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":65189,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4076:6:51","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4075:8:51"},"scope":65294,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65217,"nodeType":"FunctionDefinition","src":"4888:272:51","nodes":[],"documentation":{"id":65193,"nodeType":"StructuredDocumentation","src":"4090:793:51","text":"@notice The hook called after liquidity is removed\n @param sender The initial msg.sender for the remove liquidity call\n @param key The key for the pool\n @param params The parameters for removing liquidity\n @param delta The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta\n @param feesAccrued The fees accrued since the last time fees were collected from this position\n @param hookData Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\n @return bytes4 The function selector for the hook\n @return BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"},"functionSelector":"6c2bbe7e","implemented":false,"kind":"function","modifiers":[],"name":"afterRemoveLiquidity","nameLocation":"4897:20:51","parameters":{"id":65210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65195,"mutability":"mutable","name":"sender","nameLocation":"4935:6:51","nodeType":"VariableDeclaration","scope":65217,"src":"4927:14:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65194,"name":"address","nodeType":"ElementaryTypeName","src":"4927:7:51","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65198,"mutability":"mutable","name":"key","nameLocation":"4968:3:51","nodeType":"VariableDeclaration","scope":65217,"src":"4951:20:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_calldata_ptr","typeString":"struct PoolKey"},"typeName":{"id":65197,"nodeType":"UserDefinedTypeName","pathNode":{"id":65196,"name":"PoolKey","nameLocations":["4951:7:51"],"nodeType":"IdentifierPath","referencedDeclaration":72590,"src":"4951:7:51"},"referencedDeclaration":72590,"src":"4951:7:51","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65201,"mutability":"mutable","name":"params","nameLocation":"5012:6:51","nodeType":"VariableDeclaration","scope":65217,"src":"4981:37:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyLiquidityParams_$72606_calldata_ptr","typeString":"struct ModifyLiquidityParams"},"typeName":{"id":65200,"nodeType":"UserDefinedTypeName","pathNode":{"id":65199,"name":"ModifyLiquidityParams","nameLocations":["4981:21:51"],"nodeType":"IdentifierPath","referencedDeclaration":72606,"src":"4981:21:51"},"referencedDeclaration":72606,"src":"4981:21:51","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyLiquidityParams_$72606_storage_ptr","typeString":"struct ModifyLiquidityParams"}},"visibility":"internal"},{"constant":false,"id":65204,"mutability":"mutable","name":"delta","nameLocation":"5041:5:51","nodeType":"VariableDeclaration","scope":65217,"src":"5028:18:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72030","typeString":"BalanceDelta"},"typeName":{"id":65203,"nodeType":"UserDefinedTypeName","pathNode":{"id":65202,"name":"BalanceDelta","nameLocations":["5028:12:51"],"nodeType":"IdentifierPath","referencedDeclaration":72030,"src":"5028:12:51"},"referencedDeclaration":72030,"src":"5028:12:51","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72030","typeString":"BalanceDelta"}},"visibility":"internal"},{"constant":false,"id":65207,"mutability":"mutable","name":"feesAccrued","nameLocation":"5069:11:51","nodeType":"VariableDeclaration","scope":65217,"src":"5056:24:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72030","typeString":"BalanceDelta"},"typeName":{"id":65206,"nodeType":"UserDefinedTypeName","pathNode":{"id":65205,"name":"BalanceDelta","nameLocations":["5056:12:51"],"nodeType":"IdentifierPath","referencedDeclaration":72030,"src":"5056:12:51"},"referencedDeclaration":72030,"src":"5056:12:51","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72030","typeString":"BalanceDelta"}},"visibility":"internal"},{"constant":false,"id":65209,"mutability":"mutable","name":"hookData","nameLocation":"5105:8:51","nodeType":"VariableDeclaration","scope":65217,"src":"5090:23:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65208,"name":"bytes","nodeType":"ElementaryTypeName","src":"5090:5:51","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4917:202:51"},"returnParameters":{"id":65216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65217,"src":"5138:6:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":65211,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5138:6:51","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":65215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65217,"src":"5146:12:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72030","typeString":"BalanceDelta"},"typeName":{"id":65214,"nodeType":"UserDefinedTypeName","pathNode":{"id":65213,"name":"BalanceDelta","nameLocations":["5146:12:51"],"nodeType":"IdentifierPath","referencedDeclaration":72030,"src":"5146:12:51"},"referencedDeclaration":72030,"src":"5146:12:51","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72030","typeString":"BalanceDelta"}},"visibility":"internal"}],"src":"5137:22:51"},"scope":65294,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65238,"nodeType":"FunctionDefinition","src":"5961:178:51","nodes":[],"documentation":{"id":65218,"nodeType":"StructuredDocumentation","src":"5166:790:51","text":"@notice The hook called before a swap\n @param sender The initial msg.sender for the swap call\n @param key The key for the pool\n @param params The parameters for the swap\n @param hookData Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\n @return bytes4 The function selector for the hook\n @return BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\n @return uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"},"functionSelector":"575e24b4","implemented":false,"kind":"function","modifiers":[],"name":"beforeSwap","nameLocation":"5970:10:51","parameters":{"id":65229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65220,"mutability":"mutable","name":"sender","nameLocation":"5989:6:51","nodeType":"VariableDeclaration","scope":65238,"src":"5981:14:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65219,"name":"address","nodeType":"ElementaryTypeName","src":"5981:7:51","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65223,"mutability":"mutable","name":"key","nameLocation":"6014:3:51","nodeType":"VariableDeclaration","scope":65238,"src":"5997:20:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_calldata_ptr","typeString":"struct PoolKey"},"typeName":{"id":65222,"nodeType":"UserDefinedTypeName","pathNode":{"id":65221,"name":"PoolKey","nameLocations":["5997:7:51"],"nodeType":"IdentifierPath","referencedDeclaration":72590,"src":"5997:7:51"},"referencedDeclaration":72590,"src":"5997:7:51","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65226,"mutability":"mutable","name":"params","nameLocation":"6039:6:51","nodeType":"VariableDeclaration","scope":65238,"src":"6019:26:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$72617_calldata_ptr","typeString":"struct SwapParams"},"typeName":{"id":65225,"nodeType":"UserDefinedTypeName","pathNode":{"id":65224,"name":"SwapParams","nameLocations":["6019:10:51"],"nodeType":"IdentifierPath","referencedDeclaration":72617,"src":"6019:10:51"},"referencedDeclaration":72617,"src":"6019:10:51","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$72617_storage_ptr","typeString":"struct SwapParams"}},"visibility":"internal"},{"constant":false,"id":65228,"mutability":"mutable","name":"hookData","nameLocation":"6062:8:51","nodeType":"VariableDeclaration","scope":65238,"src":"6047:23:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65227,"name":"bytes","nodeType":"ElementaryTypeName","src":"6047:5:51","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5980:91:51"},"returnParameters":{"id":65237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65238,"src":"6106:6:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":65230,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6106:6:51","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":65234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65238,"src":"6114:15:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BeforeSwapDelta_$72192","typeString":"BeforeSwapDelta"},"typeName":{"id":65233,"nodeType":"UserDefinedTypeName","pathNode":{"id":65232,"name":"BeforeSwapDelta","nameLocations":["6114:15:51"],"nodeType":"IdentifierPath","referencedDeclaration":72192,"src":"6114:15:51"},"referencedDeclaration":72192,"src":"6114:15:51","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BeforeSwapDelta_$72192","typeString":"BeforeSwapDelta"}},"visibility":"internal"},{"constant":false,"id":65236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65238,"src":"6131:6:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":65235,"name":"uint24","nodeType":"ElementaryTypeName","src":"6131:6:51","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"6105:33:51"},"scope":65294,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65259,"nodeType":"FunctionDefinition","src":"6752:210:51","nodes":[],"documentation":{"id":65239,"nodeType":"StructuredDocumentation","src":"6145:602:51","text":"@notice The hook called after a swap\n @param sender The initial msg.sender for the swap call\n @param key The key for the pool\n @param params The parameters for the swap\n @param delta The amount owed to the caller (positive) or owed to the pool (negative)\n @param hookData Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\n @return bytes4 The function selector for the hook\n @return int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"},"functionSelector":"b47b2fb1","implemented":false,"kind":"function","modifiers":[],"name":"afterSwap","nameLocation":"6761:9:51","parameters":{"id":65253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65241,"mutability":"mutable","name":"sender","nameLocation":"6788:6:51","nodeType":"VariableDeclaration","scope":65259,"src":"6780:14:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65240,"name":"address","nodeType":"ElementaryTypeName","src":"6780:7:51","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65244,"mutability":"mutable","name":"key","nameLocation":"6821:3:51","nodeType":"VariableDeclaration","scope":65259,"src":"6804:20:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_calldata_ptr","typeString":"struct PoolKey"},"typeName":{"id":65243,"nodeType":"UserDefinedTypeName","pathNode":{"id":65242,"name":"PoolKey","nameLocations":["6804:7:51"],"nodeType":"IdentifierPath","referencedDeclaration":72590,"src":"6804:7:51"},"referencedDeclaration":72590,"src":"6804:7:51","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65247,"mutability":"mutable","name":"params","nameLocation":"6854:6:51","nodeType":"VariableDeclaration","scope":65259,"src":"6834:26:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$72617_calldata_ptr","typeString":"struct SwapParams"},"typeName":{"id":65246,"nodeType":"UserDefinedTypeName","pathNode":{"id":65245,"name":"SwapParams","nameLocations":["6834:10:51"],"nodeType":"IdentifierPath","referencedDeclaration":72617,"src":"6834:10:51"},"referencedDeclaration":72617,"src":"6834:10:51","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$72617_storage_ptr","typeString":"struct SwapParams"}},"visibility":"internal"},{"constant":false,"id":65250,"mutability":"mutable","name":"delta","nameLocation":"6883:5:51","nodeType":"VariableDeclaration","scope":65259,"src":"6870:18:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72030","typeString":"BalanceDelta"},"typeName":{"id":65249,"nodeType":"UserDefinedTypeName","pathNode":{"id":65248,"name":"BalanceDelta","nameLocations":["6870:12:51"],"nodeType":"IdentifierPath","referencedDeclaration":72030,"src":"6870:12:51"},"referencedDeclaration":72030,"src":"6870:12:51","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72030","typeString":"BalanceDelta"}},"visibility":"internal"},{"constant":false,"id":65252,"mutability":"mutable","name":"hookData","nameLocation":"6913:8:51","nodeType":"VariableDeclaration","scope":65259,"src":"6898:23:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65251,"name":"bytes","nodeType":"ElementaryTypeName","src":"6898:5:51","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6770:157:51"},"returnParameters":{"id":65258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65259,"src":"6946:6:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":65254,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6946:6:51","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":65257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65259,"src":"6954:6:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":65256,"name":"int128","nodeType":"ElementaryTypeName","src":"6954:6:51","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"6945:16:51"},"scope":65294,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65276,"nodeType":"FunctionDefinition","src":"7404:191:51","nodes":[],"documentation":{"id":65260,"nodeType":"StructuredDocumentation","src":"6968:431:51","text":"@notice The hook called before donate\n @param sender The initial msg.sender for the donate call\n @param key The key for the pool\n @param amount0 The amount of token0 being donated\n @param amount1 The amount of token1 being donated\n @param hookData Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\n @return bytes4 The function selector for the hook"},"functionSelector":"b6a8b0fa","implemented":false,"kind":"function","modifiers":[],"name":"beforeDonate","nameLocation":"7413:12:51","parameters":{"id":65272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65262,"mutability":"mutable","name":"sender","nameLocation":"7443:6:51","nodeType":"VariableDeclaration","scope":65276,"src":"7435:14:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65261,"name":"address","nodeType":"ElementaryTypeName","src":"7435:7:51","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65265,"mutability":"mutable","name":"key","nameLocation":"7476:3:51","nodeType":"VariableDeclaration","scope":65276,"src":"7459:20:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_calldata_ptr","typeString":"struct PoolKey"},"typeName":{"id":65264,"nodeType":"UserDefinedTypeName","pathNode":{"id":65263,"name":"PoolKey","nameLocations":["7459:7:51"],"nodeType":"IdentifierPath","referencedDeclaration":72590,"src":"7459:7:51"},"referencedDeclaration":72590,"src":"7459:7:51","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65267,"mutability":"mutable","name":"amount0","nameLocation":"7497:7:51","nodeType":"VariableDeclaration","scope":65276,"src":"7489:15:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65266,"name":"uint256","nodeType":"ElementaryTypeName","src":"7489:7:51","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":65269,"mutability":"mutable","name":"amount1","nameLocation":"7522:7:51","nodeType":"VariableDeclaration","scope":65276,"src":"7514:15:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65268,"name":"uint256","nodeType":"ElementaryTypeName","src":"7514:7:51","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":65271,"mutability":"mutable","name":"hookData","nameLocation":"7554:8:51","nodeType":"VariableDeclaration","scope":65276,"src":"7539:23:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65270,"name":"bytes","nodeType":"ElementaryTypeName","src":"7539:5:51","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7425:143:51"},"returnParameters":{"id":65275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65276,"src":"7587:6:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":65273,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7587:6:51","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"7586:8:51"},"scope":65294,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65293,"nodeType":"FunctionDefinition","src":"8036:190:51","nodes":[],"documentation":{"id":65277,"nodeType":"StructuredDocumentation","src":"7601:430:51","text":"@notice The hook called after donate\n @param sender The initial msg.sender for the donate call\n @param key The key for the pool\n @param amount0 The amount of token0 being donated\n @param amount1 The amount of token1 being donated\n @param hookData Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\n @return bytes4 The function selector for the hook"},"functionSelector":"e1b4af69","implemented":false,"kind":"function","modifiers":[],"name":"afterDonate","nameLocation":"8045:11:51","parameters":{"id":65289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65279,"mutability":"mutable","name":"sender","nameLocation":"8074:6:51","nodeType":"VariableDeclaration","scope":65293,"src":"8066:14:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65278,"name":"address","nodeType":"ElementaryTypeName","src":"8066:7:51","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65282,"mutability":"mutable","name":"key","nameLocation":"8107:3:51","nodeType":"VariableDeclaration","scope":65293,"src":"8090:20:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_calldata_ptr","typeString":"struct PoolKey"},"typeName":{"id":65281,"nodeType":"UserDefinedTypeName","pathNode":{"id":65280,"name":"PoolKey","nameLocations":["8090:7:51"],"nodeType":"IdentifierPath","referencedDeclaration":72590,"src":"8090:7:51"},"referencedDeclaration":72590,"src":"8090:7:51","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72590_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65284,"mutability":"mutable","name":"amount0","nameLocation":"8128:7:51","nodeType":"VariableDeclaration","scope":65293,"src":"8120:15:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65283,"name":"uint256","nodeType":"ElementaryTypeName","src":"8120:7:51","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":65286,"mutability":"mutable","name":"amount1","nameLocation":"8153:7:51","nodeType":"VariableDeclaration","scope":65293,"src":"8145:15:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65285,"name":"uint256","nodeType":"ElementaryTypeName","src":"8145:7:51","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":65288,"mutability":"mutable","name":"hookData","nameLocation":"8185:8:51","nodeType":"VariableDeclaration","scope":65293,"src":"8170:23:51","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65287,"name":"bytes","nodeType":"ElementaryTypeName","src":"8170:5:51","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8056:143:51"},"returnParameters":{"id":65292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65293,"src":"8218:6:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":65290,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8218:6:51","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"8217:8:51"},"scope":65294,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IHooks","contractDependencies":[],"contractKind":"interface","documentation":{"id":65107,"nodeType":"StructuredDocumentation","src":"300:485:51","text":"@notice V4 decides whether to invoke specific hooks by inspecting the least significant bits\n of the address that the hooks contract is deployed to.\n For example, a hooks contract deployed to address: 0x0000000000000000000000000000000000002400\n has the lowest bits '10 0100 0000 0000' which would cause the 'before initialize' and 'after add liquidity' hooks to be used.\n See the Hooks library for the full spec.\n @dev Should only be callable by the v4 PoolManager."},"fullyImplemented":false,"linearizedBaseContracts":[65294],"name":"IHooks","nameLocation":"795:6:51","scope":65295,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":51}