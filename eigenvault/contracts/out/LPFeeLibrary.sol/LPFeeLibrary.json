{"abi":[{"type":"function","name":"DYNAMIC_FEE_FLAG","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"MAX_LP_FEE","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"OVERRIDE_FEE_FLAG","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"REMOVE_OVERRIDE_MASK","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"error","name":"LPFeeTooLarge","inputs":[{"name":"fee","type":"uint24","internalType":"uint24"}]}],"bytecode":{"object":"0x61015961004d600b8282823980515f1a6073146041577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610055575f3560e01c80633b01d64d146100595780633fc48eba146100775780636f95ebcf14610095578063f26ef49d146100b3575b5f80fd5b6100616100d1565b60405161006e919061010a565b60405180910390f35b61007f6100d8565b60405161008c919061010a565b60405180910390f35b61009d6100df565b6040516100aa919061010a565b60405180910390f35b6100bb6100e6565b6040516100c8919061010a565b60405180910390f35b6240000081565b620f424081565b62bfffff81565b6280000081565b5f62ffffff82169050919050565b610104816100ed565b82525050565b5f60208201905061011d5f8301846100fb565b9291505056fea26469706673582212209fc24976c96dd99eac63df3c9d9ea9a945797510e7c836a0c3bc20d7149f75e664736f6c634300081a0033","sourceMap":"166:3429:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x7300000000000000000000000000000000000000003014608060405260043610610055575f3560e01c80633b01d64d146100595780633fc48eba146100775780636f95ebcf14610095578063f26ef49d146100b3575b5f80fd5b6100616100d1565b60405161006e919061010a565b60405180910390f35b61007f6100d8565b60405161008c919061010a565b60405180910390f35b61009d6100df565b6040516100aa919061010a565b60405180910390f35b6100bb6100e6565b6040516100c8919061010a565b60405180910390f35b6240000081565b620f424081565b62bfffff81565b6280000081565b5f62ffffff82169050919050565b610104816100ed565b82525050565b5f60208201905061011d5f8301846100fb565b9291505056fea26469706673582212209fc24976c96dd99eac63df3c9d9ea9a945797510e7c836a0c3bc20d7149f75e664736f6c634300081a0033","sourceMap":"166:3429:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1075:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;929:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;510:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;776:51;819:8;776:51;:::o;1075:43::-;1111:7;1075:43;:::o;929:54::-;975:8;929:54;:::o;510:50::-;552:8;510:50;:::o;7:91:87:-;43:7;83:8;76:5;72:20;61:31;;7:91;;;:::o;104:123::-;197:23;214:5;197:23;:::i;:::-;192:3;185:36;104:123;;:::o;233:234::-;332:4;370:2;359:9;355:18;347:26;;383:77;457:1;446:9;442:17;433:6;383:77;:::i;:::-;233:234;;;;:::o","linkReferences":{}},"methodIdentifiers":{"DYNAMIC_FEE_FLAG()":"f26ef49d","MAX_LP_FEE()":"3fc48eba","OVERRIDE_FEE_FLAG()":"3b01d64d","REMOVE_OVERRIDE_MASK()":"6f95ebcf"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"LPFeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DYNAMIC_FEE_FLAG\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_LP_FEE\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OVERRIDE_FEE_FLAG\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REMOVE_OVERRIDE_MASK\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"LPFeeTooLarge(uint24)\":[{\"notice\":\"Thrown when the static or dynamic fee on a pool exceeds 100%.\"}]},\"kind\":\"user\",\"methods\":{\"DYNAMIC_FEE_FLAG()\":{\"notice\":\"An lp fee of exactly 0b1000000... signals a dynamic fee pool. This isn't a valid static fee as it is > MAX_LP_FEE\"},\"MAX_LP_FEE()\":{\"notice\":\"the lp fee is represented in hundredths of a bip, so the max is 100%\"},\"OVERRIDE_FEE_FLAG()\":{\"notice\":\"the second bit of the fee returned by beforeSwap is used to signal if the stored LP fee should be overridden in this swap\"},\"REMOVE_OVERRIDE_MASK()\":{\"notice\":\"mask to remove the override fee flag from a fee returned by the beforeSwaphook\"}},\"notice\":\"Library of helper functions for a pools LP fee\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v4-core/src/libraries/LPFeeLibrary.sol\":\"LPFeeLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/src/\",\":@eigenlayer/=lib/eigenlayer-contracts/src/contracts/\",\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\",\":zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/\"]},\"sources\":{\"lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475\",\"dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"type":"error","name":"LPFeeTooLarge"},{"inputs":[],"stateMutability":"view","type":"function","name":"DYNAMIC_FEE_FLAG","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_LP_FEE","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"OVERRIDE_FEE_FLAG","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"REMOVE_OVERRIDE_MASK","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"DYNAMIC_FEE_FLAG()":{"notice":"An lp fee of exactly 0b1000000... signals a dynamic fee pool. This isn't a valid static fee as it is > MAX_LP_FEE"},"MAX_LP_FEE()":{"notice":"the lp fee is represented in hundredths of a bip, so the max is 100%"},"OVERRIDE_FEE_FLAG()":{"notice":"the second bit of the fee returned by beforeSwap is used to signal if the stored LP fee should be overridden in this swap"},"REMOVE_OVERRIDE_MASK()":{"notice":"mask to remove the override fee flag from a fee returned by the beforeSwaphook"}},"version":1}},"settings":{"remappings":["@eigenlayer-middleware/=lib/eigenlayer-middleware/src/","@eigenlayer/=lib/eigenlayer-contracts/src/contracts/","@ensdomains/=lib/v4-core/node_modules/@ensdomains/","@forge-std/=lib/forge-std/src/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v4-core/=lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-core/node_modules/hardhat/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-core/lib/solmate/","v4-core/=lib/v4-core/src/","v4-periphery/=lib/v4-periphery/","zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/v4-core/src/libraries/LPFeeLibrary.sol":"LPFeeLibrary"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/v4-core/src/libraries/CustomRevert.sol":{"keccak256":"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de","urls":["bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd","dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"],"license":"MIT"},"lib/v4-core/src/libraries/LPFeeLibrary.sol":{"keccak256":"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b","urls":["bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475","dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/v4-core/src/libraries/LPFeeLibrary.sol","id":67618,"exportedSymbols":{"CustomRevert":[66111],"LPFeeLibrary":[67617]},"nodeType":"SourceUnit","src":"32:3564:65","nodes":[{"id":67470,"nodeType":"PragmaDirective","src":"32:23:65","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":67472,"nodeType":"ImportDirective","src":"57:48:65","nodes":[],"absolutePath":"lib/v4-core/src/libraries/CustomRevert.sol","file":"./CustomRevert.sol","nameLocation":"-1:-1:-1","scope":67618,"sourceUnit":66112,"symbolAliases":[{"foreign":{"id":67471,"name":"CustomRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66111,"src":"65:12:65","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":67617,"nodeType":"ContractDefinition","src":"166:3429:65","nodes":[{"id":67476,"nodeType":"UsingForDirective","src":"193:30:65","nodes":[],"global":false,"libraryName":{"id":67474,"name":"LPFeeLibrary","nameLocations":["199:12:65"],"nodeType":"IdentifierPath","referencedDeclaration":67617,"src":"199:12:65"},"typeName":{"id":67475,"name":"uint24","nodeType":"ElementaryTypeName","src":"216:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}},{"id":67479,"nodeType":"UsingForDirective","src":"228:30:65","nodes":[],"global":false,"libraryName":{"id":67477,"name":"CustomRevert","nameLocations":["234:12:65"],"nodeType":"IdentifierPath","referencedDeclaration":66111,"src":"234:12:65"},"typeName":{"id":67478,"name":"bytes4","nodeType":"ElementaryTypeName","src":"251:6:65","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}},{"id":67484,"nodeType":"ErrorDefinition","src":"342:32:65","nodes":[],"documentation":{"id":67480,"nodeType":"StructuredDocumentation","src":"264:73:65","text":"@notice Thrown when the static or dynamic fee on a pool exceeds 100%."},"errorSelector":"14002113","name":"LPFeeTooLarge","nameLocation":"348:13:65","parameters":{"id":67483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67482,"mutability":"mutable","name":"fee","nameLocation":"369:3:65","nodeType":"VariableDeclaration","scope":67484,"src":"362:10:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67481,"name":"uint24","nodeType":"ElementaryTypeName","src":"362:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"361:12:65"}},{"id":67488,"nodeType":"VariableDeclaration","src":"510:50:65","nodes":[],"constant":true,"documentation":{"id":67485,"nodeType":"StructuredDocumentation","src":"380:125:65","text":"@notice An lp fee of exactly 0b1000000... signals a dynamic fee pool. This isn't a valid static fee as it is > MAX_LP_FEE"},"functionSelector":"f26ef49d","mutability":"constant","name":"DYNAMIC_FEE_FLAG","nameLocation":"533:16:65","scope":67617,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67486,"name":"uint24","nodeType":"ElementaryTypeName","src":"510:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"3078383030303030","id":67487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:8:65","typeDescriptions":{"typeIdentifier":"t_rational_8388608_by_1","typeString":"int_const 8388608"},"value":"0x800000"},"visibility":"public"},{"id":67492,"nodeType":"VariableDeclaration","src":"776:51:65","nodes":[],"constant":true,"documentation":{"id":67489,"nodeType":"StructuredDocumentation","src":"567:133:65","text":"@notice the second bit of the fee returned by beforeSwap is used to signal if the stored LP fee should be overridden in this swap"},"functionSelector":"3b01d64d","mutability":"constant","name":"OVERRIDE_FEE_FLAG","nameLocation":"799:17:65","scope":67617,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67490,"name":"uint24","nodeType":"ElementaryTypeName","src":"776:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"3078343030303030","id":67491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"819:8:65","typeDescriptions":{"typeIdentifier":"t_rational_4194304_by_1","typeString":"int_const 4194304"},"value":"0x400000"},"visibility":"public"},{"id":67496,"nodeType":"VariableDeclaration","src":"929:54:65","nodes":[],"constant":true,"documentation":{"id":67493,"nodeType":"StructuredDocumentation","src":"834:90:65","text":"@notice mask to remove the override fee flag from a fee returned by the beforeSwaphook"},"functionSelector":"6f95ebcf","mutability":"constant","name":"REMOVE_OVERRIDE_MASK","nameLocation":"952:20:65","scope":67617,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67494,"name":"uint24","nodeType":"ElementaryTypeName","src":"929:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"3078424646464646","id":67495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"975:8:65","typeDescriptions":{"typeIdentifier":"t_rational_12582911_by_1","typeString":"int_const 12582911"},"value":"0xBFFFFF"},"visibility":"public"},{"id":67500,"nodeType":"VariableDeclaration","src":"1075:43:65","nodes":[],"constant":true,"documentation":{"id":67497,"nodeType":"StructuredDocumentation","src":"990:80:65","text":"@notice the lp fee is represented in hundredths of a bip, so the max is 100%"},"functionSelector":"3fc48eba","mutability":"constant","name":"MAX_LP_FEE","nameLocation":"1098:10:65","scope":67617,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67498,"name":"uint24","nodeType":"ElementaryTypeName","src":"1075:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"31303030303030","id":67499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1111:7:65","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"visibility":"public"},{"id":67513,"nodeType":"FunctionDefinition","src":"1298:112:65","nodes":[],"body":{"id":67512,"nodeType":"Block","src":"1362:48:65","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":67510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":67508,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67503,"src":"1379:4:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":67509,"name":"DYNAMIC_FEE_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67488,"src":"1387:16:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"1379:24:65","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":67507,"id":67511,"nodeType":"Return","src":"1372:31:65"}]},"documentation":{"id":67501,"nodeType":"StructuredDocumentation","src":"1125:168:65","text":"@notice returns true if a pool's LP fee signals that the pool has a dynamic fee\n @param self The fee to check\n @return bool True of the fee is dynamic"},"implemented":true,"kind":"function","modifiers":[],"name":"isDynamicFee","nameLocation":"1307:12:65","parameters":{"id":67504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67503,"mutability":"mutable","name":"self","nameLocation":"1327:4:65","nodeType":"VariableDeclaration","scope":67513,"src":"1320:11:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67502,"name":"uint24","nodeType":"ElementaryTypeName","src":"1320:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1319:13:65"},"returnParameters":{"id":67507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67513,"src":"1356:4:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":67505,"name":"bool","nodeType":"ElementaryTypeName","src":"1356:4:65","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1355:6:65"},"scope":67617,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":67526,"nodeType":"FunctionDefinition","src":"1591:101:65","nodes":[],"body":{"id":67525,"nodeType":"Block","src":"1650:42:65","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":67523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":67521,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67516,"src":"1667:4:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":67522,"name":"MAX_LP_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67500,"src":"1675:10:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"1667:18:65","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":67520,"id":67524,"nodeType":"Return","src":"1660:25:65"}]},"documentation":{"id":67514,"nodeType":"StructuredDocumentation","src":"1416:170:65","text":"@notice returns true if an LP fee is valid, aka not above the maximum permitted fee\n @param self The fee to check\n @return bool True of the fee is valid"},"implemented":true,"kind":"function","modifiers":[],"name":"isValid","nameLocation":"1600:7:65","parameters":{"id":67517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67516,"mutability":"mutable","name":"self","nameLocation":"1615:4:65","nodeType":"VariableDeclaration","scope":67526,"src":"1608:11:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67515,"name":"uint24","nodeType":"ElementaryTypeName","src":"1608:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1607:13:65"},"returnParameters":{"id":67520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67526,"src":"1644:4:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":67518,"name":"bool","nodeType":"ElementaryTypeName","src":"1644:4:65","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1643:6:65"},"scope":67617,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":67546,"nodeType":"FunctionDefinition","src":"1833:122:65","nodes":[],"body":{"id":67545,"nodeType":"Block","src":"1878:77:65","nodes":[],"statements":[{"condition":{"id":67535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1892:15:65","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":67532,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67529,"src":"1893:4:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":67533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1898:7:65","memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":67526,"src":"1893:12:65","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$_t_bool_$attached_to$_t_uint24_$","typeString":"function (uint24) pure returns (bool)"}},"id":67534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1893:14:65","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":67544,"nodeType":"IfStatement","src":"1888:60:65","trueBody":{"expression":{"arguments":[{"id":67541,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67529,"src":"1943:4:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"expression":{"id":67536,"name":"LPFeeTooLarge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67484,"src":"1909:13:65","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint24_$returns$_t_error_$","typeString":"function (uint24) pure returns (error)"}},"id":67539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1923:8:65","memberName":"selector","nodeType":"MemberAccess","src":"1909:22:65","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":67540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1932:10:65","memberName":"revertWith","nodeType":"MemberAccess","referencedDeclaration":66057,"src":"1909:33:65","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$_t_uint160_$returns$__$attached_to$_t_bytes4_$","typeString":"function (bytes4,uint160) pure"}},"id":67542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1909:39:65","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67543,"nodeType":"ExpressionStatement","src":"1909:39:65"}}]},"documentation":{"id":67527,"nodeType":"StructuredDocumentation","src":"1698:130:65","text":"@notice validates whether an LP fee is larger than the maximum, and reverts if invalid\n @param self The fee to validate"},"implemented":true,"kind":"function","modifiers":[],"name":"validate","nameLocation":"1842:8:65","parameters":{"id":67530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67529,"mutability":"mutable","name":"self","nameLocation":"1858:4:65","nodeType":"VariableDeclaration","scope":67546,"src":"1851:11:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67528,"name":"uint24","nodeType":"ElementaryTypeName","src":"1851:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1850:13:65"},"returnParameters":{"id":67531,"nodeType":"ParameterList","parameters":[],"src":"1878:0:65"},"scope":67617,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":67568,"nodeType":"FunctionDefinition","src":"2333:220:65","nodes":[],"body":{"id":67567,"nodeType":"Block","src":"2402:151:65","nodes":[],"statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":67554,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67549,"src":"2471:4:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":67555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2476:12:65","memberName":"isDynamicFee","nodeType":"MemberAccess","referencedDeclaration":67513,"src":"2471:17:65","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$_t_bool_$attached_to$_t_uint24_$","typeString":"function (uint24) pure returns (bool)"}},"id":67556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2471:19:65","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":67559,"nodeType":"IfStatement","src":"2467:33:65","trueBody":{"expression":{"hexValue":"30","id":67557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2499:1:65","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":67553,"id":67558,"nodeType":"Return","src":"2492:8:65"}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":67560,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67549,"src":"2510:4:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":67562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:8:65","memberName":"validate","nodeType":"MemberAccess","referencedDeclaration":67546,"src":"2510:13:65","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$__$attached_to$_t_uint24_$","typeString":"function (uint24) pure"}},"id":67563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2510:15:65","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67564,"nodeType":"ExpressionStatement","src":"2510:15:65"},{"expression":{"id":67565,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67549,"src":"2542:4:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":67553,"id":67566,"nodeType":"Return","src":"2535:11:65"}]},"documentation":{"id":67547,"nodeType":"StructuredDocumentation","src":"1961:367:65","text":"@notice gets and validates the initial LP fee for a pool. Dynamic fee pools have an initial fee of 0.\n @dev if a dynamic fee pool wants a non-0 initial fee, it should call `updateDynamicLPFee` in the afterInitialize hook\n @param self The fee to get the initial LP from\n @return initialFee 0 if the fee is dynamic, otherwise the fee (if valid)"},"implemented":true,"kind":"function","modifiers":[],"name":"getInitialLPFee","nameLocation":"2342:15:65","parameters":{"id":67550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67549,"mutability":"mutable","name":"self","nameLocation":"2365:4:65","nodeType":"VariableDeclaration","scope":67568,"src":"2358:11:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67548,"name":"uint24","nodeType":"ElementaryTypeName","src":"2358:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2357:13:65"},"returnParameters":{"id":67553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67568,"src":"2394:6:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67551,"name":"uint24","nodeType":"ElementaryTypeName","src":"2394:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2393:8:65"},"scope":67617,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":67583,"nodeType":"FunctionDefinition","src":"2757:115:65","nodes":[],"body":{"id":67582,"nodeType":"Block","src":"2819:53:65","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":67580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":67578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":67576,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67571,"src":"2836:4:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":67577,"name":"OVERRIDE_FEE_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67492,"src":"2843:17:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"2836:24:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":67579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2864:1:65","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2836:29:65","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":67575,"id":67581,"nodeType":"Return","src":"2829:36:65"}]},"documentation":{"id":67569,"nodeType":"StructuredDocumentation","src":"2559:193:65","text":"@notice returns true if the fee has the override flag set (2nd highest bit of the uint24)\n @param self The fee to check\n @return bool True of the fee has the override flag set"},"implemented":true,"kind":"function","modifiers":[],"name":"isOverride","nameLocation":"2766:10:65","parameters":{"id":67572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67571,"mutability":"mutable","name":"self","nameLocation":"2784:4:65","nodeType":"VariableDeclaration","scope":67583,"src":"2777:11:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67570,"name":"uint24","nodeType":"ElementaryTypeName","src":"2777:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2776:13:65"},"returnParameters":{"id":67575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67583,"src":"2813:4:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":67573,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:65","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2812:6:65"},"scope":67617,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":67596,"nodeType":"FunctionDefinition","src":"3058:123:65","nodes":[],"body":{"id":67595,"nodeType":"Block","src":"3130:51:65","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":67593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":67591,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67586,"src":"3147:4:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":67592,"name":"REMOVE_OVERRIDE_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67496,"src":"3154:20:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"3147:27:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":67590,"id":67594,"nodeType":"Return","src":"3140:34:65"}]},"documentation":{"id":67584,"nodeType":"StructuredDocumentation","src":"2878:175:65","text":"@notice returns a fee with the override flag removed\n @param self The fee to remove the override flag from\n @return fee The fee without the override flag set"},"implemented":true,"kind":"function","modifiers":[],"name":"removeOverrideFlag","nameLocation":"3067:18:65","parameters":{"id":67587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67586,"mutability":"mutable","name":"self","nameLocation":"3093:4:65","nodeType":"VariableDeclaration","scope":67596,"src":"3086:11:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67585,"name":"uint24","nodeType":"ElementaryTypeName","src":"3086:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3085:13:65"},"returnParameters":{"id":67590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67596,"src":"3122:6:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67588,"name":"uint24","nodeType":"ElementaryTypeName","src":"3122:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3121:8:65"},"scope":67617,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":67616,"nodeType":"FunctionDefinition","src":"3434:159:65","nodes":[],"body":{"id":67615,"nodeType":"Block","src":"3521:72:65","nodes":[],"statements":[{"expression":{"id":67608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":67604,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67602,"src":"3531:3:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":67605,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67599,"src":"3537:4:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":67606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3542:18:65","memberName":"removeOverrideFlag","nodeType":"MemberAccess","referencedDeclaration":67596,"src":"3537:23:65","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$_t_uint24_$attached_to$_t_uint24_$","typeString":"function (uint24) pure returns (uint24)"}},"id":67607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3537:25:65","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"3531:31:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":67609,"nodeType":"ExpressionStatement","src":"3531:31:65"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":67610,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67602,"src":"3572:3:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":67612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3576:8:65","memberName":"validate","nodeType":"MemberAccess","referencedDeclaration":67546,"src":"3572:12:65","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$__$attached_to$_t_uint24_$","typeString":"function (uint24) pure"}},"id":67613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:14:65","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67614,"nodeType":"ExpressionStatement","src":"3572:14:65"}]},"documentation":{"id":67597,"nodeType":"StructuredDocumentation","src":"3187:242:65","text":"@notice Removes the override flag and validates the fee (reverts if the fee is too large)\n @param self The fee to remove the override flag from, and then validate\n @return fee The fee without the override flag set (if valid)"},"implemented":true,"kind":"function","modifiers":[],"name":"removeOverrideFlagAndValidate","nameLocation":"3443:29:65","parameters":{"id":67600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67599,"mutability":"mutable","name":"self","nameLocation":"3480:4:65","nodeType":"VariableDeclaration","scope":67616,"src":"3473:11:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67598,"name":"uint24","nodeType":"ElementaryTypeName","src":"3473:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3472:13:65"},"returnParameters":{"id":67603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67602,"mutability":"mutable","name":"fee","nameLocation":"3516:3:65","nodeType":"VariableDeclaration","scope":67616,"src":"3509:10:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":67601,"name":"uint24","nodeType":"ElementaryTypeName","src":"3509:6:65","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3508:12:65"},"scope":67617,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"LPFeeLibrary","contractDependencies":[],"contractKind":"library","documentation":{"id":67473,"nodeType":"StructuredDocumentation","src":"107:59:65","text":"@notice Library of helper functions for a pools LP fee"},"fullyImplemented":true,"linearizedBaseContracts":[67617],"name":"LPFeeLibrary","nameLocation":"174:12:65","scope":67618,"usedErrors":[67484],"usedEvents":[]}],"license":"MIT"},"id":65}