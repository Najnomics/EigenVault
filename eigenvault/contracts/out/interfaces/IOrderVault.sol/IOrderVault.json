{"abi":[{"type":"function","name":"expireOrder","inputs":[{"name":"orderId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getActiveOrderCount","inputs":[],"outputs":[{"name":"count","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getVaultOrder","inputs":[{"name":"orderId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"vaultOrder","type":"tuple","internalType":"struct IOrderVault.VaultOrder","components":[{"name":"orderId","type":"bytes32","internalType":"bytes32"},{"name":"trader","type":"address","internalType":"address"},{"name":"encryptedOrder","type":"bytes","internalType":"bytes"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"timestamp","type":"uint256","internalType":"uint256"},{"name":"retrieved","type":"bool","internalType":"bool"},{"name":"expired","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"isValidOrder","inputs":[{"name":"orderId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"exists","type":"bool","internalType":"bool"},{"name":"valid","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"retrieveOrder","inputs":[{"name":"orderId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"encryptedOrder","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"storeOrder","inputs":[{"name":"orderId","type":"bytes32","internalType":"bytes32"},{"name":"trader","type":"address","internalType":"address"},{"name":"encryptedOrder","type":"bytes","internalType":"bytes"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"OrderExpired","inputs":[{"name":"orderId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"trader","type":"address","indexed":true,"internalType":"address"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OrderRetrieved","inputs":[{"name":"orderId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OrderStored","inputs":[{"name":"orderId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"trader","type":"address","indexed":true,"internalType":"address"},{"name":"encryptedOrder","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"expireOrder(bytes32)":"f4b91bb1","getActiveOrderCount()":"815395fc","getVaultOrder(bytes32)":"4842fc0f","isValidOrder(bytes32)":"24fc4fbd","retrieveOrder(bytes32)":"aea0553d","storeOrder(bytes32,address,bytes,uint256)":"e6c2a8f8"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderRetrieved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedOrder\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OrderStored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"expireOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveOrderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getVaultOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encryptedOrder\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"retrieved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"expired\",\"type\":\"bool\"}],\"internalType\":\"struct IOrderVault.VaultOrder\",\"name\":\"vaultOrder\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"isValidOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"retrieveOrder\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encryptedOrder\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encryptedOrder\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"storeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"expireOrder(bytes32)\":{\"params\":{\"orderId\":\"The order identifier\"}},\"getActiveOrderCount()\":{\"returns\":{\"count\":\"The number of active orders\"}},\"getVaultOrder(bytes32)\":{\"params\":{\"orderId\":\"The order identifier\"},\"returns\":{\"vaultOrder\":\"The vault order details\"}},\"isValidOrder(bytes32)\":{\"params\":{\"orderId\":\"The order identifier\"},\"returns\":{\"exists\":\"Whether the order exists\",\"valid\":\"Whether the order is still valid (not expired/retrieved)\"}},\"retrieveOrder(bytes32)\":{\"params\":{\"orderId\":\"The order identifier\"},\"returns\":{\"encryptedOrder\":\"The encrypted order data\"}},\"storeOrder(bytes32,address,bytes,uint256)\":{\"params\":{\"deadline\":\"The order deadline\",\"encryptedOrder\":\"The encrypted order data\",\"orderId\":\"The unique order identifier\",\"trader\":\"The trader address\"}}},\"title\":\"IOrderVault\",\"version\":1},\"userdoc\":{\"events\":{\"OrderExpired(bytes32,address,uint256)\":{\"notice\":\"Emitted when an order expires\"},\"OrderRetrieved(bytes32,address,uint256)\":{\"notice\":\"Emitted when an order is retrieved from the vault\"},\"OrderStored(bytes32,address,bytes,uint256)\":{\"notice\":\"Emitted when an order is stored in the vault\"}},\"kind\":\"user\",\"methods\":{\"expireOrder(bytes32)\":{\"notice\":\"Mark an order as expired\"},\"getActiveOrderCount()\":{\"notice\":\"Get total number of active orders\"},\"getVaultOrder(bytes32)\":{\"notice\":\"Get vault order metadata\"},\"isValidOrder(bytes32)\":{\"notice\":\"Check if an order exists and is valid\"},\"retrieveOrder(bytes32)\":{\"notice\":\"Retrieve an encrypted order from the vault (operators only)\"},\"storeOrder(bytes32,address,bytes,uint256)\":{\"notice\":\"Store an encrypted order in the vault\"}},\"notice\":\"Interface for the Order Vault that stores encrypted orders\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IOrderVault.sol\":\"IOrderVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/src/\",\":@eigenlayer/=lib/eigenlayer-contracts/src/contracts/\",\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\",\":zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/\"]},\"sources\":{\"contracts/src/interfaces/IOrderVault.sol\":{\"keccak256\":\"0xc5ff6358b8e9cce00dc4adabf8b9c0204c65829fdf0187fc39095739308fcc9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baa00c37407a03afa88a2e1553a593ac95047ad710d7d5c86d673de1cd64f51c\",\"dweb:/ipfs/QmS3QkD1Pej8Fnyn8mMBuAhGy5cd5Wh5NBveHz3kZsFkUx\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32","indexed":true},{"internalType":"address","name":"trader","type":"address","indexed":true},{"internalType":"uint256","name":"timestamp","type":"uint256","indexed":false}],"type":"event","name":"OrderExpired","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"uint256","name":"timestamp","type":"uint256","indexed":false}],"type":"event","name":"OrderRetrieved","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32","indexed":true},{"internalType":"address","name":"trader","type":"address","indexed":true},{"internalType":"bytes","name":"encryptedOrder","type":"bytes","indexed":false},{"internalType":"uint256","name":"timestamp","type":"uint256","indexed":false}],"type":"event","name":"OrderStored","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"expireOrder"},{"inputs":[],"stateMutability":"view","type":"function","name":"getActiveOrderCount","outputs":[{"internalType":"uint256","name":"count","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getVaultOrder","outputs":[{"internalType":"struct IOrderVault.VaultOrder","name":"vaultOrder","type":"tuple","components":[{"internalType":"bytes32","name":"orderId","type":"bytes32"},{"internalType":"address","name":"trader","type":"address"},{"internalType":"bytes","name":"encryptedOrder","type":"bytes"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"retrieved","type":"bool"},{"internalType":"bool","name":"expired","type":"bool"}]}]},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isValidOrder","outputs":[{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"bool","name":"valid","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"retrieveOrder","outputs":[{"internalType":"bytes","name":"encryptedOrder","type":"bytes"}]},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"},{"internalType":"address","name":"trader","type":"address"},{"internalType":"bytes","name":"encryptedOrder","type":"bytes"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"storeOrder"}],"devdoc":{"kind":"dev","methods":{"expireOrder(bytes32)":{"params":{"orderId":"The order identifier"}},"getActiveOrderCount()":{"returns":{"count":"The number of active orders"}},"getVaultOrder(bytes32)":{"params":{"orderId":"The order identifier"},"returns":{"vaultOrder":"The vault order details"}},"isValidOrder(bytes32)":{"params":{"orderId":"The order identifier"},"returns":{"exists":"Whether the order exists","valid":"Whether the order is still valid (not expired/retrieved)"}},"retrieveOrder(bytes32)":{"params":{"orderId":"The order identifier"},"returns":{"encryptedOrder":"The encrypted order data"}},"storeOrder(bytes32,address,bytes,uint256)":{"params":{"deadline":"The order deadline","encryptedOrder":"The encrypted order data","orderId":"The unique order identifier","trader":"The trader address"}}},"version":1},"userdoc":{"kind":"user","methods":{"expireOrder(bytes32)":{"notice":"Mark an order as expired"},"getActiveOrderCount()":{"notice":"Get total number of active orders"},"getVaultOrder(bytes32)":{"notice":"Get vault order metadata"},"isValidOrder(bytes32)":{"notice":"Check if an order exists and is valid"},"retrieveOrder(bytes32)":{"notice":"Retrieve an encrypted order from the vault (operators only)"},"storeOrder(bytes32,address,bytes,uint256)":{"notice":"Store an encrypted order in the vault"}},"version":1}},"settings":{"remappings":["@eigenlayer-middleware/=lib/eigenlayer-middleware/src/","@eigenlayer/=lib/eigenlayer-contracts/src/contracts/","@ensdomains/=lib/v4-core/node_modules/@ensdomains/","@forge-std/=lib/forge-std/src/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v4-core/=lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-core/node_modules/hardhat/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-core/lib/solmate/","v4-core/=lib/v4-core/src/","v4-periphery/=lib/v4-periphery/","zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":800},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/src/interfaces/IOrderVault.sol":"IOrderVault"},"evmVersion":"cancun","libraries":{}},"sources":{"contracts/src/interfaces/IOrderVault.sol":{"keccak256":"0xc5ff6358b8e9cce00dc4adabf8b9c0204c65829fdf0187fc39095739308fcc9d","urls":["bzz-raw://baa00c37407a03afa88a2e1553a593ac95047ad710d7d5c86d673de1cd64f51c","dweb:/ipfs/QmS3QkD1Pej8Fnyn8mMBuAhGy5cd5Wh5NBveHz3kZsFkUx"],"license":"MIT"}},"version":1},"id":5}