{"abi":[{"type":"function","name":"accessList","inputs":[{"name":"access","type":"tuple[]","internalType":"struct VmSafe.AccessListItem[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"storageKeys","type":"bytes32[]","internalType":"bytes32[]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[{"name":"potentialReverts","type":"tuple[]","internalType":"struct VmSafe.PotentialRevert[]","components":[{"name":"reverter","type":"address","internalType":"address"},{"name":"partialMatch","type":"bool","internalType":"bool"},{"name":"revertData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[{"name":"potentialRevert","type":"tuple","internalType":"struct VmSafe.PotentialRevert","components":[{"name":"reverter","type":"address","internalType":"address"},{"name":"partialMatch","type":"bool","internalType":"bool"},{"name":"revertData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"attachBlob","inputs":[{"name":"blob","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"attachDelegation","inputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"attachDelegation","inputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]},{"name":"crossChain","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcastRawTransaction","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cloneAccount","inputs":[{"name":"source","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"contains","inputs":[{"name":"subject","type":"string","internalType":"string"},{"name":"search","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"cool","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coolSlot","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"copyStorage","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteStateSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteStateSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eip712HashStruct","inputs":[{"name":"bindingsPath","type":"string","internalType":"string"},{"name":"typeName","type":"string","internalType":"string"},{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"typeHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"eip712HashStruct","inputs":[{"name":"typeNameOrDefinition","type":"string","internalType":"string"},{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"typeHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"eip712HashType","inputs":[{"name":"bindingsPath","type":"string","internalType":"string"},{"name":"typeName","type":"string","internalType":"string"}],"outputs":[{"name":"typeHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"eip712HashType","inputs":[{"name":"typeNameOrDefinition","type":"string","internalType":"string"}],"outputs":[{"name":"typeHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"eip712HashTypedData","inputs":[{"name":"jsonData","type":"string","internalType":"string"}],"outputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCreate","inputs":[{"name":"bytecode","type":"bytes","internalType":"bytes"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCreate2","inputs":[{"name":"bytecode","type":"bytes","internalType":"bytes"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"forkAddress","inputs":[{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"forkBool","inputs":[{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"forkBytes","inputs":[{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"forkBytes32","inputs":[{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"forkChain","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"forkChainAddress","inputs":[{"name":"chain","type":"uint256","internalType":"uint256"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"forkChainBool","inputs":[{"name":"chain","type":"uint256","internalType":"uint256"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"forkChainBytes","inputs":[{"name":"chain","type":"uint256","internalType":"uint256"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"forkChainBytes32","inputs":[{"name":"chain","type":"uint256","internalType":"uint256"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"forkChainId","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"forkChainIds","inputs":[],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"forkChainInt","inputs":[{"name":"chain","type":"uint256","internalType":"uint256"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"forkChainRpcUrl","inputs":[{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"forkChainString","inputs":[{"name":"chain","type":"uint256","internalType":"uint256"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"forkChainUint","inputs":[{"name":"chain","type":"uint256","internalType":"uint256"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"forkChains","inputs":[],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"forkInt","inputs":[{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"forkRpcUrl","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"forkString","inputs":[{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"forkUint","inputs":[{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"foundryVersionAtLeast","inputs":[{"name":"version","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"foundryVersionCmp","inputs":[{"name":"version","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByCode","inputs":[{"name":"code","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByDeployedCode","inputs":[{"name":"deployedCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBroadcast","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"}],"outputs":[{"name":"","type":"tuple","internalType":"struct VmSafe.BroadcastTxSummary","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getBroadcasts","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct VmSafe.BroadcastTxSummary[]","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getBroadcasts","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct VmSafe.BroadcastTxSummary[]","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getChain","inputs":[{"name":"chainAlias","type":"string","internalType":"string"}],"outputs":[{"name":"chain","type":"tuple","internalType":"struct VmSafe.Chain","components":[{"name":"name","type":"string","internalType":"string"},{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"chainAlias","type":"string","internalType":"string"},{"name":"rpcUrl","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"getChain","inputs":[{"name":"chainId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"chain","type":"tuple","internalType":"struct VmSafe.Chain","components":[{"name":"name","type":"string","internalType":"string"},{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"chainAlias","type":"string","internalType":"string"},{"name":"rpcUrl","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployment","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDeployment","inputs":[{"name":"contractName","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDeployments","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"deployedAddresses","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getFoundryVersion","inputs":[],"outputs":[{"name":"version","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRawBlockHeader","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"rlpHeader","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"getStateDiff","inputs":[],"outputs":[{"name":"diff","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getStateDiffJson","inputs":[],"outputs":[{"name":"diff","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getWallets","inputs":[],"outputs":[{"name":"wallets","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"interceptInitcode","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCalls","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCalls","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockFunction","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"noAccessList","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlTypeArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pauseTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"publicKeyP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"randomBool","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"randomBytes","inputs":[{"name":"len","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"randomBytes4","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"randomBytes8","inputs":[],"outputs":[{"name":"","type":"bytes8","internalType":"bytes8"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKeys","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"count","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"keyAddrs","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKeys","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"language","type":"string","internalType":"string"},{"name":"count","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"keyAddrs","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToState","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToStateAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setArbitraryStorage","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"overwrite","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setArbitraryStorage","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBlockhash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setSeed","inputs":[{"name":"seed","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"shuffle","inputs":[{"name":"array","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signAndAttachDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signAndAttachDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signAndAttachDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"crossChain","type":"bool","internalType":"bool"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"crossChain","type":"bool","internalType":"bool"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"},{"name":"reason","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotGasLastCall","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotGasLastCall","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotState","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotValue","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotValue","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sort","inputs":[{"name":"array","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startDebugTraceRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startSnapshotGas","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startSnapshotGas","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnDebugTraceRecording","inputs":[],"outputs":[{"name":"step","type":"tuple[]","internalType":"struct VmSafe.DebugStep[]","components":[{"name":"stack","type":"uint256[]","internalType":"uint256[]"},{"name":"memoryInput","type":"bytes","internalType":"bytes"},{"name":"opcode","type":"uint8","internalType":"uint8"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isOutOfGas","type":"bool","internalType":"bool"},{"name":"contractAddr","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"oldNonce","type":"uint64","internalType":"uint64"},{"name":"newNonce","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopRecord","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"warmSlot","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accessList((address,bytes32[])[])":"743e4cb7","accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","assumeNoRevert((address,bool,bytes))":"d8591eeb","assumeNoRevert((address,bool,bytes)[])":"8a4592cc","assumeNoRevert()":"285b366a","attachBlob(bytes)":"10cb385c","attachDelegation((uint8,bytes32,bytes32,uint64,address))":"14ae3519","attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)":"f4460d34","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","broadcastRawTransaction(bytes)":"8c0c72e0","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","cloneAccount(address,address)":"533d61c9","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","contains(string,string)":"3fb18aec","cool(address)":"40ff9f21","coolSlot(address,bytes32)":"8c78e654","copyFile(string,string)":"a54a87d8","copyStorage(address,address)":"203dac0d","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deleteStateSnapshot(uint256)":"08d6b37a","deleteStateSnapshots()":"e0933c74","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deployCode(string,bytes,bytes32)":"016155bf","deployCode(string,bytes,uint256)":"ff5d64e4","deployCode(string,bytes,uint256,bytes32)":"3aa773ea","deployCode(string,bytes32)":"17ab1d79","deployCode(string,uint256)":"0af6a701","deployCode(string,uint256,bytes32)":"002cb687","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","eip712HashStruct(string,bytes)":"aedeaebc","eip712HashStruct(string,string,bytes)":"6d06c57c","eip712HashType(string)":"6792e9e2","eip712HashType(string,string)":"18fb6406","eip712HashTypedData(string)":"ea25e615","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectCreate(bytes,address)":"73cdce36","expectCreate2(bytes,address)":"ea54a472","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(address,uint64)":"b43aece3","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectEmit(bool,bool,bool,bool,address,uint64)":"c339d02c","expectEmit(bool,bool,bool,bool,uint64)":"5e1d1c33","expectEmit(uint64)":"4c74a335","expectEmitAnonymous()":"2e5f270c","expectEmitAnonymous(address)":"6fc68705","expectEmitAnonymous(bool,bool,bool,bool,bool)":"c948db5e","expectEmitAnonymous(bool,bool,bool,bool,bool,address)":"71c95899","expectPartialRevert(bytes4)":"11fb5b9c","expectPartialRevert(bytes4,address)":"51aa008a","expectRevert()":"f4844814","expectRevert(address)":"d814f38a","expectRevert(address,uint64)":"1ff5f952","expectRevert(bytes)":"f28dceb3","expectRevert(bytes,address)":"61ebcf12","expectRevert(bytes,address,uint64)":"d345fb1f","expectRevert(bytes,uint64)":"4994c273","expectRevert(bytes4)":"c31eb0e0","expectRevert(bytes4,address)":"260bc5de","expectRevert(bytes4,address,uint64)":"b0762d73","expectRevert(bytes4,uint64)":"e45ca72d","expectRevert(uint64)":"4ee38244","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","forkAddress(string)":"27b1efc0","forkBool(string)":"c06e85dd","forkBytes(string)":"7c055631","forkBytes32(string)":"a912a3f4","forkChain()":"e6075d94","forkChainAddress(uint256,string)":"5dc00a35","forkChainBool(uint256,string)":"8f947e16","forkChainBytes(uint256,string)":"0e73256d","forkChainBytes32(uint256,string)":"05dd6d07","forkChainId()":"e6b661e2","forkChainIds()":"04dc8feb","forkChainInt(uint256,string)":"c1ff595f","forkChainRpcUrl(uint256)":"a2c51cca","forkChainString(uint256,string)":"24062881","forkChainUint(uint256,string)":"2bfffa5c","forkChains()":"081f64cd","forkInt(string)":"4b326af0","forkRpcUrl()":"66d48d21","forkString(string)":"d8525752","forkUint(string)":"be0fe4a8","foundryVersionAtLeast(string)":"6248be1f","foundryVersionCmp(string)":"ca7b0a09","fsMetadata(string)":"af368a08","getArtifactPathByCode(bytes)":"eb74848c","getArtifactPathByDeployedCode(bytes)":"6d853ba5","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getBroadcast(string,uint64,uint8)":"3dc90cb3","getBroadcasts(string,uint64)":"f2fa4a26","getBroadcasts(string,uint64,uint8)":"f7afe919","getChain(string)":"4cc1c2bb","getChain(uint256)":"b6791ad4","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getDeployment(string)":"a8091d97","getDeployment(string,uint64)":"0debd5d6","getDeployments(string,uint64)":"74e133dd","getFoundryVersion()":"ea991bb5","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRawBlockHeader(uint256)":"2c667606","getRecordedLogs()":"191553a4","getStateDiff()":"80df01cc","getStateDiffJson()":"f54fe009","getWallets()":"db7a4605","indexOf(string,string)":"8a0807b7","interceptInitcode()":"838653c7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,bytes4,bytes)":"08e0c537","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCall(address,uint256,bytes4,bytes)":"e7b36a3d","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,bytes4,bytes)":"2dfba5df","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","mockCallRevert(address,uint256,bytes4,bytes)":"596c8f04","mockCalls(address,bytes,bytes[])":"5c5c3de9","mockCalls(address,uint256,bytes,bytes[])":"08bcbae1","mockFunction(address,address,bytes)":"adf84d21","noAccessList()":"238ad778","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlType(string,string)":"47fa5e11","parseTomlType(string,string,string)":"f9fa5cdb","parseTomlTypeArray(string,string,string)":"49be3743","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","pauseTracing()":"c94d1f90","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prank(address,address,bool)":"7d73d042","prank(address,bool)":"a7f8bf5c","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","publicKeyP256(uint256)":"c453949e","randomAddress()":"d5bee9f5","randomBool()":"cdc126bd","randomBytes(uint256)":"6c5d32a9","randomBytes4()":"9b7cd579","randomBytes8()":"0497b0a5","randomInt()":"111f1202","randomInt(uint256)":"12845966","randomUint()":"25124730","randomUint(uint256)":"cf81e69c","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","rememberKeys(string,string,string,uint32)":"f8d58eaf","rememberKeys(string,string,uint32)":"97cb9189","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetGasMetering()":"be367dd3","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","resumeTracing()":"72a09ccb","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revertToState(uint256)":"c2527405","revertToStateAndDelete(uint256)":"3a1985dc","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setArbitraryStorage(address)":"e1631837","setArbitraryStorage(address,bool)":"d3ec2a0b","setBlockhash(uint256,bytes32)":"5314b54a","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","setSeed(uint256)":"c32a50f9","shuffle(uint256[])":"54f1469c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signAndAttachDelegation(address,uint256)":"c7fa7288","signAndAttachDelegation(address,uint256,bool)":"d936e146","signAndAttachDelegation(address,uint256,uint64)":"cde3e5be","signCompact((address,uint256,uint256,uint256),bytes32)":"3d0e292f","signCompact(address,bytes32)":"8e2f97bf","signCompact(bytes32)":"a282dc4b","signCompact(uint256,bytes32)":"cc2a781f","signDelegation(address,uint256)":"5b593c7b","signDelegation(address,uint256,bool)":"cdd7563d","signDelegation(address,uint256,uint64)":"ceba2ec3","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","skip(bool,string)":"c42a80a7","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","snapshotGasLastCall(string)":"dd9fca12","snapshotGasLastCall(string,string)":"200c6772","snapshotState()":"9cd23835","snapshotValue(string,string,uint256)":"6d2b27d8","snapshotValue(string,uint256)":"51db805a","sort(uint256[])":"9ec8b026","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startDebugTraceRecording()":"419c8832","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startPrank(address,address,bool)":"4eb859b5","startPrank(address,bool)":"1cc0b435","startSnapshotGas(string)":"3cad9d7b","startSnapshotGas(string,string)":"6cd0cc53","startStateDiffRecording()":"cf22e3c9","stopAndReturnDebugTraceRecording()":"ced398a2","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","stopRecord()":"996be76d","stopSnapshotGas()":"f6402eda","stopSnapshotGas(string)":"773b2805","stopSnapshotGas(string,string)":"0c9db707","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warmSlot(address,bytes32)":"b23184cf","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"storageKeys\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct VmSafe.AccessListItem[]\",\"name\":\"access\",\"type\":\"tuple[]\"}],\"name\":\"accessList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert[]\",\"name\":\"potentialReverts\",\"type\":\"tuple[]\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert\",\"name\":\"potentialRevert\",\"type\":\"tuple\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"name\":\"attachBlob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"name\":\"attachDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"attachDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"cloneAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"search\",\"type\":\"string\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"cool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"coolSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"copyStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteStateSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteStateSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bindingsPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeName\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"name\":\"eip712HashStruct\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeNameOrDefinition\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"name\":\"eip712HashStruct\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bindingsPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeName\",\"type\":\"string\"}],\"name\":\"eip712HashType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeNameOrDefinition\",\"type\":\"string\"}],\"name\":\"eip712HashType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"jsonData\",\"type\":\"string\"}],\"name\":\"eip712HashTypedData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"expectCreate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"expectCreate2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"forkAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"forkBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"forkBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"forkBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forkChain\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chain\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"forkChainAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chain\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"forkChainBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chain\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"forkChainBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chain\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"forkChainBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forkChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forkChainIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chain\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"forkChainInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"forkChainRpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chain\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"forkChainString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chain\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"forkChainUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forkChains\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"forkInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forkRpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"forkString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"forkUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"foundryVersionAtLeast\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"foundryVersionCmp\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByDeployedCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcast\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"}],\"name\":\"getChain\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rpcUrl\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Chain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getChain\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rpcUrl\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Chain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"deployedAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFoundryVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getRawBlockHeader\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"rlpHeader\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiff\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiffJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interceptInitcode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"noAccessList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"publicKeyP256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"randomBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes4\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes8\",\"outputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToStateAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"overwrite\",\"type\":\"bool\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"setSeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"shuffle\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshotState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"sort\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDebugTraceRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnDebugTraceRecording\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"stack\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"memoryInput\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"opcode\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isOutOfGas\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.DebugStep[]\",\"name\":\"step\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"oldNonce\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"warmSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accessList((address,bytes32[])[])\":{\"notice\":\"Utility cheatcode to set an EIP-2930 access list for all subsequent transactions.\"},\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"assumeNoRevert((address,bool,bytes))\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters.\"},\"assumeNoRevert((address,bool,bytes)[])\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters.\"},\"assumeNoRevert()\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverted.\"},\"attachBlob(bytes)\":{\"notice\":\"Attach an EIP-4844 blob to the next call\"},\"attachDelegation((uint8,bytes32,bytes32,uint64,address))\":{\"notice\":\"Designate the next call as an EIP-7702 transaction\"},\"attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)\":{\"notice\":\"Designate the next call as an EIP-7702 transaction, with optional cross-chain validity.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"cloneAccount(address,address)\":{\"notice\":\"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"contains(string,string)\":{\"notice\":\"Returns true if `search` is found in `subject`, false otherwise.\"},\"cool(address)\":{\"notice\":\"Marks the slots of an account and the account address as cold.\"},\"coolSlot(address,bytes32)\":{\"notice\":\"Utility cheatcode to mark specific storage slot as cold, simulating no prior read.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"copyStorage(address,address)\":{\"notice\":\"Utility cheatcode to copy storage of `from` contract to another `to` contract.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions.\"},\"deleteSnapshots()\":{\"notice\":\"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions.\"},\"deleteStateSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteStateSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deployCode(string,bytes,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deployCode(string,bytes,uint256)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`.\"},\"deployCode(string,bytes,uint256,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`.\"},\"deployCode(string,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,uint256)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`.\"},\"deployCode(string,uint256,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"eip712HashStruct(string,bytes)\":{\"notice\":\"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Supports 2 different inputs: 1. Name of the type (i.e. \\\"PermitSingle\\\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \\\"Foo(Bar bar) Bar(uint256 baz)\\\"). * Note: the cheatcode will use the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces.\"},\"eip712HashStruct(string,string,bytes)\":{\"notice\":\"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \\\"PermitSingle\\\"). * `abiEncodedData`: ABI-encoded data for the struct that is being hashed.\"},\"eip712HashType(string)\":{\"notice\":\"Generates the hash of the canonical EIP-712 type representation. Supports 2 different inputs: 1. Name of the type (i.e. \\\"Transaction\\\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \\\"Foo(Bar bar) Bar(uint256 baz)\\\"). * Note: the cheatcode will output the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces.\"},\"eip712HashType(string,string)\":{\"notice\":\"Generates the hash of the canonical EIP-712 type representation. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \\\"Transaction\\\").\"},\"eip712HashTypedData(string)\":{\"notice\":\"Generates a ready-to-sign digest of human-readable typed data following the EIP-712 standard.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCreate(bytes,address)\":{\"notice\":\"Expects the deployment of the specified bytecode by the specified address using the CREATE opcode\"},\"expectCreate2(bytes,address)\":{\"notice\":\"Expects the deployment of the specified bytecode by the specified address using the CREATE2 opcode\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(address,uint64)\":{\"notice\":\"Expect a given number of logs from a specific emitter with all topic and data checks enabled.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool,address,uint64)\":{\"notice\":\"Expect a given number of logs from a specific emitter with the provided topics.\"},\"expectEmit(bool,bool,bool,bool,uint64)\":{\"notice\":\"Expect a given number of logs with the provided topics.\"},\"expectEmit(uint64)\":{\"notice\":\"Expect a given number of logs with all topic and data checks enabled.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectPartialRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectPartialRevert(bytes4,address)\":{\"notice\":\"Expects an error on next call to reverter address, that starts with the revert data.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(address)\":{\"notice\":\"Expects an error with any revert data on next call to reverter address.\"},\"expectRevert(address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes,address)\":{\"notice\":\"Expects an error from reverter address on next call, that exactly matches the revert data.\"},\"expectRevert(bytes,address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data.\"},\"expectRevert(bytes,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4,address)\":{\"notice\":\"Expects an error from reverter address on next call, with any revert data.\"},\"expectRevert(bytes4,address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data.\"},\"expectRevert(bytes4,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls that match the revert data.\"},\"expectRevert(uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"forkAddress(string)\":{\"notice\":\"Gets the value for the key `key` from the currently active fork and parses it as `address`. Reverts if the key was not found or the value could not be parsed.\"},\"forkBool(string)\":{\"notice\":\"Gets the value for the key `key` from the currently active fork and parses it as `bool`. Reverts if the key was not found or the value could not be parsed.\"},\"forkBytes(string)\":{\"notice\":\"Gets the value for the key `key` from the currently active fork and parses it as `bytes`. Reverts if the key was not found or the value could not be parsed.\"},\"forkBytes32(string)\":{\"notice\":\"Gets the value for the key `key` from the currently active fork and parses it as `bytes32`. Reverts if the key was not found or the value could not be parsed.\"},\"forkChain()\":{\"notice\":\"Returns the chain name of the currently selected fork.\"},\"forkChainAddress(uint256,string)\":{\"notice\":\"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `address`. Reverts if the key was not found or the value could not be parsed.\"},\"forkChainBool(uint256,string)\":{\"notice\":\"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `bool`. Reverts if the key was not found or the value could not be parsed.\"},\"forkChainBytes(uint256,string)\":{\"notice\":\"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `bytes`. Reverts if the key was not found or the value could not be parsed.\"},\"forkChainBytes32(uint256,string)\":{\"notice\":\"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `bytes32`. Reverts if the key was not found or the value could not be parsed.\"},\"forkChainId()\":{\"notice\":\"Returns the chain id of the currently selected fork.\"},\"forkChainIds()\":{\"notice\":\"Returns an array with the ids of all the configured fork chains. Note that the configured fork chains are subsections of the `[fork]` section of 'foundry.toml'.\"},\"forkChainInt(uint256,string)\":{\"notice\":\"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `int256`. Reverts if the key was not found or the value could not be parsed.\"},\"forkChainRpcUrl(uint256)\":{\"notice\":\"Returns the rpc url of the corresponding chain id. By default, the rpc url of each fork is derived from the `[rpc_endpoints]`, unless the rpc config is specifically informed in the fork config for that specific chain.\"},\"forkChainString(uint256,string)\":{\"notice\":\"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `string`. Reverts if the key was not found or the value could not be parsed.\"},\"forkChainUint(uint256,string)\":{\"notice\":\"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `uint256`. Reverts if the key was not found or the value could not be parsed.\"},\"forkChains()\":{\"notice\":\"Returns an array with the name of all the configured fork chains. Note that the configured fork chains are subsections of the `[fork]` section of 'foundry.toml'.\"},\"forkInt(string)\":{\"notice\":\"Gets the value for the key `key` from the currently active fork and parses it as `int256`. Reverts if the key was not found or the value could not be parsed.\"},\"forkRpcUrl()\":{\"notice\":\"Returns the rpc url of the currently selected fork. By default, the rpc url of each fork is derived from the `[rpc_endpoints]`, unless the rpc config is specifically informed in the fork config for that specific chain.\"},\"forkString(string)\":{\"notice\":\"Gets the value for the key `key` from the currently active fork and parses it as `string`. Reverts if the key was not found or the value could not be parsed.\"},\"forkUint(string)\":{\"notice\":\"Gets the value for the key `key` from the currently active fork and parses it as `uint256`. Reverts if the key was not found or the value could not be parsed.\"},\"foundryVersionAtLeast(string)\":{\"notice\":\"Returns true if the current Foundry version is greater than or equal to the given version. The given version string must be in the format `major.minor.patch`. This is equivalent to `foundryVersionCmp(version) >= 0`.\"},\"foundryVersionCmp(string)\":{\"notice\":\"Compares the current Foundry version with the given version string. The given version string must be in the format `major.minor.patch`. Returns: -1 if current Foundry version is less than the given version 0 if current Foundry version equals the given version 1 if current Foundry version is greater than the given version This result can then be used with a comparison operator against `0`. For example, to check if the current Foundry version is greater than or equal to `1.0.0`: `if (foundryVersionCmp(\\\"1.0.0\\\") >= 0) { ... }`\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getArtifactPathByCode(bytes)\":{\"notice\":\"Gets the artifact path from code (aka. creation code).\"},\"getArtifactPathByDeployedCode(bytes)\":{\"notice\":\"Gets the artifact path from deployed code (aka. runtime code).\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBroadcast(string,uint64,uint8)\":{\"notice\":\"Returns the most recent broadcast for the given contract on `chainId` matching `txType`. For example: The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`. The most recent call can be fetched by passing `txType` as `CALL`.\"},\"getBroadcasts(string,uint64)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getBroadcasts(string,uint64,uint8)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId` with the specified `txType`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getChain(string)\":{\"notice\":\"Returns a Chain struct for specific alias\"},\"getChain(uint256)\":{\"notice\":\"Returns a Chain struct for specific chainId\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployment(string)\":{\"notice\":\"Returns the most recent deployment for the current `chainId`.\"},\"getDeployment(string,uint64)\":{\"notice\":\"Returns the most recent deployment for the given contract on `chainId`\"},\"getDeployments(string,uint64)\":{\"notice\":\"Returns all deployments for the given contract on `chainId` Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber. The most recent deployment is the first element, and the oldest is the last.\"},\"getFoundryVersion()\":{\"notice\":\"Returns the Foundry version. Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile> Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use UNIX format (e.g., >= 1700000000) to compare timestamps while ignoring minor time differences.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get the nonce of a `Wallet`.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRawBlockHeader(uint256)\":{\"notice\":\"Gets the RLP encoded block header for a given block number. Returns the block header in the same format as `cast block <block_number> --raw`.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"getStateDiff()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session.\"},\"getStateDiffJson()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session, in json format.\"},\"getWallets()\":{\"notice\":\"Returns addresses of available unlocked wallets in the script environment.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"interceptInitcode()\":{\"notice\":\"Causes the next contract creation (via new) to fail and return its initcode in the returndata buffer. This allows type-safe access to the initcode payload that would be used for contract creation. Example usage: vm.interceptInitcode(); bytes memory initcode; try new MyContract(param1, param2) { assert(false); } catch (bytes memory interceptedInitcode) { initcode = interceptedInitcode; }\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call from the callee perspective.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory EVM state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,bytes4,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCall(address,uint256,bytes4,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,bytes4,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"mockCallRevert(address,uint256,bytes4,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCalls(address,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address, returning specified data for each call.\"},\"mockCalls(address,uint256,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call.\"},\"mockFunction(address,address,bytes)\":{\"notice\":\"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted.\"},\"noAccessList()\":{\"notice\":\"Utility cheatcode to remove any EIP-2930 access list set by `accessList` cheatcode.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlType(string,string)\":{\"notice\":\"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlType(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlTypeArray(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"pauseTracing()\":{\"notice\":\"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prank(address,address,bool)\":{\"notice\":\"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prank(address,bool)\":{\"notice\":\"Sets the *next* delegate call's `msg.sender` to be the input address.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"publicKeyP256(uint256)\":{\"notice\":\"Derives secp256r1 public key from the provided `privateKey`.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomBool()\":{\"notice\":\"Returns a random `bool`.\"},\"randomBytes(uint256)\":{\"notice\":\"Returns a random byte array value of the given length.\"},\"randomBytes4()\":{\"notice\":\"Returns a random fixed-size byte array of length 4.\"},\"randomBytes8()\":{\"notice\":\"Returns a random fixed-size byte array of length 8.\"},\"randomInt()\":{\"notice\":\"Returns a random `int256` value.\"},\"randomInt(uint256)\":{\"notice\":\"Returns a random `int256` value of given bits.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256)\":{\"notice\":\"Returns a random `uint256` value of given bits.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uint256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes. Use `accesses` to get the recorded data. Subsequent calls to `record` will clear the previous data.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"rememberKeys(string,string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"rememberKeys(string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetGasMetering()\":{\"notice\":\"Reset gas metering (i.e. gas usage is set to gas limit).\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"resumeTracing()\":{\"notice\":\"Unpauses collection of call traces.\"},\"revertTo(uint256)\":{\"notice\":\"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions.\"},\"revertToState(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`.\"},\"revertToStateAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setArbitraryStorage(address)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address.\"},\"setArbitraryStorage(address,bool)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address and overwrite any storage slots that have been previously set.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"setSeed(uint256)\":{\"notice\":\"Set RNG seed.\"},\"shuffle(uint256[])\":{\"notice\":\"Randomly shuffles an array.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signAndAttachDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction\"},\"signAndAttachDelegation(address,uint256,bool)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction, with optional cross-chain validity.\"},\"signAndAttachDelegation(address,uint256,uint64)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction for specific nonce\"},\"signCompact((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signCompact(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address.\"},\"signCompact(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"signCompact(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation\"},\"signDelegation(address,uint256,bool)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation, with optional cross-chain validity.\"},\"signDelegation(address,uint256,uint64)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation for specific nonce\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top level of a test.\"},\"skip(bool,string)\":{\"notice\":\"Marks a test as skipped with a reason. Must be called at the top level of a test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions.\"},\"snapshotGasLastCall(string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name from the callee perspective.\"},\"snapshotGasLastCall(string,string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name in a group from the callee perspective.\"},\"snapshotState()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`.\"},\"snapshotValue(string,string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name in a group.\"},\"snapshotValue(string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name.\"},\"sort(uint256[])\":{\"notice\":\"Sorts an array in ascending order.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startDebugTraceRecording()\":{\"notice\":\"Records the debug trace during the run.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startPrank(address,address,bool)\":{\"notice\":\"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startPrank(address,bool)\":{\"notice\":\"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startSnapshotGas(string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name.\"},\"startSnapshotGas(string,string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name in a group.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnDebugTraceRecording()\":{\"notice\":\"Stop debug trace recording and returns the recorded debug trace.\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"stopRecord()\":{\"notice\":\"Stops recording storage reads and writes.\"},\"stopSnapshotGas()\":{\"notice\":\"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start.\"},\"stopSnapshotGas(string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name.\"},\"stopSnapshotGas(string,string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warmSlot(address,bytes32)\":{\"notice\":\"Utility cheatcode to mark specific storage slot as warm, simulating a prior read.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/src/\",\":@eigenlayer/=lib/eigenlayer-contracts/src/contracts/\",\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\",\":zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6d7b3a9ad2a1e3a51b11c7c0212cab77ff76f79257940d6337c7ae00954be0c2\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://c07e078795c2b49c5d007debb895bf58281ba5a8f2a2c1df79d1fba815c97d2d\",\"dweb:/ipfs/QmbAZbiyA1SNqk7GYjJLNPt4JJmcC5KspTi82Tr4nW6QeS\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct VmSafe.AccessListItem[]","name":"access","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"storageKeys","type":"bytes32[]"}]}],"stateMutability":"nonpayable","type":"function","name":"accessList"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"struct VmSafe.PotentialRevert[]","name":"potentialReverts","type":"tuple[]","components":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"bool","name":"partialMatch","type":"bool"},{"internalType":"bytes","name":"revertData","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"struct VmSafe.PotentialRevert","name":"potentialRevert","type":"tuple","components":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"bool","name":"partialMatch","type":"bool"},{"internalType":"bytes","name":"revertData","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"bytes","name":"blob","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"attachBlob"},{"inputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"attachDelegation"},{"inputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]},{"internalType":"bool","name":"crossChain","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"attachDelegation"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"pure","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"broadcastRawTransaction"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"address","name":"source","type":"address"},{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"cloneAccount"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"subject","type":"string"},{"internalType":"string","name":"search","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"contains","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"cool"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"coolSlot"},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"copyStorage"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteStateSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteStateSnapshots"},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"bindingsPath","type":"string"},{"internalType":"string","name":"typeName","type":"string"},{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}],"stateMutability":"pure","type":"function","name":"eip712HashStruct","outputs":[{"internalType":"bytes32","name":"typeHash","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"typeNameOrDefinition","type":"string"},{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}],"stateMutability":"pure","type":"function","name":"eip712HashStruct","outputs":[{"internalType":"bytes32","name":"typeHash","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"bindingsPath","type":"string"},{"internalType":"string","name":"typeName","type":"string"}],"stateMutability":"pure","type":"function","name":"eip712HashType","outputs":[{"internalType":"bytes32","name":"typeHash","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"typeNameOrDefinition","type":"string"}],"stateMutability":"pure","type":"function","name":"eip712HashType","outputs":[{"internalType":"bytes32","name":"typeHash","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"jsonData","type":"string"}],"stateMutability":"pure","type":"function","name":"eip712HashTypedData","outputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"bytes","name":"bytecode","type":"bytes"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectCreate"},{"inputs":[{"internalType":"bytes","name":"bytecode","type":"bytes"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectCreate2"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"forkAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"forkBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"forkBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"forkBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"forkChain","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"chain","type":"uint256"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"forkChainAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"chain","type":"uint256"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"forkChainBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"chain","type":"uint256"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"forkChainBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"uint256","name":"chain","type":"uint256"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"forkChainBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"forkChainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"forkChainIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256","name":"chain","type":"uint256"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"forkChainInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function","name":"forkChainRpcUrl","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"chain","type":"uint256"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"forkChainString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"chain","type":"uint256"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"forkChainUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"forkChains","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"forkInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"forkRpcUrl","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"forkString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"forkUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"version","type":"string"}],"stateMutability":"view","type":"function","name":"foundryVersionAtLeast","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"version","type":"string"}],"stateMutability":"view","type":"function","name":"foundryVersionCmp","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[{"internalType":"bytes","name":"code","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"deployedCode","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByDeployedCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"}],"stateMutability":"view","type":"function","name":"getBroadcast","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary","name":"","type":"tuple","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getBroadcasts","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary[]","name":"","type":"tuple[]","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"}],"stateMutability":"view","type":"function","name":"getBroadcasts","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary[]","name":"","type":"tuple[]","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"chainAlias","type":"string"}],"stateMutability":"view","type":"function","name":"getChain","outputs":[{"internalType":"struct VmSafe.Chain","name":"chain","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"string","name":"chainAlias","type":"string"},{"internalType":"string","name":"rpcUrl","type":"string"}]}]},{"inputs":[{"internalType":"uint256","name":"chainId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getChain","outputs":[{"internalType":"struct VmSafe.Chain","name":"chain","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"string","name":"chainAlias","type":"string"},{"internalType":"string","name":"rpcUrl","type":"string"}]}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getDeployment","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployment","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getDeployments","outputs":[{"internalType":"address[]","name":"deployedAddresses","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFoundryVersion","outputs":[{"internalType":"string","name":"version","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"view","type":"function","name":"getRawBlockHeader","outputs":[{"internalType":"bytes","name":"rlpHeader","type":"bytes"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStateDiff","outputs":[{"internalType":"string","name":"diff","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStateDiffJson","outputs":[{"internalType":"string","name":"diff","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getWallets","outputs":[{"internalType":"address[]","name":"wallets","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"interceptInitcode"},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"mockCalls"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"mockCalls"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockFunction"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"noAccessList"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"pauseTracing"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"publicKeyP256","outputs":[{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"len","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBytes4","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBytes8","outputs":[{"internalType":"bytes8","name":"","type":"bytes8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"count","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"rememberKeys","outputs":[{"internalType":"address[]","name":"keyAddrs","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"string","name":"language","type":"string"},{"internalType":"uint32","name":"count","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"rememberKeys","outputs":[{"internalType":"address[]","name":"keyAddrs","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resetGasMetering"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"resumeTracing"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToState","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToStateAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"overwrite","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setArbitraryStorage"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setArbitraryStorage"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBlockhash"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"uint256","name":"seed","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setSeed"},{"inputs":[{"internalType":"uint256[]","name":"array","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"shuffle","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"signAndAttachDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"signAndAttachDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bool","name":"crossChain","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"signAndAttachDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"signDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bool","name":"crossChain","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"signDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"signDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"},{"internalType":"string","name":"reason","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"snapshotGasLastCall","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"snapshotGasLastCall","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshotState","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"snapshotValue"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"snapshotValue"},{"inputs":[{"internalType":"uint256[]","name":"array","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"sort","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startDebugTraceRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"startSnapshotGas"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"startSnapshotGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnDebugTraceRecording","outputs":[{"internalType":"struct VmSafe.DebugStep[]","name":"step","type":"tuple[]","components":[{"internalType":"uint256[]","name":"stack","type":"uint256[]"},{"internalType":"bytes","name":"memoryInput","type":"bytes"},{"internalType":"uint8","name":"opcode","type":"uint8"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isOutOfGas","type":"bool"},{"internalType":"address","name":"contractAddr","type":"address"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"uint64","name":"oldNonce","type":"uint64"},{"internalType":"uint64","name":"newNonce","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopRecord"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"view","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"warmSlot"},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accessList((address,bytes32[])[])":{"notice":"Utility cheatcode to set an EIP-2930 access list for all subsequent transactions."},"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"assumeNoRevert((address,bool,bytes))":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters."},"assumeNoRevert((address,bool,bytes)[])":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters."},"assumeNoRevert()":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"attachBlob(bytes)":{"notice":"Attach an EIP-4844 blob to the next call"},"attachDelegation((uint8,bytes32,bytes32,uint64,address))":{"notice":"Designate the next call as an EIP-7702 transaction"},"attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)":{"notice":"Designate the next call as an EIP-7702 transaction, with optional cross-chain validity."},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"broadcastRawTransaction(bytes)":{"notice":"Takes a signed transaction and broadcasts it to the network."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"cloneAccount(address,address)":{"notice":"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"contains(string,string)":{"notice":"Returns true if `search` is found in `subject`, false otherwise."},"cool(address)":{"notice":"Marks the slots of an account and the account address as cold."},"coolSlot(address,bytes32)":{"notice":"Utility cheatcode to mark specific storage slot as cold, simulating no prior read."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"copyStorage(address,address)":{"notice":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions."},"deleteSnapshots()":{"notice":"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions."},"deleteStateSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteStateSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments."},"deployCode(string,bytes,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments."},"deployCode(string,bytes,uint256)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`."},"deployCode(string,bytes,uint256,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`."},"deployCode(string,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,uint256)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`."},"deployCode(string,uint256,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnemonic string (or mnemonic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnemonic string (or mnemonic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"eip712HashStruct(string,bytes)":{"notice":"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Supports 2 different inputs: 1. Name of the type (i.e. \"PermitSingle\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \"Foo(Bar bar) Bar(uint256 baz)\"). * Note: the cheatcode will use the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces."},"eip712HashStruct(string,string,bytes)":{"notice":"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \"PermitSingle\"). * `abiEncodedData`: ABI-encoded data for the struct that is being hashed."},"eip712HashType(string)":{"notice":"Generates the hash of the canonical EIP-712 type representation. Supports 2 different inputs: 1. Name of the type (i.e. \"Transaction\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \"Foo(Bar bar) Bar(uint256 baz)\"). * Note: the cheatcode will output the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces."},"eip712HashType(string,string)":{"notice":"Generates the hash of the canonical EIP-712 type representation. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \"Transaction\")."},"eip712HashTypedData(string)":{"notice":"Generates a ready-to-sign digest of human-readable typed data following the EIP-712 standard."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCreate(bytes,address)":{"notice":"Expects the deployment of the specified bytecode by the specified address using the CREATE opcode"},"expectCreate2(bytes,address)":{"notice":"Expects the deployment of the specified bytecode by the specified address using the CREATE2 opcode"},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(address,uint64)":{"notice":"Expect a given number of logs from a specific emitter with all topic and data checks enabled."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool,address,uint64)":{"notice":"Expect a given number of logs from a specific emitter with the provided topics."},"expectEmit(bool,bool,bool,bool,uint64)":{"notice":"Expect a given number of logs with the provided topics."},"expectEmit(uint64)":{"notice":"Expect a given number of logs with all topic and data checks enabled."},"expectEmitAnonymous()":{"notice":"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmitAnonymous(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous(bool,bool,bool,bool,bool)":{"notice":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmitAnonymous(bool,bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectPartialRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectPartialRevert(bytes4,address)":{"notice":"Expects an error on next call to reverter address, that starts with the revert data."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(address)":{"notice":"Expects an error with any revert data on next call to reverter address."},"expectRevert(address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes,address)":{"notice":"Expects an error from reverter address on next call, that exactly matches the revert data."},"expectRevert(bytes,address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data."},"expectRevert(bytes,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4,address)":{"notice":"Expects an error from reverter address on next call, with any revert data."},"expectRevert(bytes4,address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data."},"expectRevert(bytes4,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls that match the revert data."},"expectRevert(uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"forkAddress(string)":{"notice":"Gets the value for the key `key` from the currently active fork and parses it as `address`. Reverts if the key was not found or the value could not be parsed."},"forkBool(string)":{"notice":"Gets the value for the key `key` from the currently active fork and parses it as `bool`. Reverts if the key was not found or the value could not be parsed."},"forkBytes(string)":{"notice":"Gets the value for the key `key` from the currently active fork and parses it as `bytes`. Reverts if the key was not found or the value could not be parsed."},"forkBytes32(string)":{"notice":"Gets the value for the key `key` from the currently active fork and parses it as `bytes32`. Reverts if the key was not found or the value could not be parsed."},"forkChain()":{"notice":"Returns the chain name of the currently selected fork."},"forkChainAddress(uint256,string)":{"notice":"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `address`. Reverts if the key was not found or the value could not be parsed."},"forkChainBool(uint256,string)":{"notice":"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `bool`. Reverts if the key was not found or the value could not be parsed."},"forkChainBytes(uint256,string)":{"notice":"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `bytes`. Reverts if the key was not found or the value could not be parsed."},"forkChainBytes32(uint256,string)":{"notice":"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `bytes32`. Reverts if the key was not found or the value could not be parsed."},"forkChainId()":{"notice":"Returns the chain id of the currently selected fork."},"forkChainIds()":{"notice":"Returns an array with the ids of all the configured fork chains. Note that the configured fork chains are subsections of the `[fork]` section of 'foundry.toml'."},"forkChainInt(uint256,string)":{"notice":"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `int256`. Reverts if the key was not found or the value could not be parsed."},"forkChainRpcUrl(uint256)":{"notice":"Returns the rpc url of the corresponding chain id. By default, the rpc url of each fork is derived from the `[rpc_endpoints]`, unless the rpc config is specifically informed in the fork config for that specific chain."},"forkChainString(uint256,string)":{"notice":"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `string`. Reverts if the key was not found or the value could not be parsed."},"forkChainUint(uint256,string)":{"notice":"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `uint256`. Reverts if the key was not found or the value could not be parsed."},"forkChains()":{"notice":"Returns an array with the name of all the configured fork chains. Note that the configured fork chains are subsections of the `[fork]` section of 'foundry.toml'."},"forkInt(string)":{"notice":"Gets the value for the key `key` from the currently active fork and parses it as `int256`. Reverts if the key was not found or the value could not be parsed."},"forkRpcUrl()":{"notice":"Returns the rpc url of the currently selected fork. By default, the rpc url of each fork is derived from the `[rpc_endpoints]`, unless the rpc config is specifically informed in the fork config for that specific chain."},"forkString(string)":{"notice":"Gets the value for the key `key` from the currently active fork and parses it as `string`. Reverts if the key was not found or the value could not be parsed."},"forkUint(string)":{"notice":"Gets the value for the key `key` from the currently active fork and parses it as `uint256`. Reverts if the key was not found or the value could not be parsed."},"foundryVersionAtLeast(string)":{"notice":"Returns true if the current Foundry version is greater than or equal to the given version. The given version string must be in the format `major.minor.patch`. This is equivalent to `foundryVersionCmp(version) >= 0`."},"foundryVersionCmp(string)":{"notice":"Compares the current Foundry version with the given version string. The given version string must be in the format `major.minor.patch`. Returns: -1 if current Foundry version is less than the given version 0 if current Foundry version equals the given version 1 if current Foundry version is greater than the given version This result can then be used with a comparison operator against `0`. For example, to check if the current Foundry version is greater than or equal to `1.0.0`: `if (foundryVersionCmp(\"1.0.0\") >= 0) { ... }`"},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getArtifactPathByCode(bytes)":{"notice":"Gets the artifact path from code (aka. creation code)."},"getArtifactPathByDeployedCode(bytes)":{"notice":"Gets the artifact path from deployed code (aka. runtime code)."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBroadcast(string,uint64,uint8)":{"notice":"Returns the most recent broadcast for the given contract on `chainId` matching `txType`. For example: The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`. The most recent call can be fetched by passing `txType` as `CALL`."},"getBroadcasts(string,uint64)":{"notice":"Returns all broadcasts for the given contract on `chainId`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"getBroadcasts(string,uint64,uint8)":{"notice":"Returns all broadcasts for the given contract on `chainId` with the specified `txType`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"getChain(string)":{"notice":"Returns a Chain struct for specific alias"},"getChain(uint256)":{"notice":"Returns a Chain struct for specific chainId"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployment(string)":{"notice":"Returns the most recent deployment for the current `chainId`."},"getDeployment(string,uint64)":{"notice":"Returns the most recent deployment for the given contract on `chainId`"},"getDeployments(string,uint64)":{"notice":"Returns all deployments for the given contract on `chainId` Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber. The most recent deployment is the first element, and the oldest is the last."},"getFoundryVersion()":{"notice":"Returns the Foundry version. Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile> Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use UNIX format (e.g., >= 1700000000) to compare timestamps while ignoring minor time differences."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get the nonce of a `Wallet`."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRawBlockHeader(uint256)":{"notice":"Gets the RLP encoded block header for a given block number. Returns the block header in the same format as `cast block <block_number> --raw`."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"getStateDiff()":{"notice":"Returns state diffs from current `vm.startStateDiffRecording` session."},"getStateDiffJson()":{"notice":"Returns state diffs from current `vm.startStateDiffRecording` session, in json format."},"getWallets()":{"notice":"Returns addresses of available unlocked wallets in the script environment."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"interceptInitcode()":{"notice":"Causes the next contract creation (via new) to fail and return its initcode in the returndata buffer. This allows type-safe access to the initcode payload that would be used for contract creation. Example usage: vm.interceptInitcode(); bytes memory initcode; try new MyContract(param1, param2) { assert(false); } catch (bytes memory interceptedInitcode) { initcode = interceptedInitcode; }"},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call from the callee perspective."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory EVM state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,bytes4,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCall(address,uint256,bytes4,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,bytes4,bytes)":{"notice":"Reverts a call to an address with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"mockCallRevert(address,uint256,bytes4,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCalls(address,bytes,bytes[])":{"notice":"Mocks multiple calls to an address, returning specified data for each call."},"mockCalls(address,uint256,bytes,bytes[])":{"notice":"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call."},"mockFunction(address,address,bytes)":{"notice":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted."},"noAccessList()":{"notice":"Utility cheatcode to remove any EIP-2930 access list set by `accessList` cheatcode."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlType(string,string)":{"notice":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"parseTomlType(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"parseTomlTypeArray(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"pauseTracing()":{"notice":"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prank(address,address,bool)":{"notice":"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prank(address,bool)":{"notice":"Sets the *next* delegate call's `msg.sender` to be the input address."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"publicKeyP256(uint256)":{"notice":"Derives secp256r1 public key from the provided `privateKey`."},"randomAddress()":{"notice":"Returns a random `address`."},"randomBool()":{"notice":"Returns a random `bool`."},"randomBytes(uint256)":{"notice":"Returns a random byte array value of the given length."},"randomBytes4()":{"notice":"Returns a random fixed-size byte array of length 4."},"randomBytes8()":{"notice":"Returns a random fixed-size byte array of length 8."},"randomInt()":{"notice":"Returns a random `int256` value."},"randomInt(uint256)":{"notice":"Returns a random `int256` value of given bits."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256)":{"notice":"Returns a random `uint256` value of given bits."},"randomUint(uint256,uint256)":{"notice":"Returns random uint256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes. Use `accesses` to get the recorded data. Subsequent calls to `record` will clear the previous data."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"rememberKeys(string,string,string,uint32)":{"notice":"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"rememberKeys(string,string,uint32)":{"notice":"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetGasMetering()":{"notice":"Reset gas metering (i.e. gas usage is set to gas limit)."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"resumeTracing()":{"notice":"Unpauses collection of call traces."},"revertTo(uint256)":{"notice":"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions."},"revertToAndDelete(uint256)":{"notice":"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions."},"revertToState(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`."},"revertToStateAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setArbitraryStorage(address)":{"notice":"Utility cheatcode to set arbitrary storage for given target address."},"setArbitraryStorage(address,bool)":{"notice":"Utility cheatcode to set arbitrary storage for given target address and overwrite any storage slots that have been previously set."},"setBlockhash(uint256,bytes32)":{"notice":"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"setSeed(uint256)":{"notice":"Set RNG seed."},"shuffle(uint256[])":{"notice":"Randomly shuffles an array."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signAndAttachDelegation(address,uint256)":{"notice":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction"},"signAndAttachDelegation(address,uint256,bool)":{"notice":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction, with optional cross-chain validity."},"signAndAttachDelegation(address,uint256,uint64)":{"notice":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction for specific nonce"},"signCompact((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signCompact(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address."},"signCompact(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"signCompact(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signDelegation(address,uint256)":{"notice":"Sign an EIP-7702 authorization for delegation"},"signDelegation(address,uint256,bool)":{"notice":"Sign an EIP-7702 authorization for delegation, with optional cross-chain validity."},"signDelegation(address,uint256,uint64)":{"notice":"Sign an EIP-7702 authorization for delegation for specific nonce"},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top level of a test."},"skip(bool,string)":{"notice":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions."},"snapshotGasLastCall(string)":{"notice":"Snapshot capture the gas usage of the last call by name from the callee perspective."},"snapshotGasLastCall(string,string)":{"notice":"Snapshot capture the gas usage of the last call by name in a group from the callee perspective."},"snapshotState()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`."},"snapshotValue(string,string,uint256)":{"notice":"Snapshot capture an arbitrary numerical value by name in a group."},"snapshotValue(string,uint256)":{"notice":"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name."},"sort(uint256[])":{"notice":"Sorts an array in ascending order."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startDebugTraceRecording()":{"notice":"Records the debug trace during the run."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startPrank(address,address,bool)":{"notice":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startPrank(address,bool)":{"notice":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called."},"startSnapshotGas(string)":{"notice":"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name."},"startSnapshotGas(string,string)":{"notice":"Start a snapshot capture of the current gas usage by name in a group."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnDebugTraceRecording()":{"notice":"Stop debug trace recording and returns the recorded debug trace."},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"stopRecord()":{"notice":"Stops recording storage reads and writes."},"stopSnapshotGas()":{"notice":"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start."},"stopSnapshotGas(string)":{"notice":"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name."},"stopSnapshotGas(string,string)":{"notice":"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warmSlot(address,bytes32)":{"notice":"Utility cheatcode to mark specific storage slot as warm, simulating a prior read."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@eigenlayer-middleware/=lib/eigenlayer-middleware/src/","@eigenlayer/=lib/eigenlayer-contracts/src/contracts/","@ensdomains/=lib/v4-core/node_modules/@ensdomains/","@forge-std/=lib/forge-std/src/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v4-core/=lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-core/node_modules/hardhat/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-core/lib/solmate/","v4-core/=lib/v4-core/src/","v4-periphery/=lib/v4-periphery/","zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x6d7b3a9ad2a1e3a51b11c7c0212cab77ff76f79257940d6337c7ae00954be0c2","urls":["bzz-raw://c07e078795c2b49c5d007debb895bf58281ba5a8f2a2c1df79d1fba815c97d2d","dweb:/ipfs/QmbAZbiyA1SNqk7GYjJLNPt4JJmcC5KspTi82Tr4nW6QeS"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":42027,"exportedSymbols":{"Vm":[42026],"VmSafe":[40955]},"nodeType":"SourceUnit","src":"117:134404:36","nodes":[{"id":36742,"nodeType":"PragmaDirective","src":"117:31:36","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":36743,"nodeType":"PragmaDirective","src":"149:33:36","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":40955,"nodeType":"ContractDefinition","src":"409:107351:36","nodes":[{"id":36751,"nodeType":"EnumDefinition","src":"529:533:36","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":36745,"nodeType":"StructuredDocumentation","src":"432:92:36","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":36746,"name":"None","nameLocation":"610:4:36","nodeType":"EnumValue","src":"610:4:36"},{"id":36747,"name":"Broadcast","nameLocation":"714:9:36","nodeType":"EnumValue","src":"714:9:36"},{"id":36748,"name":"RecurrentBroadcast","nameLocation":"829:18:36","nodeType":"EnumValue","src":"829:18:36"},{"id":36749,"name":"Prank","nameLocation":"939:5:36","nodeType":"EnumValue","src":"939:5:36"},{"id":36750,"name":"RecurrentPrank","nameLocation":"1042:14:36","nodeType":"EnumValue","src":"1042:14:36"}],"name":"CallerMode","nameLocation":"534:10:36"},{"id":36764,"nodeType":"EnumDefinition","src":"1118:791:36","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":36752,"nodeType":"StructuredDocumentation","src":"1068:45:36","text":"The kind of account access that occurred."},"members":[{"id":36753,"name":"Call","nameLocation":"1186:4:36","nodeType":"EnumValue","src":"1186:4:36"},{"id":36754,"name":"DelegateCall","nameLocation":"1252:12:36","nodeType":"EnumValue","src":"1252:12:36"},{"id":36755,"name":"CallCode","nameLocation":"1322:8:36","nodeType":"EnumValue","src":"1322:8:36"},{"id":36756,"name":"StaticCall","nameLocation":"1390:10:36","nodeType":"EnumValue","src":"1390:10:36"},{"id":36757,"name":"Create","nameLocation":"1446:6:36","nodeType":"EnumValue","src":"1446:6:36"},{"id":36758,"name":"SelfDestruct","nameLocation":"1505:12:36","nodeType":"EnumValue","src":"1505:12:36"},{"id":36759,"name":"Resume","nameLocation":"1644:6:36","nodeType":"EnumValue","src":"1644:6:36"},{"id":36760,"name":"Balance","nameLocation":"1703:7:36","nodeType":"EnumValue","src":"1703:7:36"},{"id":36761,"name":"Extcodesize","nameLocation":"1764:11:36","nodeType":"EnumValue","src":"1764:11:36"},{"id":36762,"name":"Extcodehash","nameLocation":"1829:11:36","nodeType":"EnumValue","src":"1829:11:36"},{"id":36763,"name":"Extcodecopy","nameLocation":"1892:11:36","nodeType":"EnumValue","src":"1892:11:36"}],"name":"AccountAccessKind","nameLocation":"1123:17:36"},{"id":36775,"nodeType":"EnumDefinition","src":"1949:683:36","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":36765,"nodeType":"StructuredDocumentation","src":"1915:29:36","text":"Forge execution contexts."},"members":[{"id":36766,"name":"TestGroup","nameLocation":"2047:9:36","nodeType":"EnumValue","src":"2047:9:36"},{"id":36767,"name":"Test","nameLocation":"2109:4:36","nodeType":"EnumValue","src":"2109:4:36"},{"id":36768,"name":"Coverage","nameLocation":"2170:8:36","nodeType":"EnumValue","src":"2170:8:36"},{"id":36769,"name":"Snapshot","nameLocation":"2235:8:36","nodeType":"EnumValue","src":"2235:8:36"},{"id":36770,"name":"ScriptGroup","nameLocation":"2327:11:36","nodeType":"EnumValue","src":"2327:11:36"},{"id":36771,"name":"ScriptDryRun","nameLocation":"2393:12:36","nodeType":"EnumValue","src":"2393:12:36"},{"id":36772,"name":"ScriptBroadcast","nameLocation":"2472:15:36","nodeType":"EnumValue","src":"2472:15:36"},{"id":36773,"name":"ScriptResume","nameLocation":"2551:12:36","nodeType":"EnumValue","src":"2551:12:36"},{"id":36774,"name":"Unknown","nameLocation":"2619:7:36","nodeType":"EnumValue","src":"2619:7:36"}],"name":"ForgeContext","nameLocation":"1954:12:36"},{"id":36780,"nodeType":"EnumDefinition","src":"2696:208:36","nodes":[],"canonicalName":"VmSafe.BroadcastTxType","documentation":{"id":36776,"nodeType":"StructuredDocumentation","src":"2638:53:36","text":"The transaction type (`txType`) of the broadcast."},"members":[{"id":36777,"name":"Call","nameLocation":"2770:4:36","nodeType":"EnumValue","src":"2770:4:36"},{"id":36778,"name":"Create","nameLocation":"2829:6:36","nodeType":"EnumValue","src":"2829:6:36"},{"id":36779,"name":"Create2","nameLocation":"2891:7:36","nodeType":"EnumValue","src":"2891:7:36"}],"name":"BroadcastTxType","nameLocation":"2701:15:36"},{"id":36789,"nodeType":"StructDefinition","src":"2966:237:36","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":36781,"nodeType":"StructuredDocumentation","src":"2910:51:36","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":36784,"mutability":"mutable","name":"topics","nameLocation":"3064:6:36","nodeType":"VariableDeclaration","scope":36789,"src":"3054:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":36782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3054:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":36783,"nodeType":"ArrayTypeName","src":"3054:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":36786,"mutability":"mutable","name":"data","nameLocation":"3122:4:36","nodeType":"VariableDeclaration","scope":36789,"src":"3116:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":36785,"name":"bytes","nodeType":"ElementaryTypeName","src":"3116:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":36788,"mutability":"mutable","name":"emitter","nameLocation":"3189:7:36","nodeType":"VariableDeclaration","scope":36789,"src":"3181:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36787,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2973:3:36","scope":40955,"visibility":"public"},{"id":36795,"nodeType":"StructDefinition","src":"3272:119:36","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":36790,"nodeType":"StructuredDocumentation","src":"3209:58:36","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":36792,"mutability":"mutable","name":"key","nameLocation":"3337:3:36","nodeType":"VariableDeclaration","scope":36795,"src":"3330:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":36791,"name":"string","nodeType":"ElementaryTypeName","src":"3330:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":36794,"mutability":"mutable","name":"url","nameLocation":"3381:3:36","nodeType":"VariableDeclaration","scope":36795,"src":"3374:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":36793,"name":"string","nodeType":"ElementaryTypeName","src":"3374:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3279:3:36","scope":40955,"visibility":"public"},{"id":36816,"nodeType":"StructDefinition","src":"3451:615:36","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":36796,"nodeType":"StructuredDocumentation","src":"3397:49:36","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":36798,"mutability":"mutable","name":"emitter","nameLocation":"3532:7:36","nodeType":"VariableDeclaration","scope":36816,"src":"3524:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36797,"name":"address","nodeType":"ElementaryTypeName","src":"3524:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36801,"mutability":"mutable","name":"topics","nameLocation":"3626:6:36","nodeType":"VariableDeclaration","scope":36816,"src":"3616:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":36799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3616:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":36800,"nodeType":"ArrayTypeName","src":"3616:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":36803,"mutability":"mutable","name":"data","nameLocation":"3684:4:36","nodeType":"VariableDeclaration","scope":36816,"src":"3678:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":36802,"name":"bytes","nodeType":"ElementaryTypeName","src":"3678:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":36805,"mutability":"mutable","name":"blockHash","nameLocation":"3733:9:36","nodeType":"VariableDeclaration","scope":36816,"src":"3725:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3725:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":36807,"mutability":"mutable","name":"blockNumber","nameLocation":"3788:11:36","nodeType":"VariableDeclaration","scope":36816,"src":"3781:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36806,"name":"uint64","nodeType":"ElementaryTypeName","src":"3781:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36809,"mutability":"mutable","name":"transactionHash","nameLocation":"3850:15:36","nodeType":"VariableDeclaration","scope":36816,"src":"3842:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3842:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":36811,"mutability":"mutable","name":"transactionIndex","nameLocation":"3929:16:36","nodeType":"VariableDeclaration","scope":36816,"src":"3922:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36810,"name":"uint64","nodeType":"ElementaryTypeName","src":"3922:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36813,"mutability":"mutable","name":"logIndex","nameLocation":"3989:8:36","nodeType":"VariableDeclaration","scope":36816,"src":"3981:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36812,"name":"uint256","nodeType":"ElementaryTypeName","src":"3981:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36815,"mutability":"mutable","name":"removed","nameLocation":"4052:7:36","nodeType":"VariableDeclaration","scope":36816,"src":"4047:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36814,"name":"bool","nodeType":"ElementaryTypeName","src":"4047:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3458:10:36","scope":40955,"visibility":"public"},{"id":36828,"nodeType":"StructDefinition","src":"4142:334:36","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":36817,"nodeType":"StructuredDocumentation","src":"4072:65:36","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":36819,"mutability":"mutable","name":"errorMessage","nameLocation":"4213:12:36","nodeType":"VariableDeclaration","scope":36828,"src":"4206:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":36818,"name":"string","nodeType":"ElementaryTypeName","src":"4206:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":36821,"mutability":"mutable","name":"path","nameLocation":"4276:4:36","nodeType":"VariableDeclaration","scope":36828,"src":"4269:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":36820,"name":"string","nodeType":"ElementaryTypeName","src":"4269:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":36823,"mutability":"mutable","name":"depth","nameLocation":"4332:5:36","nodeType":"VariableDeclaration","scope":36828,"src":"4325:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36822,"name":"uint64","nodeType":"ElementaryTypeName","src":"4325:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36825,"mutability":"mutable","name":"isDir","nameLocation":"4397:5:36","nodeType":"VariableDeclaration","scope":36828,"src":"4392:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36824,"name":"bool","nodeType":"ElementaryTypeName","src":"4392:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36827,"mutability":"mutable","name":"isSymlink","nameLocation":"4460:9:36","nodeType":"VariableDeclaration","scope":36828,"src":"4455:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36826,"name":"bool","nodeType":"ElementaryTypeName","src":"4455:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"4149:8:36","scope":40955,"visibility":"public"},{"id":36844,"nodeType":"StructDefinition","src":"4706:599:36","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":36829,"nodeType":"StructuredDocumentation","src":"4482:219:36","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":36831,"mutability":"mutable","name":"isDir","nameLocation":"4792:5:36","nodeType":"VariableDeclaration","scope":36844,"src":"4787:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36830,"name":"bool","nodeType":"ElementaryTypeName","src":"4787:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36833,"mutability":"mutable","name":"isSymlink","nameLocation":"4863:9:36","nodeType":"VariableDeclaration","scope":36844,"src":"4858:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36832,"name":"bool","nodeType":"ElementaryTypeName","src":"4858:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36835,"mutability":"mutable","name":"length","nameLocation":"4955:6:36","nodeType":"VariableDeclaration","scope":36844,"src":"4947:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36834,"name":"uint256","nodeType":"ElementaryTypeName","src":"4947:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36837,"mutability":"mutable","name":"readOnly","nameLocation":"5046:8:36","nodeType":"VariableDeclaration","scope":36844,"src":"5041:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36836,"name":"bool","nodeType":"ElementaryTypeName","src":"5041:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36839,"mutability":"mutable","name":"modified","nameLocation":"5135:8:36","nodeType":"VariableDeclaration","scope":36844,"src":"5127:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36838,"name":"uint256","nodeType":"ElementaryTypeName","src":"5127:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36841,"mutability":"mutable","name":"accessed","nameLocation":"5211:8:36","nodeType":"VariableDeclaration","scope":36844,"src":"5203:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36840,"name":"uint256","nodeType":"ElementaryTypeName","src":"5203:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36843,"mutability":"mutable","name":"created","nameLocation":"5291:7:36","nodeType":"VariableDeclaration","scope":36844,"src":"5283:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36842,"name":"uint256","nodeType":"ElementaryTypeName","src":"5283:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4713:10:36","scope":40955,"visibility":"public"},{"id":36854,"nodeType":"StructDefinition","src":"5359:277:36","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":36845,"nodeType":"StructuredDocumentation","src":"5311:43:36","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":36847,"mutability":"mutable","name":"addr","nameLocation":"5424:4:36","nodeType":"VariableDeclaration","scope":36854,"src":"5416:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36846,"name":"address","nodeType":"ElementaryTypeName","src":"5416:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36849,"mutability":"mutable","name":"publicKeyX","nameLocation":"5486:10:36","nodeType":"VariableDeclaration","scope":36854,"src":"5478:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36848,"name":"uint256","nodeType":"ElementaryTypeName","src":"5478:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36851,"mutability":"mutable","name":"publicKeyY","nameLocation":"5554:10:36","nodeType":"VariableDeclaration","scope":36854,"src":"5546:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36850,"name":"uint256","nodeType":"ElementaryTypeName","src":"5546:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36853,"mutability":"mutable","name":"privateKey","nameLocation":"5619:10:36","nodeType":"VariableDeclaration","scope":36854,"src":"5611:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36852,"name":"uint256","nodeType":"ElementaryTypeName","src":"5611:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5366:6:36","scope":40955,"visibility":"public"},{"id":36862,"nodeType":"StructDefinition","src":"5681:213:36","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":36855,"nodeType":"StructuredDocumentation","src":"5642:34:36","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":36857,"mutability":"mutable","name":"exitCode","nameLocation":"5752:8:36","nodeType":"VariableDeclaration","scope":36862,"src":"5746:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":36856,"name":"int32","nodeType":"ElementaryTypeName","src":"5746:5:36","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":36859,"mutability":"mutable","name":"stdout","nameLocation":"5829:6:36","nodeType":"VariableDeclaration","scope":36862,"src":"5823:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":36858,"name":"bytes","nodeType":"ElementaryTypeName","src":"5823:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":36861,"mutability":"mutable","name":"stderr","nameLocation":"5881:6:36","nodeType":"VariableDeclaration","scope":36862,"src":"5875:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":36860,"name":"bytes","nodeType":"ElementaryTypeName","src":"5875:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5688:9:36","scope":40955,"visibility":"public"},{"id":36868,"nodeType":"StructDefinition","src":"5943:184:36","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":36863,"nodeType":"StructuredDocumentation","src":"5900:38:36","text":"Information on the chain and fork."},"members":[{"constant":false,"id":36865,"mutability":"mutable","name":"forkId","nameLocation":"6044:6:36","nodeType":"VariableDeclaration","scope":36868,"src":"6036:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36864,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36867,"mutability":"mutable","name":"chainId","nameLocation":"6113:7:36","nodeType":"VariableDeclaration","scope":36868,"src":"6105:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36866,"name":"uint256","nodeType":"ElementaryTypeName","src":"6105:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5950:9:36","scope":40955,"visibility":"public"},{"id":36878,"nodeType":"StructDefinition","src":"6173:302:36","nodes":[],"canonicalName":"VmSafe.Chain","documentation":{"id":36869,"nodeType":"StructuredDocumentation","src":"6133:35:36","text":"Information about a blockchain."},"members":[{"constant":false,"id":36871,"mutability":"mutable","name":"name","nameLocation":"6230:4:36","nodeType":"VariableDeclaration","scope":36878,"src":"6223:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":36870,"name":"string","nodeType":"ElementaryTypeName","src":"6223:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":36873,"mutability":"mutable","name":"chainId","nameLocation":"6285:7:36","nodeType":"VariableDeclaration","scope":36878,"src":"6277:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36872,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36875,"mutability":"mutable","name":"chainAlias","nameLocation":"6385:10:36","nodeType":"VariableDeclaration","scope":36878,"src":"6378:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":36874,"name":"string","nodeType":"ElementaryTypeName","src":"6378:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":36877,"mutability":"mutable","name":"rpcUrl","nameLocation":"6462:6:36","nodeType":"VariableDeclaration","scope":36878,"src":"6455:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":36876,"name":"string","nodeType":"ElementaryTypeName","src":"6455:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Chain","nameLocation":"6180:5:36","scope":40955,"visibility":"public"},{"id":36914,"nodeType":"StructDefinition","src":"6536:1992:36","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":36879,"nodeType":"StructuredDocumentation","src":"6481:50:36","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":36882,"mutability":"mutable","name":"chainInfo","nameLocation":"6628:9:36","nodeType":"VariableDeclaration","scope":36914,"src":"6618:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$36868_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":36881,"nodeType":"UserDefinedTypeName","pathNode":{"id":36880,"name":"ChainInfo","nameLocations":["6618:9:36"],"nodeType":"IdentifierPath","referencedDeclaration":36868,"src":"6618:9:36"},"referencedDeclaration":36868,"src":"6618:9:36","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$36868_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":36885,"mutability":"mutable","name":"kind","nameLocation":"7091:4:36","nodeType":"VariableDeclaration","scope":36914,"src":"7073:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$36764","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":36884,"nodeType":"UserDefinedTypeName","pathNode":{"id":36883,"name":"AccountAccessKind","nameLocations":["7073:17:36"],"nodeType":"IdentifierPath","referencedDeclaration":36764,"src":"7073:17:36"},"referencedDeclaration":36764,"src":"7073:17:36","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$36764","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":36887,"mutability":"mutable","name":"account","nameLocation":"7268:7:36","nodeType":"VariableDeclaration","scope":36914,"src":"7260:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36886,"name":"address","nodeType":"ElementaryTypeName","src":"7260:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36889,"mutability":"mutable","name":"accessor","nameLocation":"7331:8:36","nodeType":"VariableDeclaration","scope":36914,"src":"7323:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36888,"name":"address","nodeType":"ElementaryTypeName","src":"7323:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36891,"mutability":"mutable","name":"initialized","nameLocation":"7542:11:36","nodeType":"VariableDeclaration","scope":36914,"src":"7537:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36890,"name":"bool","nodeType":"ElementaryTypeName","src":"7537:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36893,"mutability":"mutable","name":"oldBalance","nameLocation":"7628:10:36","nodeType":"VariableDeclaration","scope":36914,"src":"7620:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36892,"name":"uint256","nodeType":"ElementaryTypeName","src":"7620:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36895,"mutability":"mutable","name":"newBalance","nameLocation":"7803:10:36","nodeType":"VariableDeclaration","scope":36914,"src":"7795:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36894,"name":"uint256","nodeType":"ElementaryTypeName","src":"7795:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36897,"mutability":"mutable","name":"deployedCode","nameLocation":"7880:12:36","nodeType":"VariableDeclaration","scope":36914,"src":"7874:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":36896,"name":"bytes","nodeType":"ElementaryTypeName","src":"7874:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":36899,"mutability":"mutable","name":"value","nameLocation":"7964:5:36","nodeType":"VariableDeclaration","scope":36914,"src":"7956:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36898,"name":"uint256","nodeType":"ElementaryTypeName","src":"7956:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36901,"mutability":"mutable","name":"data","nameLocation":"8038:4:36","nodeType":"VariableDeclaration","scope":36914,"src":"8032:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":36900,"name":"bytes","nodeType":"ElementaryTypeName","src":"8032:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":36903,"mutability":"mutable","name":"reverted","nameLocation":"8133:8:36","nodeType":"VariableDeclaration","scope":36914,"src":"8128:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36902,"name":"bool","nodeType":"ElementaryTypeName","src":"8128:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36907,"mutability":"mutable","name":"storageAccesses","nameLocation":"8255:15:36","nodeType":"VariableDeclaration","scope":36914,"src":"8239:31:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$36928_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":36905,"nodeType":"UserDefinedTypeName","pathNode":{"id":36904,"name":"StorageAccess","nameLocations":["8239:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":36928,"src":"8239:13:36"},"referencedDeclaration":36928,"src":"8239:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$36928_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":36906,"nodeType":"ArrayTypeName","src":"8239:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$36928_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":36909,"mutability":"mutable","name":"depth","nameLocation":"8361:5:36","nodeType":"VariableDeclaration","scope":36914,"src":"8354:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36908,"name":"uint64","nodeType":"ElementaryTypeName","src":"8354:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36911,"mutability":"mutable","name":"oldNonce","nameLocation":"8438:8:36","nodeType":"VariableDeclaration","scope":36914,"src":"8431:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36910,"name":"uint64","nodeType":"ElementaryTypeName","src":"8431:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36913,"mutability":"mutable","name":"newNonce","nameLocation":"8513:8:36","nodeType":"VariableDeclaration","scope":36914,"src":"8506:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36912,"name":"uint64","nodeType":"ElementaryTypeName","src":"8506:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"6543:13:36","scope":40955,"visibility":"public"},{"id":36928,"nodeType":"StructDefinition","src":"8590:425:36","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":36915,"nodeType":"StructuredDocumentation","src":"8534:51:36","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":36917,"mutability":"mutable","name":"account","nameLocation":"8680:7:36","nodeType":"VariableDeclaration","scope":36928,"src":"8672:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36916,"name":"address","nodeType":"ElementaryTypeName","src":"8672:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36919,"mutability":"mutable","name":"slot","nameLocation":"8744:4:36","nodeType":"VariableDeclaration","scope":36928,"src":"8736:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8736:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":36921,"mutability":"mutable","name":"isWrite","nameLocation":"8801:7:36","nodeType":"VariableDeclaration","scope":36928,"src":"8796:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36920,"name":"bool","nodeType":"ElementaryTypeName","src":"8796:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36923,"mutability":"mutable","name":"previousValue","nameLocation":"8869:13:36","nodeType":"VariableDeclaration","scope":36928,"src":"8861:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8861:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":36925,"mutability":"mutable","name":"newValue","nameLocation":"8938:8:36","nodeType":"VariableDeclaration","scope":36928,"src":"8930:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8930:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":36927,"mutability":"mutable","name":"reverted","nameLocation":"9000:8:36","nodeType":"VariableDeclaration","scope":36928,"src":"8995:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36926,"name":"bool","nodeType":"ElementaryTypeName","src":"8995:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"8597:13:36","scope":40955,"visibility":"public"},{"id":36940,"nodeType":"StructDefinition","src":"9066:458:36","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":36929,"nodeType":"StructuredDocumentation","src":"9021:40:36","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":36931,"mutability":"mutable","name":"gasLimit","nameLocation":"9132:8:36","nodeType":"VariableDeclaration","scope":36940,"src":"9125:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36930,"name":"uint64","nodeType":"ElementaryTypeName","src":"9125:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36933,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"9188:12:36","nodeType":"VariableDeclaration","scope":36940,"src":"9181:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36932,"name":"uint64","nodeType":"ElementaryTypeName","src":"9181:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36935,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"9369:13:36","nodeType":"VariableDeclaration","scope":36940,"src":"9362:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36934,"name":"uint64","nodeType":"ElementaryTypeName","src":"9362:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36937,"mutability":"mutable","name":"gasRefunded","nameLocation":"9437:11:36","nodeType":"VariableDeclaration","scope":36940,"src":"9431:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":36936,"name":"int64","nodeType":"ElementaryTypeName","src":"9431:5:36","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":36939,"mutability":"mutable","name":"gasRemaining","nameLocation":"9505:12:36","nodeType":"VariableDeclaration","scope":36940,"src":"9498:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36938,"name":"uint64","nodeType":"ElementaryTypeName","src":"9498:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"9073:3:36","scope":40955,"visibility":"public"},{"id":36955,"nodeType":"StructDefinition","src":"9587:848:36","nodes":[],"canonicalName":"VmSafe.DebugStep","documentation":{"id":36941,"nodeType":"StructuredDocumentation","src":"9530:52:36","text":"The result of the `stopDebugTraceRecording` call"},"members":[{"constant":false,"id":36944,"mutability":"mutable","name":"stack","nameLocation":"9816:5:36","nodeType":"VariableDeclaration","scope":36955,"src":"9806:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":36942,"name":"uint256","nodeType":"ElementaryTypeName","src":"9806:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":36943,"nodeType":"ArrayTypeName","src":"9806:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":36946,"mutability":"mutable","name":"memoryInput","nameLocation":"10120:11:36","nodeType":"VariableDeclaration","scope":36955,"src":"10114:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":36945,"name":"bytes","nodeType":"ElementaryTypeName","src":"10114:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":36948,"mutability":"mutable","name":"opcode","nameLocation":"10188:6:36","nodeType":"VariableDeclaration","scope":36955,"src":"10182:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":36947,"name":"uint8","nodeType":"ElementaryTypeName","src":"10182:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":36950,"mutability":"mutable","name":"depth","nameLocation":"10250:5:36","nodeType":"VariableDeclaration","scope":36955,"src":"10243:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36949,"name":"uint64","nodeType":"ElementaryTypeName","src":"10243:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36952,"mutability":"mutable","name":"isOutOfGas","nameLocation":"10328:10:36","nodeType":"VariableDeclaration","scope":36955,"src":"10323:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36951,"name":"bool","nodeType":"ElementaryTypeName","src":"10323:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36954,"mutability":"mutable","name":"contractAddr","nameLocation":"10416:12:36","nodeType":"VariableDeclaration","scope":36955,"src":"10408:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36953,"name":"address","nodeType":"ElementaryTypeName","src":"10408:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"DebugStep","nameLocation":"9594:9:36","scope":40955,"visibility":"public"},{"id":36968,"nodeType":"StructDefinition","src":"10495:600:36","nodes":[],"canonicalName":"VmSafe.BroadcastTxSummary","documentation":{"id":36956,"nodeType":"StructuredDocumentation","src":"10441:49:36","text":"Represents a transaction's broadcast details."},"members":[{"constant":false,"id":36958,"mutability":"mutable","name":"txHash","nameLocation":"10599:6:36","nodeType":"VariableDeclaration","scope":36968,"src":"10591:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10591:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":36961,"mutability":"mutable","name":"txType","nameLocation":"10704:6:36","nodeType":"VariableDeclaration","scope":36968,"src":"10688:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$36780","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":36960,"nodeType":"UserDefinedTypeName","pathNode":{"id":36959,"name":"BroadcastTxType","nameLocations":["10688:15:36"],"nodeType":"IdentifierPath","referencedDeclaration":36780,"src":"10688:15:36"},"referencedDeclaration":36780,"src":"10688:15:36","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$36780","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"},{"constant":false,"id":36963,"mutability":"mutable","name":"contractAddress","nameLocation":"10890:15:36","nodeType":"VariableDeclaration","scope":36968,"src":"10882:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36962,"name":"address","nodeType":"ElementaryTypeName","src":"10882:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36965,"mutability":"mutable","name":"blockNumber","nameLocation":"10977:11:36","nodeType":"VariableDeclaration","scope":36968,"src":"10970:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36964,"name":"uint64","nodeType":"ElementaryTypeName","src":"10970:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36967,"mutability":"mutable","name":"success","nameLocation":"11081:7:36","nodeType":"VariableDeclaration","scope":36968,"src":"11076:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36966,"name":"bool","nodeType":"ElementaryTypeName","src":"11076:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BroadcastTxSummary","nameLocation":"10502:18:36","scope":40955,"visibility":"public"},{"id":36980,"nodeType":"StructDefinition","src":"11206:605:36","nodes":[],"canonicalName":"VmSafe.SignedDelegation","documentation":{"id":36969,"nodeType":"StructuredDocumentation","src":"11101:100:36","text":"Holds a signed EIP-7702 authorization for an authority account to delegate to an implementation."},"members":[{"constant":false,"id":36971,"mutability":"mutable","name":"v","nameLocation":"11317:1:36","nodeType":"VariableDeclaration","scope":36980,"src":"11311:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":36970,"name":"uint8","nodeType":"ElementaryTypeName","src":"11311:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":36973,"mutability":"mutable","name":"r","nameLocation":"11380:1:36","nodeType":"VariableDeclaration","scope":36980,"src":"11372:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11372:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":36975,"mutability":"mutable","name":"s","nameLocation":"11444:1:36","nodeType":"VariableDeclaration","scope":36980,"src":"11436:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11436:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":36977,"mutability":"mutable","name":"nonce","nameLocation":"11616:5:36","nodeType":"VariableDeclaration","scope":36980,"src":"11609:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36976,"name":"uint64","nodeType":"ElementaryTypeName","src":"11609:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36979,"mutability":"mutable","name":"implementation","nameLocation":"11790:14:36","nodeType":"VariableDeclaration","scope":36980,"src":"11782:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36978,"name":"address","nodeType":"ElementaryTypeName","src":"11782:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SignedDelegation","nameLocation":"11213:16:36","scope":40955,"visibility":"public"},{"id":36988,"nodeType":"StructDefinition","src":"12060:373:36","nodes":[],"canonicalName":"VmSafe.PotentialRevert","documentation":{"id":36981,"nodeType":"StructuredDocumentation","src":"11817:238:36","text":"Represents a \"potential\" revert reason from a single subsequent call when using `vm.assumeNoReverts`.\n Reverts that match will result in a FOUNDRY::ASSUME rejection, whereas unmatched reverts will be surfaced\n as normal."},"members":[{"constant":false,"id":36983,"mutability":"mutable","name":"reverter","nameLocation":"12196:8:36","nodeType":"VariableDeclaration","scope":36988,"src":"12188:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36982,"name":"address","nodeType":"ElementaryTypeName","src":"12188:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36985,"mutability":"mutable","name":"partialMatch","nameLocation":"12332:12:36","nodeType":"VariableDeclaration","scope":36988,"src":"12327:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36984,"name":"bool","nodeType":"ElementaryTypeName","src":"12327:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":36987,"mutability":"mutable","name":"revertData","nameLocation":"12416:10:36","nodeType":"VariableDeclaration","scope":36988,"src":"12410:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":36986,"name":"bytes","nodeType":"ElementaryTypeName","src":"12410:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PotentialRevert","nameLocation":"12067:15:36","scope":40955,"visibility":"public"},{"id":36995,"nodeType":"StructDefinition","src":"12477:191:36","nodes":[],"canonicalName":"VmSafe.AccessListItem","documentation":{"id":36989,"nodeType":"StructuredDocumentation","src":"12439:33:36","text":"An EIP-2930 access list item."},"members":[{"constant":false,"id":36991,"mutability":"mutable","name":"target","nameLocation":"12568:6:36","nodeType":"VariableDeclaration","scope":36995,"src":"12560:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36990,"name":"address","nodeType":"ElementaryTypeName","src":"12560:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":36994,"mutability":"mutable","name":"storageKeys","nameLocation":"12650:11:36","nodeType":"VariableDeclaration","scope":36995,"src":"12640:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":36992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12640:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":36993,"nodeType":"ArrayTypeName","src":"12640:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"name":"AccessListItem","nameLocation":"12484:14:36","scope":40955,"visibility":"public"},{"id":37004,"nodeType":"FunctionDefinition","src":"12811:91:36","nodes":[],"documentation":{"id":36996,"nodeType":"StructuredDocumentation","src":"12707:99:36","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"12820:12:36","parameters":{"id":36999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36998,"mutability":"mutable","name":"walletLabel","nameLocation":"12849:11:36","nodeType":"VariableDeclaration","scope":37004,"src":"12833:27:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":36997,"name":"string","nodeType":"ElementaryTypeName","src":"12833:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12832:29:36"},"returnParameters":{"id":37003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37002,"mutability":"mutable","name":"wallet","nameLocation":"12894:6:36","nodeType":"VariableDeclaration","scope":37004,"src":"12880:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$36854_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":37001,"nodeType":"UserDefinedTypeName","pathNode":{"id":37000,"name":"Wallet","nameLocations":["12880:6:36"],"nodeType":"IdentifierPath","referencedDeclaration":36854,"src":"12880:6:36"},"referencedDeclaration":36854,"src":"12880:6:36","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$36854_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"12879:22:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37013,"nodeType":"FunctionDefinition","src":"12980:82:36","nodes":[],"documentation":{"id":37005,"nodeType":"StructuredDocumentation","src":"12908:67:36","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"12989:12:36","parameters":{"id":37008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37007,"mutability":"mutable","name":"privateKey","nameLocation":"13010:10:36","nodeType":"VariableDeclaration","scope":37013,"src":"13002:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37006,"name":"uint256","nodeType":"ElementaryTypeName","src":"13002:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13001:20:36"},"returnParameters":{"id":37012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37011,"mutability":"mutable","name":"wallet","nameLocation":"13054:6:36","nodeType":"VariableDeclaration","scope":37013,"src":"13040:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$36854_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":37010,"nodeType":"UserDefinedTypeName","pathNode":{"id":37009,"name":"Wallet","nameLocations":["13040:6:36"],"nodeType":"IdentifierPath","referencedDeclaration":36854,"src":"13040:6:36"},"referencedDeclaration":36854,"src":"13040:6:36","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$36854_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"13039:22:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37024,"nodeType":"FunctionDefinition","src":"13176:111:36","nodes":[],"documentation":{"id":37014,"nodeType":"StructuredDocumentation","src":"13068:103:36","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"13185:12:36","parameters":{"id":37019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37016,"mutability":"mutable","name":"privateKey","nameLocation":"13206:10:36","nodeType":"VariableDeclaration","scope":37024,"src":"13198:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37015,"name":"uint256","nodeType":"ElementaryTypeName","src":"13198:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":37018,"mutability":"mutable","name":"walletLabel","nameLocation":"13234:11:36","nodeType":"VariableDeclaration","scope":37024,"src":"13218:27:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37017,"name":"string","nodeType":"ElementaryTypeName","src":"13218:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13197:49:36"},"returnParameters":{"id":37023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37022,"mutability":"mutable","name":"wallet","nameLocation":"13279:6:36","nodeType":"VariableDeclaration","scope":37024,"src":"13265:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$36854_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":37021,"nodeType":"UserDefinedTypeName","pathNode":{"id":37020,"name":"Wallet","nameLocations":["13265:6:36"],"nodeType":"IdentifierPath","referencedDeclaration":36854,"src":"13265:6:36"},"referencedDeclaration":36854,"src":"13265:6:36","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$36854_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"13264:22:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37034,"nodeType":"FunctionDefinition","src":"13435:102:36","nodes":[],"documentation":{"id":37025,"nodeType":"StructuredDocumentation","src":"13293:137:36","text":"Derive a private key from a provided mnemonic string (or mnemonic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"13444:9:36","parameters":{"id":37030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37027,"mutability":"mutable","name":"mnemonic","nameLocation":"13470:8:36","nodeType":"VariableDeclaration","scope":37034,"src":"13454:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37026,"name":"string","nodeType":"ElementaryTypeName","src":"13454:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37029,"mutability":"mutable","name":"index","nameLocation":"13487:5:36","nodeType":"VariableDeclaration","scope":37034,"src":"13480:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":37028,"name":"uint32","nodeType":"ElementaryTypeName","src":"13480:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13453:40:36"},"returnParameters":{"id":37033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37032,"mutability":"mutable","name":"privateKey","nameLocation":"13525:10:36","nodeType":"VariableDeclaration","scope":37034,"src":"13517:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37031,"name":"uint256","nodeType":"ElementaryTypeName","src":"13517:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13516:20:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":37046,"nodeType":"FunctionDefinition","src":"13666:158:36","nodes":[],"documentation":{"id":37035,"nodeType":"StructuredDocumentation","src":"13543:118:36","text":"Derive a private key from a provided mnemonic string (or mnemonic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"13675:9:36","parameters":{"id":37042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37037,"mutability":"mutable","name":"mnemonic","nameLocation":"13701:8:36","nodeType":"VariableDeclaration","scope":37046,"src":"13685:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37036,"name":"string","nodeType":"ElementaryTypeName","src":"13685:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37039,"mutability":"mutable","name":"derivationPath","nameLocation":"13727:14:36","nodeType":"VariableDeclaration","scope":37046,"src":"13711:30:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37038,"name":"string","nodeType":"ElementaryTypeName","src":"13711:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37041,"mutability":"mutable","name":"index","nameLocation":"13750:5:36","nodeType":"VariableDeclaration","scope":37046,"src":"13743:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":37040,"name":"uint32","nodeType":"ElementaryTypeName","src":"13743:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13684:72:36"},"returnParameters":{"id":37045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37044,"mutability":"mutable","name":"privateKey","nameLocation":"13812:10:36","nodeType":"VariableDeclaration","scope":37046,"src":"13804:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37043,"name":"uint256","nodeType":"ElementaryTypeName","src":"13804:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13803:20:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":37058,"nodeType":"FunctionDefinition","src":"13998:152:36","nodes":[],"documentation":{"id":37047,"nodeType":"StructuredDocumentation","src":"13830:163:36","text":"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"14007:9:36","parameters":{"id":37054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37049,"mutability":"mutable","name":"mnemonic","nameLocation":"14033:8:36","nodeType":"VariableDeclaration","scope":37058,"src":"14017:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37048,"name":"string","nodeType":"ElementaryTypeName","src":"14017:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37051,"mutability":"mutable","name":"index","nameLocation":"14050:5:36","nodeType":"VariableDeclaration","scope":37058,"src":"14043:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":37050,"name":"uint32","nodeType":"ElementaryTypeName","src":"14043:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":37053,"mutability":"mutable","name":"language","nameLocation":"14073:8:36","nodeType":"VariableDeclaration","scope":37058,"src":"14057:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37052,"name":"string","nodeType":"ElementaryTypeName","src":"14057:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14016:66:36"},"returnParameters":{"id":37057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37056,"mutability":"mutable","name":"privateKey","nameLocation":"14138:10:36","nodeType":"VariableDeclaration","scope":37058,"src":"14130:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37055,"name":"uint256","nodeType":"ElementaryTypeName","src":"14130:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14129:20:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":37072,"nodeType":"FunctionDefinition","src":"14305:184:36","nodes":[],"documentation":{"id":37059,"nodeType":"StructuredDocumentation","src":"14156:144:36","text":"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"14314:9:36","parameters":{"id":37068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37061,"mutability":"mutable","name":"mnemonic","nameLocation":"14340:8:36","nodeType":"VariableDeclaration","scope":37072,"src":"14324:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37060,"name":"string","nodeType":"ElementaryTypeName","src":"14324:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37063,"mutability":"mutable","name":"derivationPath","nameLocation":"14366:14:36","nodeType":"VariableDeclaration","scope":37072,"src":"14350:30:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37062,"name":"string","nodeType":"ElementaryTypeName","src":"14350:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37065,"mutability":"mutable","name":"index","nameLocation":"14389:5:36","nodeType":"VariableDeclaration","scope":37072,"src":"14382:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":37064,"name":"uint32","nodeType":"ElementaryTypeName","src":"14382:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":37067,"mutability":"mutable","name":"language","nameLocation":"14412:8:36","nodeType":"VariableDeclaration","scope":37072,"src":"14396:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37066,"name":"string","nodeType":"ElementaryTypeName","src":"14396:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14323:98:36"},"returnParameters":{"id":37071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37070,"mutability":"mutable","name":"privateKey","nameLocation":"14477:10:36","nodeType":"VariableDeclaration","scope":37072,"src":"14469:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37069,"name":"uint256","nodeType":"ElementaryTypeName","src":"14469:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14468:20:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":37082,"nodeType":"FunctionDefinition","src":"14564:106:36","nodes":[],"documentation":{"id":37073,"nodeType":"StructuredDocumentation","src":"14495:64:36","text":"Derives secp256r1 public key from the provided `privateKey`."},"functionSelector":"c453949e","implemented":false,"kind":"function","modifiers":[],"name":"publicKeyP256","nameLocation":"14573:13:36","parameters":{"id":37076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37075,"mutability":"mutable","name":"privateKey","nameLocation":"14595:10:36","nodeType":"VariableDeclaration","scope":37082,"src":"14587:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37074,"name":"uint256","nodeType":"ElementaryTypeName","src":"14587:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14586:20:36"},"returnParameters":{"id":37081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37078,"mutability":"mutable","name":"publicKeyX","nameLocation":"14638:10:36","nodeType":"VariableDeclaration","scope":37082,"src":"14630:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37077,"name":"uint256","nodeType":"ElementaryTypeName","src":"14630:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":37080,"mutability":"mutable","name":"publicKeyY","nameLocation":"14658:10:36","nodeType":"VariableDeclaration","scope":37082,"src":"14650:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37079,"name":"uint256","nodeType":"ElementaryTypeName","src":"14650:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14629:40:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":37090,"nodeType":"FunctionDefinition","src":"14754:76:36","nodes":[],"documentation":{"id":37083,"nodeType":"StructuredDocumentation","src":"14676:73:36","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"14763:11:36","parameters":{"id":37086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37085,"mutability":"mutable","name":"privateKey","nameLocation":"14783:10:36","nodeType":"VariableDeclaration","scope":37090,"src":"14775:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37084,"name":"uint256","nodeType":"ElementaryTypeName","src":"14775:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14774:20:36"},"returnParameters":{"id":37089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37088,"mutability":"mutable","name":"keyAddr","nameLocation":"14821:7:36","nodeType":"VariableDeclaration","scope":37090,"src":"14813:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37087,"name":"address","nodeType":"ElementaryTypeName","src":"14813:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14812:17:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37103,"nodeType":"FunctionDefinition","src":"15063:155:36","nodes":[],"documentation":{"id":37091,"nodeType":"StructuredDocumentation","src":"14836:222:36","text":"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`.\n The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"functionSelector":"97cb9189","implemented":false,"kind":"function","modifiers":[],"name":"rememberKeys","nameLocation":"15072:12:36","parameters":{"id":37098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37093,"mutability":"mutable","name":"mnemonic","nameLocation":"15101:8:36","nodeType":"VariableDeclaration","scope":37103,"src":"15085:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37092,"name":"string","nodeType":"ElementaryTypeName","src":"15085:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37095,"mutability":"mutable","name":"derivationPath","nameLocation":"15127:14:36","nodeType":"VariableDeclaration","scope":37103,"src":"15111:30:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37094,"name":"string","nodeType":"ElementaryTypeName","src":"15111:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37097,"mutability":"mutable","name":"count","nameLocation":"15150:5:36","nodeType":"VariableDeclaration","scope":37103,"src":"15143:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":37096,"name":"uint32","nodeType":"ElementaryTypeName","src":"15143:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15084:72:36"},"returnParameters":{"id":37102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37101,"mutability":"mutable","name":"keyAddrs","nameLocation":"15208:8:36","nodeType":"VariableDeclaration","scope":37103,"src":"15191:25:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":37099,"name":"address","nodeType":"ElementaryTypeName","src":"15191:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":37100,"nodeType":"ArrayTypeName","src":"15191:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15190:27:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37118,"nodeType":"FunctionDefinition","src":"15477:203:36","nodes":[],"documentation":{"id":37104,"nodeType":"StructuredDocumentation","src":"15224:248:36","text":"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`.\n The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"functionSelector":"f8d58eaf","implemented":false,"kind":"function","modifiers":[],"name":"rememberKeys","nameLocation":"15486:12:36","parameters":{"id":37113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37106,"mutability":"mutable","name":"mnemonic","nameLocation":"15524:8:36","nodeType":"VariableDeclaration","scope":37118,"src":"15508:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37105,"name":"string","nodeType":"ElementaryTypeName","src":"15508:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37108,"mutability":"mutable","name":"derivationPath","nameLocation":"15558:14:36","nodeType":"VariableDeclaration","scope":37118,"src":"15542:30:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37107,"name":"string","nodeType":"ElementaryTypeName","src":"15542:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37110,"mutability":"mutable","name":"language","nameLocation":"15598:8:36","nodeType":"VariableDeclaration","scope":37118,"src":"15582:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37109,"name":"string","nodeType":"ElementaryTypeName","src":"15582:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37112,"mutability":"mutable","name":"count","nameLocation":"15623:5:36","nodeType":"VariableDeclaration","scope":37118,"src":"15616:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":37111,"name":"uint32","nodeType":"ElementaryTypeName","src":"15616:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15498:136:36"},"returnParameters":{"id":37117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37116,"mutability":"mutable","name":"keyAddrs","nameLocation":"15670:8:36","nodeType":"VariableDeclaration","scope":37118,"src":"15653:25:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":37114,"name":"address","nodeType":"ElementaryTypeName","src":"15653:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":37115,"nodeType":"ArrayTypeName","src":"15653:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15652:27:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37131,"nodeType":"FunctionDefinition","src":"15959:102:36","nodes":[],"documentation":{"id":37119,"nodeType":"StructuredDocumentation","src":"15686:268:36","text":"Signs data with a `Wallet`.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"3d0e292f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"15968:11:36","parameters":{"id":37125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37122,"mutability":"mutable","name":"wallet","nameLocation":"15996:6:36","nodeType":"VariableDeclaration","scope":37131,"src":"15980:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$36854_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":37121,"nodeType":"UserDefinedTypeName","pathNode":{"id":37120,"name":"Wallet","nameLocations":["15980:6:36"],"nodeType":"IdentifierPath","referencedDeclaration":36854,"src":"15980:6:36"},"referencedDeclaration":36854,"src":"15980:6:36","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$36854_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":37124,"mutability":"mutable","name":"digest","nameLocation":"16012:6:36","nodeType":"VariableDeclaration","scope":37131,"src":"16004:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16004:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15979:40:36"},"returnParameters":{"id":37130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37127,"mutability":"mutable","name":"r","nameLocation":"16046:1:36","nodeType":"VariableDeclaration","scope":37131,"src":"16038:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16038:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":37129,"mutability":"mutable","name":"vs","nameLocation":"16057:2:36","nodeType":"VariableDeclaration","scope":37131,"src":"16049:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16049:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16037:23:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37143,"nodeType":"FunctionDefinition","src":"16372:103:36","nodes":[],"documentation":{"id":37132,"nodeType":"StructuredDocumentation","src":"16067:300:36","text":"Signs `digest` with `privateKey` using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"cc2a781f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"16381:11:36","parameters":{"id":37137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37134,"mutability":"mutable","name":"privateKey","nameLocation":"16401:10:36","nodeType":"VariableDeclaration","scope":37143,"src":"16393:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37133,"name":"uint256","nodeType":"ElementaryTypeName","src":"16393:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":37136,"mutability":"mutable","name":"digest","nameLocation":"16421:6:36","nodeType":"VariableDeclaration","scope":37143,"src":"16413:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16413:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16392:36:36"},"returnParameters":{"id":37142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37139,"mutability":"mutable","name":"r","nameLocation":"16460:1:36","nodeType":"VariableDeclaration","scope":37143,"src":"16452:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16452:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":37141,"mutability":"mutable","name":"vs","nameLocation":"16471:2:36","nodeType":"VariableDeclaration","scope":37143,"src":"16463:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16463:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16451:23:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":37153,"nodeType":"FunctionDefinition","src":"17151:83:36","nodes":[],"documentation":{"id":37144,"nodeType":"StructuredDocumentation","src":"16481:665:36","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"a282dc4b","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"17160:11:36","parameters":{"id":37147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37146,"mutability":"mutable","name":"digest","nameLocation":"17180:6:36","nodeType":"VariableDeclaration","scope":37153,"src":"17172:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17172:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17171:16:36"},"returnParameters":{"id":37152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37149,"mutability":"mutable","name":"r","nameLocation":"17219:1:36","nodeType":"VariableDeclaration","scope":37153,"src":"17211:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17211:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":37151,"mutability":"mutable","name":"vs","nameLocation":"17230:2:36","nodeType":"VariableDeclaration","scope":37153,"src":"17222:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17222:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17210:23:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":37165,"nodeType":"FunctionDefinition","src":"17648:99:36","nodes":[],"documentation":{"id":37154,"nodeType":"StructuredDocumentation","src":"17240:403:36","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8e2f97bf","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"17657:11:36","parameters":{"id":37159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37156,"mutability":"mutable","name":"signer","nameLocation":"17677:6:36","nodeType":"VariableDeclaration","scope":37165,"src":"17669:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37155,"name":"address","nodeType":"ElementaryTypeName","src":"17669:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":37158,"mutability":"mutable","name":"digest","nameLocation":"17693:6:36","nodeType":"VariableDeclaration","scope":37165,"src":"17685:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17685:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17668:32:36"},"returnParameters":{"id":37164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37161,"mutability":"mutable","name":"r","nameLocation":"17732:1:36","nodeType":"VariableDeclaration","scope":37165,"src":"17724:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17724:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":37163,"mutability":"mutable","name":"vs","nameLocation":"17743:2:36","nodeType":"VariableDeclaration","scope":37165,"src":"17735:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17735:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17723:23:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":37177,"nodeType":"FunctionDefinition","src":"17821:99:36","nodes":[],"documentation":{"id":37166,"nodeType":"StructuredDocumentation","src":"17753:63:36","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"17830:8:36","parameters":{"id":37171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37168,"mutability":"mutable","name":"privateKey","nameLocation":"17847:10:36","nodeType":"VariableDeclaration","scope":37177,"src":"17839:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37167,"name":"uint256","nodeType":"ElementaryTypeName","src":"17839:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":37170,"mutability":"mutable","name":"digest","nameLocation":"17867:6:36","nodeType":"VariableDeclaration","scope":37177,"src":"17859:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17859:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17838:36:36"},"returnParameters":{"id":37176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37173,"mutability":"mutable","name":"r","nameLocation":"17906:1:36","nodeType":"VariableDeclaration","scope":37177,"src":"17898:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17898:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":37175,"mutability":"mutable","name":"s","nameLocation":"17917:1:36","nodeType":"VariableDeclaration","scope":37177,"src":"17909:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17909:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17897:22:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":37192,"nodeType":"FunctionDefinition","src":"17962:103:36","nodes":[],"documentation":{"id":37178,"nodeType":"StructuredDocumentation","src":"17926:31:36","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"17971:4:36","parameters":{"id":37184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37181,"mutability":"mutable","name":"wallet","nameLocation":"17992:6:36","nodeType":"VariableDeclaration","scope":37192,"src":"17976:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$36854_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":37180,"nodeType":"UserDefinedTypeName","pathNode":{"id":37179,"name":"Wallet","nameLocations":["17976:6:36"],"nodeType":"IdentifierPath","referencedDeclaration":36854,"src":"17976:6:36"},"referencedDeclaration":36854,"src":"17976:6:36","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$36854_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":37183,"mutability":"mutable","name":"digest","nameLocation":"18008:6:36","nodeType":"VariableDeclaration","scope":37192,"src":"18000:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18000:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17975:40:36"},"returnParameters":{"id":37191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37186,"mutability":"mutable","name":"v","nameLocation":"18040:1:36","nodeType":"VariableDeclaration","scope":37192,"src":"18034:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":37185,"name":"uint8","nodeType":"ElementaryTypeName","src":"18034:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":37188,"mutability":"mutable","name":"r","nameLocation":"18051:1:36","nodeType":"VariableDeclaration","scope":37192,"src":"18043:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18043:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":37190,"mutability":"mutable","name":"s","nameLocation":"18062:1:36","nodeType":"VariableDeclaration","scope":37192,"src":"18054:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18054:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18033:31:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37206,"nodeType":"FunctionDefinition","src":"18139:104:36","nodes":[],"documentation":{"id":37193,"nodeType":"StructuredDocumentation","src":"18071:63:36","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"18148:4:36","parameters":{"id":37198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37195,"mutability":"mutable","name":"privateKey","nameLocation":"18161:10:36","nodeType":"VariableDeclaration","scope":37206,"src":"18153:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37194,"name":"uint256","nodeType":"ElementaryTypeName","src":"18153:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":37197,"mutability":"mutable","name":"digest","nameLocation":"18181:6:36","nodeType":"VariableDeclaration","scope":37206,"src":"18173:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18173:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18152:36:36"},"returnParameters":{"id":37205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37200,"mutability":"mutable","name":"v","nameLocation":"18218:1:36","nodeType":"VariableDeclaration","scope":37206,"src":"18212:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":37199,"name":"uint8","nodeType":"ElementaryTypeName","src":"18212:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":37202,"mutability":"mutable","name":"r","nameLocation":"18229:1:36","nodeType":"VariableDeclaration","scope":37206,"src":"18221:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18221:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":37204,"mutability":"mutable","name":"s","nameLocation":"18240:1:36","nodeType":"VariableDeclaration","scope":37206,"src":"18232:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18232:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18211:31:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":37218,"nodeType":"FunctionDefinition","src":"18682:84:36","nodes":[],"documentation":{"id":37207,"nodeType":"StructuredDocumentation","src":"18249:428:36","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"18691:4:36","parameters":{"id":37210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37209,"mutability":"mutable","name":"digest","nameLocation":"18704:6:36","nodeType":"VariableDeclaration","scope":37218,"src":"18696:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18696:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18695:16:36"},"returnParameters":{"id":37217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37212,"mutability":"mutable","name":"v","nameLocation":"18741:1:36","nodeType":"VariableDeclaration","scope":37218,"src":"18735:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":37211,"name":"uint8","nodeType":"ElementaryTypeName","src":"18735:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":37214,"mutability":"mutable","name":"r","nameLocation":"18752:1:36","nodeType":"VariableDeclaration","scope":37218,"src":"18744:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18744:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":37216,"mutability":"mutable","name":"s","nameLocation":"18763:1:36","nodeType":"VariableDeclaration","scope":37218,"src":"18755:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18755:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18734:31:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":37232,"nodeType":"FunctionDefinition","src":"18943:100:36","nodes":[],"documentation":{"id":37219,"nodeType":"StructuredDocumentation","src":"18772:166:36","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"18952:4:36","parameters":{"id":37224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37221,"mutability":"mutable","name":"signer","nameLocation":"18965:6:36","nodeType":"VariableDeclaration","scope":37232,"src":"18957:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37220,"name":"address","nodeType":"ElementaryTypeName","src":"18957:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":37223,"mutability":"mutable","name":"digest","nameLocation":"18981:6:36","nodeType":"VariableDeclaration","scope":37232,"src":"18973:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18973:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18956:32:36"},"returnParameters":{"id":37231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37226,"mutability":"mutable","name":"v","nameLocation":"19018:1:36","nodeType":"VariableDeclaration","scope":37232,"src":"19012:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":37225,"name":"uint8","nodeType":"ElementaryTypeName","src":"19012:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":37228,"mutability":"mutable","name":"r","nameLocation":"19029:1:36","nodeType":"VariableDeclaration","scope":37232,"src":"19021:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19021:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":37230,"mutability":"mutable","name":"s","nameLocation":"19040:1:36","nodeType":"VariableDeclaration","scope":37232,"src":"19032:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19032:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19011:31:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":37240,"nodeType":"FunctionDefinition","src":"19230:80:36","nodes":[],"documentation":{"id":37233,"nodeType":"StructuredDocumentation","src":"19087:138:36","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"19239:10:36","parameters":{"id":37236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37235,"mutability":"mutable","name":"name","nameLocation":"19266:4:36","nodeType":"VariableDeclaration","scope":37240,"src":"19250:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37234,"name":"string","nodeType":"ElementaryTypeName","src":"19250:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19249:22:36"},"returnParameters":{"id":37239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37238,"mutability":"mutable","name":"value","nameLocation":"19303:5:36","nodeType":"VariableDeclaration","scope":37240,"src":"19295:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37237,"name":"address","nodeType":"ElementaryTypeName","src":"19295:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19294:15:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37251,"nodeType":"FunctionDefinition","src":"19493:112:36","nodes":[],"documentation":{"id":37241,"nodeType":"StructuredDocumentation","src":"19316:172:36","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"19502:10:36","parameters":{"id":37246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37243,"mutability":"mutable","name":"name","nameLocation":"19529:4:36","nodeType":"VariableDeclaration","scope":37251,"src":"19513:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37242,"name":"string","nodeType":"ElementaryTypeName","src":"19513:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37245,"mutability":"mutable","name":"delim","nameLocation":"19551:5:36","nodeType":"VariableDeclaration","scope":37251,"src":"19535:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37244,"name":"string","nodeType":"ElementaryTypeName","src":"19535:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19512:45:36"},"returnParameters":{"id":37250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37249,"mutability":"mutable","name":"value","nameLocation":"19598:5:36","nodeType":"VariableDeclaration","scope":37251,"src":"19581:22:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":37247,"name":"address","nodeType":"ElementaryTypeName","src":"19581:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":37248,"nodeType":"ArrayTypeName","src":"19581:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"19580:24:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37259,"nodeType":"FunctionDefinition","src":"19751:74:36","nodes":[],"documentation":{"id":37252,"nodeType":"StructuredDocumentation","src":"19611:135:36","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"19760:7:36","parameters":{"id":37255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37254,"mutability":"mutable","name":"name","nameLocation":"19784:4:36","nodeType":"VariableDeclaration","scope":37259,"src":"19768:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37253,"name":"string","nodeType":"ElementaryTypeName","src":"19768:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19767:22:36"},"returnParameters":{"id":37258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37257,"mutability":"mutable","name":"value","nameLocation":"19818:5:36","nodeType":"VariableDeclaration","scope":37259,"src":"19813:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":37256,"name":"bool","nodeType":"ElementaryTypeName","src":"19813:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19812:12:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37270,"nodeType":"FunctionDefinition","src":"20005:106:36","nodes":[],"documentation":{"id":37260,"nodeType":"StructuredDocumentation","src":"19831:169:36","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"20014:7:36","parameters":{"id":37265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37262,"mutability":"mutable","name":"name","nameLocation":"20038:4:36","nodeType":"VariableDeclaration","scope":37270,"src":"20022:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37261,"name":"string","nodeType":"ElementaryTypeName","src":"20022:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37264,"mutability":"mutable","name":"delim","nameLocation":"20060:5:36","nodeType":"VariableDeclaration","scope":37270,"src":"20044:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37263,"name":"string","nodeType":"ElementaryTypeName","src":"20044:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20021:45:36"},"returnParameters":{"id":37269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37268,"mutability":"mutable","name":"value","nameLocation":"20104:5:36","nodeType":"VariableDeclaration","scope":37270,"src":"20090:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":37266,"name":"bool","nodeType":"ElementaryTypeName","src":"20090:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":37267,"nodeType":"ArrayTypeName","src":"20090:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"20089:21:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37278,"nodeType":"FunctionDefinition","src":"20260:80:36","nodes":[],"documentation":{"id":37271,"nodeType":"StructuredDocumentation","src":"20117:138:36","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"20269:10:36","parameters":{"id":37274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37273,"mutability":"mutable","name":"name","nameLocation":"20296:4:36","nodeType":"VariableDeclaration","scope":37278,"src":"20280:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37272,"name":"string","nodeType":"ElementaryTypeName","src":"20280:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20279:22:36"},"returnParameters":{"id":37277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37276,"mutability":"mutable","name":"value","nameLocation":"20333:5:36","nodeType":"VariableDeclaration","scope":37278,"src":"20325:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20325:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20324:15:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37289,"nodeType":"FunctionDefinition","src":"20523:112:36","nodes":[],"documentation":{"id":37279,"nodeType":"StructuredDocumentation","src":"20346:172:36","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"20532:10:36","parameters":{"id":37284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37281,"mutability":"mutable","name":"name","nameLocation":"20559:4:36","nodeType":"VariableDeclaration","scope":37289,"src":"20543:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37280,"name":"string","nodeType":"ElementaryTypeName","src":"20543:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37283,"mutability":"mutable","name":"delim","nameLocation":"20581:5:36","nodeType":"VariableDeclaration","scope":37289,"src":"20565:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37282,"name":"string","nodeType":"ElementaryTypeName","src":"20565:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20542:45:36"},"returnParameters":{"id":37288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37287,"mutability":"mutable","name":"value","nameLocation":"20628:5:36","nodeType":"VariableDeclaration","scope":37289,"src":"20611:22:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":37285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20611:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":37286,"nodeType":"ArrayTypeName","src":"20611:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"20610:24:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37297,"nodeType":"FunctionDefinition","src":"20782:83:36","nodes":[],"documentation":{"id":37290,"nodeType":"StructuredDocumentation","src":"20641:136:36","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"20791:8:36","parameters":{"id":37293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37292,"mutability":"mutable","name":"name","nameLocation":"20816:4:36","nodeType":"VariableDeclaration","scope":37297,"src":"20800:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37291,"name":"string","nodeType":"ElementaryTypeName","src":"20800:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20799:22:36"},"returnParameters":{"id":37296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37295,"mutability":"mutable","name":"value","nameLocation":"20858:5:36","nodeType":"VariableDeclaration","scope":37297,"src":"20845:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":37294,"name":"bytes","nodeType":"ElementaryTypeName","src":"20845:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20844:20:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37308,"nodeType":"FunctionDefinition","src":"21046:108:36","nodes":[],"documentation":{"id":37298,"nodeType":"StructuredDocumentation","src":"20871:170:36","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"21055:8:36","parameters":{"id":37303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37300,"mutability":"mutable","name":"name","nameLocation":"21080:4:36","nodeType":"VariableDeclaration","scope":37308,"src":"21064:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37299,"name":"string","nodeType":"ElementaryTypeName","src":"21064:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37302,"mutability":"mutable","name":"delim","nameLocation":"21102:5:36","nodeType":"VariableDeclaration","scope":37308,"src":"21086:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37301,"name":"string","nodeType":"ElementaryTypeName","src":"21086:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21063:45:36"},"returnParameters":{"id":37307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37306,"mutability":"mutable","name":"value","nameLocation":"21147:5:36","nodeType":"VariableDeclaration","scope":37308,"src":"21132:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":37304,"name":"bytes","nodeType":"ElementaryTypeName","src":"21132:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":37305,"nodeType":"ArrayTypeName","src":"21132:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"21131:22:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37316,"nodeType":"FunctionDefinition","src":"21256:77:36","nodes":[],"documentation":{"id":37309,"nodeType":"StructuredDocumentation","src":"21160:91:36","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"21265:9:36","parameters":{"id":37312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37311,"mutability":"mutable","name":"name","nameLocation":"21291:4:36","nodeType":"VariableDeclaration","scope":37316,"src":"21275:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37310,"name":"string","nodeType":"ElementaryTypeName","src":"21275:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21274:22:36"},"returnParameters":{"id":37315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37314,"mutability":"mutable","name":"result","nameLocation":"21325:6:36","nodeType":"VariableDeclaration","scope":37316,"src":"21320:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":37313,"name":"bool","nodeType":"ElementaryTypeName","src":"21320:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21319:13:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37324,"nodeType":"FunctionDefinition","src":"21481:75:36","nodes":[],"documentation":{"id":37317,"nodeType":"StructuredDocumentation","src":"21339:137:36","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"21490:6:36","parameters":{"id":37320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37319,"mutability":"mutable","name":"name","nameLocation":"21513:4:36","nodeType":"VariableDeclaration","scope":37324,"src":"21497:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37318,"name":"string","nodeType":"ElementaryTypeName","src":"21497:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21496:22:36"},"returnParameters":{"id":37323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37322,"mutability":"mutable","name":"value","nameLocation":"21549:5:36","nodeType":"VariableDeclaration","scope":37324,"src":"21542:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":37321,"name":"int256","nodeType":"ElementaryTypeName","src":"21542:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21541:14:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37335,"nodeType":"FunctionDefinition","src":"21738:107:36","nodes":[],"documentation":{"id":37325,"nodeType":"StructuredDocumentation","src":"21562:171:36","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"21747:6:36","parameters":{"id":37330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37327,"mutability":"mutable","name":"name","nameLocation":"21770:4:36","nodeType":"VariableDeclaration","scope":37335,"src":"21754:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37326,"name":"string","nodeType":"ElementaryTypeName","src":"21754:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37329,"mutability":"mutable","name":"delim","nameLocation":"21792:5:36","nodeType":"VariableDeclaration","scope":37335,"src":"21776:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37328,"name":"string","nodeType":"ElementaryTypeName","src":"21776:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21753:45:36"},"returnParameters":{"id":37334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37333,"mutability":"mutable","name":"value","nameLocation":"21838:5:36","nodeType":"VariableDeclaration","scope":37335,"src":"21822:21:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":37331,"name":"int256","nodeType":"ElementaryTypeName","src":"21822:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":37332,"nodeType":"ArrayTypeName","src":"21822:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21821:23:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37345,"nodeType":"FunctionDefinition","src":"22036:91:36","nodes":[],"documentation":{"id":37336,"nodeType":"StructuredDocumentation","src":"21851:180:36","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22045:5:36","parameters":{"id":37341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37338,"mutability":"mutable","name":"name","nameLocation":"22067:4:36","nodeType":"VariableDeclaration","scope":37345,"src":"22051:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37337,"name":"string","nodeType":"ElementaryTypeName","src":"22051:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37340,"mutability":"mutable","name":"defaultValue","nameLocation":"22078:12:36","nodeType":"VariableDeclaration","scope":37345,"src":"22073:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":37339,"name":"bool","nodeType":"ElementaryTypeName","src":"22073:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22050:41:36"},"returnParameters":{"id":37344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37343,"mutability":"mutable","name":"value","nameLocation":"22120:5:36","nodeType":"VariableDeclaration","scope":37345,"src":"22115:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":37342,"name":"bool","nodeType":"ElementaryTypeName","src":"22115:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22114:12:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37355,"nodeType":"FunctionDefinition","src":"22321:97:36","nodes":[],"documentation":{"id":37346,"nodeType":"StructuredDocumentation","src":"22133:183:36","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22330:5:36","parameters":{"id":37351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37348,"mutability":"mutable","name":"name","nameLocation":"22352:4:36","nodeType":"VariableDeclaration","scope":37355,"src":"22336:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37347,"name":"string","nodeType":"ElementaryTypeName","src":"22336:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37350,"mutability":"mutable","name":"defaultValue","nameLocation":"22366:12:36","nodeType":"VariableDeclaration","scope":37355,"src":"22358:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37349,"name":"uint256","nodeType":"ElementaryTypeName","src":"22358:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22335:44:36"},"returnParameters":{"id":37354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37353,"mutability":"mutable","name":"value","nameLocation":"22411:5:36","nodeType":"VariableDeclaration","scope":37355,"src":"22403:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37352,"name":"uint256","nodeType":"ElementaryTypeName","src":"22403:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22402:15:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37369,"nodeType":"FunctionDefinition","src":"22646:164:36","nodes":[],"documentation":{"id":37356,"nodeType":"StructuredDocumentation","src":"22424:217:36","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22655:5:36","parameters":{"id":37364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37358,"mutability":"mutable","name":"name","nameLocation":"22677:4:36","nodeType":"VariableDeclaration","scope":37369,"src":"22661:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37357,"name":"string","nodeType":"ElementaryTypeName","src":"22661:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37360,"mutability":"mutable","name":"delim","nameLocation":"22699:5:36","nodeType":"VariableDeclaration","scope":37369,"src":"22683:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37359,"name":"string","nodeType":"ElementaryTypeName","src":"22683:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37363,"mutability":"mutable","name":"defaultValue","nameLocation":"22725:12:36","nodeType":"VariableDeclaration","scope":37369,"src":"22706:31:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":37361,"name":"address","nodeType":"ElementaryTypeName","src":"22706:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":37362,"nodeType":"ArrayTypeName","src":"22706:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"22660:78:36"},"returnParameters":{"id":37368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37367,"mutability":"mutable","name":"value","nameLocation":"22803:5:36","nodeType":"VariableDeclaration","scope":37369,"src":"22786:22:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":37365,"name":"address","nodeType":"ElementaryTypeName","src":"22786:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":37366,"nodeType":"ArrayTypeName","src":"22786:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"22785:24:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37383,"nodeType":"FunctionDefinition","src":"23038:164:36","nodes":[],"documentation":{"id":37370,"nodeType":"StructuredDocumentation","src":"22816:217:36","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23047:5:36","parameters":{"id":37378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37372,"mutability":"mutable","name":"name","nameLocation":"23069:4:36","nodeType":"VariableDeclaration","scope":37383,"src":"23053:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37371,"name":"string","nodeType":"ElementaryTypeName","src":"23053:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37374,"mutability":"mutable","name":"delim","nameLocation":"23091:5:36","nodeType":"VariableDeclaration","scope":37383,"src":"23075:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37373,"name":"string","nodeType":"ElementaryTypeName","src":"23075:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37377,"mutability":"mutable","name":"defaultValue","nameLocation":"23117:12:36","nodeType":"VariableDeclaration","scope":37383,"src":"23098:31:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":37375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23098:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":37376,"nodeType":"ArrayTypeName","src":"23098:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23052:78:36"},"returnParameters":{"id":37382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37381,"mutability":"mutable","name":"value","nameLocation":"23195:5:36","nodeType":"VariableDeclaration","scope":37383,"src":"23178:22:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":37379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23178:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":37380,"nodeType":"ArrayTypeName","src":"23178:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23177:24:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37397,"nodeType":"FunctionDefinition","src":"23429:162:36","nodes":[],"documentation":{"id":37384,"nodeType":"StructuredDocumentation","src":"23208:216:36","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23438:5:36","parameters":{"id":37392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37386,"mutability":"mutable","name":"name","nameLocation":"23460:4:36","nodeType":"VariableDeclaration","scope":37397,"src":"23444:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37385,"name":"string","nodeType":"ElementaryTypeName","src":"23444:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37388,"mutability":"mutable","name":"delim","nameLocation":"23482:5:36","nodeType":"VariableDeclaration","scope":37397,"src":"23466:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37387,"name":"string","nodeType":"ElementaryTypeName","src":"23466:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37391,"mutability":"mutable","name":"defaultValue","nameLocation":"23507:12:36","nodeType":"VariableDeclaration","scope":37397,"src":"23489:30:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":37389,"name":"string","nodeType":"ElementaryTypeName","src":"23489:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":37390,"nodeType":"ArrayTypeName","src":"23489:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"23443:77:36"},"returnParameters":{"id":37396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37395,"mutability":"mutable","name":"value","nameLocation":"23584:5:36","nodeType":"VariableDeclaration","scope":37397,"src":"23568:21:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":37393,"name":"string","nodeType":"ElementaryTypeName","src":"23568:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":37394,"nodeType":"ArrayTypeName","src":"23568:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"23567:23:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37411,"nodeType":"FunctionDefinition","src":"23817:160:36","nodes":[],"documentation":{"id":37398,"nodeType":"StructuredDocumentation","src":"23597:215:36","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23826:5:36","parameters":{"id":37406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37400,"mutability":"mutable","name":"name","nameLocation":"23848:4:36","nodeType":"VariableDeclaration","scope":37411,"src":"23832:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37399,"name":"string","nodeType":"ElementaryTypeName","src":"23832:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37402,"mutability":"mutable","name":"delim","nameLocation":"23870:5:36","nodeType":"VariableDeclaration","scope":37411,"src":"23854:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37401,"name":"string","nodeType":"ElementaryTypeName","src":"23854:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37405,"mutability":"mutable","name":"defaultValue","nameLocation":"23894:12:36","nodeType":"VariableDeclaration","scope":37411,"src":"23877:29:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":37403,"name":"bytes","nodeType":"ElementaryTypeName","src":"23877:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":37404,"nodeType":"ArrayTypeName","src":"23877:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"23831:76:36"},"returnParameters":{"id":37410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37409,"mutability":"mutable","name":"value","nameLocation":"23970:5:36","nodeType":"VariableDeclaration","scope":37411,"src":"23955:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":37407,"name":"bytes","nodeType":"ElementaryTypeName","src":"23955:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":37408,"nodeType":"ArrayTypeName","src":"23955:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"23954:22:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37421,"nodeType":"FunctionDefinition","src":"24170:95:36","nodes":[],"documentation":{"id":37412,"nodeType":"StructuredDocumentation","src":"23983:182:36","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24179:5:36","parameters":{"id":37417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37414,"mutability":"mutable","name":"name","nameLocation":"24201:4:36","nodeType":"VariableDeclaration","scope":37421,"src":"24185:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37413,"name":"string","nodeType":"ElementaryTypeName","src":"24185:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37416,"mutability":"mutable","name":"defaultValue","nameLocation":"24214:12:36","nodeType":"VariableDeclaration","scope":37421,"src":"24207:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":37415,"name":"int256","nodeType":"ElementaryTypeName","src":"24207:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24184:43:36"},"returnParameters":{"id":37420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37419,"mutability":"mutable","name":"value","nameLocation":"24258:5:36","nodeType":"VariableDeclaration","scope":37421,"src":"24251:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":37418,"name":"int256","nodeType":"ElementaryTypeName","src":"24251:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24250:14:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37431,"nodeType":"FunctionDefinition","src":"24459:97:36","nodes":[],"documentation":{"id":37422,"nodeType":"StructuredDocumentation","src":"24271:183:36","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24468:5:36","parameters":{"id":37427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37424,"mutability":"mutable","name":"name","nameLocation":"24490:4:36","nodeType":"VariableDeclaration","scope":37431,"src":"24474:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37423,"name":"string","nodeType":"ElementaryTypeName","src":"24474:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37426,"mutability":"mutable","name":"defaultValue","nameLocation":"24504:12:36","nodeType":"VariableDeclaration","scope":37431,"src":"24496:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37425,"name":"address","nodeType":"ElementaryTypeName","src":"24496:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24473:44:36"},"returnParameters":{"id":37430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37429,"mutability":"mutable","name":"value","nameLocation":"24549:5:36","nodeType":"VariableDeclaration","scope":37431,"src":"24541:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37428,"name":"address","nodeType":"ElementaryTypeName","src":"24541:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24540:15:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37441,"nodeType":"FunctionDefinition","src":"24750:97:36","nodes":[],"documentation":{"id":37432,"nodeType":"StructuredDocumentation","src":"24562:183:36","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24759:5:36","parameters":{"id":37437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37434,"mutability":"mutable","name":"name","nameLocation":"24781:4:36","nodeType":"VariableDeclaration","scope":37441,"src":"24765:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37433,"name":"string","nodeType":"ElementaryTypeName","src":"24765:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37436,"mutability":"mutable","name":"defaultValue","nameLocation":"24795:12:36","nodeType":"VariableDeclaration","scope":37441,"src":"24787:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24787:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24764:44:36"},"returnParameters":{"id":37440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37439,"mutability":"mutable","name":"value","nameLocation":"24840:5:36","nodeType":"VariableDeclaration","scope":37441,"src":"24832:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24832:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24831:15:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37451,"nodeType":"FunctionDefinition","src":"25040:111:36","nodes":[],"documentation":{"id":37442,"nodeType":"StructuredDocumentation","src":"24853:182:36","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25049:5:36","parameters":{"id":37447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37444,"mutability":"mutable","name":"name","nameLocation":"25071:4:36","nodeType":"VariableDeclaration","scope":37451,"src":"25055:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37443,"name":"string","nodeType":"ElementaryTypeName","src":"25055:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37446,"mutability":"mutable","name":"defaultValue","nameLocation":"25093:12:36","nodeType":"VariableDeclaration","scope":37451,"src":"25077:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37445,"name":"string","nodeType":"ElementaryTypeName","src":"25077:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25054:52:36"},"returnParameters":{"id":37450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37449,"mutability":"mutable","name":"value","nameLocation":"25144:5:36","nodeType":"VariableDeclaration","scope":37451,"src":"25130:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":37448,"name":"string","nodeType":"ElementaryTypeName","src":"25130:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25129:21:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37461,"nodeType":"FunctionDefinition","src":"25343:109:36","nodes":[],"documentation":{"id":37452,"nodeType":"StructuredDocumentation","src":"25157:181:36","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25352:5:36","parameters":{"id":37457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37454,"mutability":"mutable","name":"name","nameLocation":"25374:4:36","nodeType":"VariableDeclaration","scope":37461,"src":"25358:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37453,"name":"string","nodeType":"ElementaryTypeName","src":"25358:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37456,"mutability":"mutable","name":"defaultValue","nameLocation":"25395:12:36","nodeType":"VariableDeclaration","scope":37461,"src":"25380:27:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":37455,"name":"bytes","nodeType":"ElementaryTypeName","src":"25380:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25357:51:36"},"returnParameters":{"id":37460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37459,"mutability":"mutable","name":"value","nameLocation":"25445:5:36","nodeType":"VariableDeclaration","scope":37461,"src":"25432:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":37458,"name":"bytes","nodeType":"ElementaryTypeName","src":"25432:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25431:20:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37475,"nodeType":"FunctionDefinition","src":"25677:158:36","nodes":[],"documentation":{"id":37462,"nodeType":"StructuredDocumentation","src":"25458:214:36","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25686:5:36","parameters":{"id":37470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37464,"mutability":"mutable","name":"name","nameLocation":"25708:4:36","nodeType":"VariableDeclaration","scope":37475,"src":"25692:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37463,"name":"string","nodeType":"ElementaryTypeName","src":"25692:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37466,"mutability":"mutable","name":"delim","nameLocation":"25730:5:36","nodeType":"VariableDeclaration","scope":37475,"src":"25714:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37465,"name":"string","nodeType":"ElementaryTypeName","src":"25714:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37469,"mutability":"mutable","name":"defaultValue","nameLocation":"25753:12:36","nodeType":"VariableDeclaration","scope":37475,"src":"25737:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":37467,"name":"bool","nodeType":"ElementaryTypeName","src":"25737:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":37468,"nodeType":"ArrayTypeName","src":"25737:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"25691:75:36"},"returnParameters":{"id":37474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37473,"mutability":"mutable","name":"value","nameLocation":"25828:5:36","nodeType":"VariableDeclaration","scope":37475,"src":"25814:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":37471,"name":"bool","nodeType":"ElementaryTypeName","src":"25814:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":37472,"nodeType":"ArrayTypeName","src":"25814:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"25813:21:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37489,"nodeType":"FunctionDefinition","src":"26063:164:36","nodes":[],"documentation":{"id":37476,"nodeType":"StructuredDocumentation","src":"25841:217:36","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"26072:5:36","parameters":{"id":37484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37478,"mutability":"mutable","name":"name","nameLocation":"26094:4:36","nodeType":"VariableDeclaration","scope":37489,"src":"26078:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37477,"name":"string","nodeType":"ElementaryTypeName","src":"26078:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37480,"mutability":"mutable","name":"delim","nameLocation":"26116:5:36","nodeType":"VariableDeclaration","scope":37489,"src":"26100:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37479,"name":"string","nodeType":"ElementaryTypeName","src":"26100:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37483,"mutability":"mutable","name":"defaultValue","nameLocation":"26142:12:36","nodeType":"VariableDeclaration","scope":37489,"src":"26123:31:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":37481,"name":"uint256","nodeType":"ElementaryTypeName","src":"26123:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":37482,"nodeType":"ArrayTypeName","src":"26123:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"26077:78:36"},"returnParameters":{"id":37488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37487,"mutability":"mutable","name":"value","nameLocation":"26220:5:36","nodeType":"VariableDeclaration","scope":37489,"src":"26203:22:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":37485,"name":"uint256","nodeType":"ElementaryTypeName","src":"26203:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":37486,"nodeType":"ArrayTypeName","src":"26203:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"26202:24:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37503,"nodeType":"FunctionDefinition","src":"26454:162:36","nodes":[],"documentation":{"id":37490,"nodeType":"StructuredDocumentation","src":"26233:216:36","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"26463:5:36","parameters":{"id":37498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37492,"mutability":"mutable","name":"name","nameLocation":"26485:4:36","nodeType":"VariableDeclaration","scope":37503,"src":"26469:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37491,"name":"string","nodeType":"ElementaryTypeName","src":"26469:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37494,"mutability":"mutable","name":"delim","nameLocation":"26507:5:36","nodeType":"VariableDeclaration","scope":37503,"src":"26491:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37493,"name":"string","nodeType":"ElementaryTypeName","src":"26491:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37497,"mutability":"mutable","name":"defaultValue","nameLocation":"26532:12:36","nodeType":"VariableDeclaration","scope":37503,"src":"26514:30:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":37495,"name":"int256","nodeType":"ElementaryTypeName","src":"26514:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":37496,"nodeType":"ArrayTypeName","src":"26514:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"26468:77:36"},"returnParameters":{"id":37502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37501,"mutability":"mutable","name":"value","nameLocation":"26609:5:36","nodeType":"VariableDeclaration","scope":37503,"src":"26593:21:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":37499,"name":"int256","nodeType":"ElementaryTypeName","src":"26593:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":37500,"nodeType":"ArrayTypeName","src":"26593:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"26592:23:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37511,"nodeType":"FunctionDefinition","src":"26764:85:36","nodes":[],"documentation":{"id":37504,"nodeType":"StructuredDocumentation","src":"26622:137:36","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"26773:9:36","parameters":{"id":37507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37506,"mutability":"mutable","name":"name","nameLocation":"26799:4:36","nodeType":"VariableDeclaration","scope":37511,"src":"26783:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37505,"name":"string","nodeType":"ElementaryTypeName","src":"26783:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26782:22:36"},"returnParameters":{"id":37510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37509,"mutability":"mutable","name":"value","nameLocation":"26842:5:36","nodeType":"VariableDeclaration","scope":37511,"src":"26828:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":37508,"name":"string","nodeType":"ElementaryTypeName","src":"26828:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26827:21:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37522,"nodeType":"FunctionDefinition","src":"27031:110:36","nodes":[],"documentation":{"id":37512,"nodeType":"StructuredDocumentation","src":"26855:171:36","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"27040:9:36","parameters":{"id":37517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37514,"mutability":"mutable","name":"name","nameLocation":"27066:4:36","nodeType":"VariableDeclaration","scope":37522,"src":"27050:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37513,"name":"string","nodeType":"ElementaryTypeName","src":"27050:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37516,"mutability":"mutable","name":"delim","nameLocation":"27088:5:36","nodeType":"VariableDeclaration","scope":37522,"src":"27072:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37515,"name":"string","nodeType":"ElementaryTypeName","src":"27072:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27049:45:36"},"returnParameters":{"id":37521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37520,"mutability":"mutable","name":"value","nameLocation":"27134:5:36","nodeType":"VariableDeclaration","scope":37522,"src":"27118:21:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":37518,"name":"string","nodeType":"ElementaryTypeName","src":"27118:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":37519,"nodeType":"ArrayTypeName","src":"27118:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"27117:23:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37530,"nodeType":"FunctionDefinition","src":"27290:77:36","nodes":[],"documentation":{"id":37523,"nodeType":"StructuredDocumentation","src":"27147:138:36","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"27299:7:36","parameters":{"id":37526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37525,"mutability":"mutable","name":"name","nameLocation":"27323:4:36","nodeType":"VariableDeclaration","scope":37530,"src":"27307:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37524,"name":"string","nodeType":"ElementaryTypeName","src":"27307:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27306:22:36"},"returnParameters":{"id":37529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37528,"mutability":"mutable","name":"value","nameLocation":"27360:5:36","nodeType":"VariableDeclaration","scope":37530,"src":"27352:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37527,"name":"uint256","nodeType":"ElementaryTypeName","src":"27352:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27351:15:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37541,"nodeType":"FunctionDefinition","src":"27550:109:36","nodes":[],"documentation":{"id":37531,"nodeType":"StructuredDocumentation","src":"27373:172:36","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"27559:7:36","parameters":{"id":37536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37533,"mutability":"mutable","name":"name","nameLocation":"27583:4:36","nodeType":"VariableDeclaration","scope":37541,"src":"27567:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37532,"name":"string","nodeType":"ElementaryTypeName","src":"27567:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37535,"mutability":"mutable","name":"delim","nameLocation":"27605:5:36","nodeType":"VariableDeclaration","scope":37541,"src":"27589:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37534,"name":"string","nodeType":"ElementaryTypeName","src":"27589:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27566:45:36"},"returnParameters":{"id":37540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37539,"mutability":"mutable","name":"value","nameLocation":"27652:5:36","nodeType":"VariableDeclaration","scope":37541,"src":"27635:22:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":37537,"name":"uint256","nodeType":"ElementaryTypeName","src":"27635:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":37538,"nodeType":"ArrayTypeName","src":"27635:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"27634:24:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37550,"nodeType":"FunctionDefinition","src":"27736:77:36","nodes":[],"documentation":{"id":37542,"nodeType":"StructuredDocumentation","src":"27665:66:36","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"27745:9:36","parameters":{"id":37546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37545,"mutability":"mutable","name":"context","nameLocation":"27768:7:36","nodeType":"VariableDeclaration","scope":37550,"src":"27755:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$36775","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":37544,"nodeType":"UserDefinedTypeName","pathNode":{"id":37543,"name":"ForgeContext","nameLocations":["27755:12:36"],"nodeType":"IdentifierPath","referencedDeclaration":36775,"src":"27755:12:36"},"referencedDeclaration":36775,"src":"27755:12:36","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$36775","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"27754:22:36"},"returnParameters":{"id":37549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37548,"mutability":"mutable","name":"result","nameLocation":"27805:6:36","nodeType":"VariableDeclaration","scope":37550,"src":"27800:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":37547,"name":"bool","nodeType":"ElementaryTypeName","src":"27800:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"27799:13:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37558,"nodeType":"FunctionDefinition","src":"27855:70:36","nodes":[],"documentation":{"id":37551,"nodeType":"StructuredDocumentation","src":"27819:31:36","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"27864:6:36","parameters":{"id":37556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37553,"mutability":"mutable","name":"name","nameLocation":"27887:4:36","nodeType":"VariableDeclaration","scope":37558,"src":"27871:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37552,"name":"string","nodeType":"ElementaryTypeName","src":"27871:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37555,"mutability":"mutable","name":"value","nameLocation":"27909:5:36","nodeType":"VariableDeclaration","scope":37558,"src":"27893:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37554,"name":"string","nodeType":"ElementaryTypeName","src":"27893:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27870:45:36"},"returnParameters":{"id":37557,"nodeType":"ParameterList","parameters":[],"src":"27924:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37570,"nodeType":"FunctionDefinition","src":"28057:109:36","nodes":[],"documentation":{"id":37559,"nodeType":"StructuredDocumentation","src":"27961:91:36","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"28066:8:36","parameters":{"id":37562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37561,"mutability":"mutable","name":"target","nameLocation":"28083:6:36","nodeType":"VariableDeclaration","scope":37570,"src":"28075:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37560,"name":"address","nodeType":"ElementaryTypeName","src":"28075:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28074:16:36"},"returnParameters":{"id":37569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37565,"mutability":"mutable","name":"readSlots","nameLocation":"28126:9:36","nodeType":"VariableDeclaration","scope":37570,"src":"28109:26:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":37563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28109:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":37564,"nodeType":"ArrayTypeName","src":"28109:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":37568,"mutability":"mutable","name":"writeSlots","nameLocation":"28154:10:36","nodeType":"VariableDeclaration","scope":37570,"src":"28137:27:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":37566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28137:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":37567,"nodeType":"ArrayTypeName","src":"28137:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"28108:57:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37578,"nodeType":"FunctionDefinition","src":"28222:74:36","nodes":[],"documentation":{"id":37571,"nodeType":"StructuredDocumentation","src":"28172:45:36","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"28231:4:36","parameters":{"id":37574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37573,"mutability":"mutable","name":"privateKey","nameLocation":"28244:10:36","nodeType":"VariableDeclaration","scope":37578,"src":"28236:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37572,"name":"uint256","nodeType":"ElementaryTypeName","src":"28236:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28235:20:36"},"returnParameters":{"id":37577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37576,"mutability":"mutable","name":"keyAddr","nameLocation":"28287:7:36","nodeType":"VariableDeclaration","scope":37578,"src":"28279:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37575,"name":"address","nodeType":"ElementaryTypeName","src":"28279:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28278:17:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":37595,"nodeType":"FunctionDefinition","src":"28359:160:36","nodes":[],"documentation":{"id":37579,"nodeType":"StructuredDocumentation","src":"28302:52:36","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"28368:11:36","parameters":{"id":37589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37581,"mutability":"mutable","name":"fromBlock","nameLocation":"28388:9:36","nodeType":"VariableDeclaration","scope":37595,"src":"28380:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37580,"name":"uint256","nodeType":"ElementaryTypeName","src":"28380:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":37583,"mutability":"mutable","name":"toBlock","nameLocation":"28407:7:36","nodeType":"VariableDeclaration","scope":37595,"src":"28399:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37582,"name":"uint256","nodeType":"ElementaryTypeName","src":"28399:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":37585,"mutability":"mutable","name":"target","nameLocation":"28424:6:36","nodeType":"VariableDeclaration","scope":37595,"src":"28416:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37584,"name":"address","nodeType":"ElementaryTypeName","src":"28416:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":37588,"mutability":"mutable","name":"topics","nameLocation":"28451:6:36","nodeType":"VariableDeclaration","scope":37595,"src":"28432:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":37586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28432:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":37587,"nodeType":"ArrayTypeName","src":"28432:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"28379:79:36"},"returnParameters":{"id":37594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37593,"mutability":"mutable","name":"logs","nameLocation":"28513:4:36","nodeType":"VariableDeclaration","scope":37595,"src":"28493:24:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$36816_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":37591,"nodeType":"UserDefinedTypeName","pathNode":{"id":37590,"name":"EthGetLogs","nameLocations":["28493:10:36"],"nodeType":"IdentifierPath","referencedDeclaration":36816,"src":"28493:10:36"},"referencedDeclaration":36816,"src":"28493:10:36","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$36816_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":37592,"nodeType":"ArrayTypeName","src":"28493:12:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$36816_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"28492:26:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37601,"nodeType":"FunctionDefinition","src":"28856:70:36","nodes":[],"documentation":{"id":37596,"nodeType":"StructuredDocumentation","src":"28525:326:36","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"28865:14:36","parameters":{"id":37597,"nodeType":"ParameterList","parameters":[],"src":"28879:2:36"},"returnParameters":{"id":37600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37599,"mutability":"mutable","name":"blobBaseFee","nameLocation":"28913:11:36","nodeType":"VariableDeclaration","scope":37601,"src":"28905:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37598,"name":"uint256","nodeType":"ElementaryTypeName","src":"28905:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28904:21:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37607,"nodeType":"FunctionDefinition","src":"29241:65:36","nodes":[],"documentation":{"id":37602,"nodeType":"StructuredDocumentation","src":"28932:304:36","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"29250:14:36","parameters":{"id":37603,"nodeType":"ParameterList","parameters":[],"src":"29264:2:36"},"returnParameters":{"id":37606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37605,"mutability":"mutable","name":"height","nameLocation":"29298:6:36","nodeType":"VariableDeclaration","scope":37607,"src":"29290:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37604,"name":"uint256","nodeType":"ElementaryTypeName","src":"29290:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29289:16:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37613,"nodeType":"FunctionDefinition","src":"29630:71:36","nodes":[],"documentation":{"id":37608,"nodeType":"StructuredDocumentation","src":"29312:313:36","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"29639:17:36","parameters":{"id":37609,"nodeType":"ParameterList","parameters":[],"src":"29656:2:36"},"returnParameters":{"id":37612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37611,"mutability":"mutable","name":"timestamp","nameLocation":"29690:9:36","nodeType":"VariableDeclaration","scope":37613,"src":"29682:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37610,"name":"uint256","nodeType":"ElementaryTypeName","src":"29682:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29681:19:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37627,"nodeType":"FunctionDefinition","src":"29794:146:36","nodes":[],"documentation":{"id":37614,"nodeType":"StructuredDocumentation","src":"29707:82:36","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"29803:24:36","parameters":{"id":37619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37616,"mutability":"mutable","name":"target","nameLocation":"29836:6:36","nodeType":"VariableDeclaration","scope":37627,"src":"29828:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37615,"name":"address","nodeType":"ElementaryTypeName","src":"29828:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":37618,"mutability":"mutable","name":"elementSlot","nameLocation":"29852:11:36","nodeType":"VariableDeclaration","scope":37627,"src":"29844:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29844:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29827:37:36"},"returnParameters":{"id":37626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37621,"mutability":"mutable","name":"found","nameLocation":"29904:5:36","nodeType":"VariableDeclaration","scope":37627,"src":"29899:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":37620,"name":"bool","nodeType":"ElementaryTypeName","src":"29899:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":37623,"mutability":"mutable","name":"key","nameLocation":"29919:3:36","nodeType":"VariableDeclaration","scope":37627,"src":"29911:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29911:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":37625,"mutability":"mutable","name":"parent","nameLocation":"29932:6:36","nodeType":"VariableDeclaration","scope":37627,"src":"29924:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29924:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29898:41:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37637,"nodeType":"FunctionDefinition","src":"30037:97:36","nodes":[],"documentation":{"id":37628,"nodeType":"StructuredDocumentation","src":"29946:86:36","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"30046:16:36","parameters":{"id":37633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37630,"mutability":"mutable","name":"target","nameLocation":"30071:6:36","nodeType":"VariableDeclaration","scope":37637,"src":"30063:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37629,"name":"address","nodeType":"ElementaryTypeName","src":"30063:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":37632,"mutability":"mutable","name":"mappingSlot","nameLocation":"30087:11:36","nodeType":"VariableDeclaration","scope":37637,"src":"30079:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30079:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"30062:37:36"},"returnParameters":{"id":37636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37635,"mutability":"mutable","name":"length","nameLocation":"30126:6:36","nodeType":"VariableDeclaration","scope":37637,"src":"30118:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37634,"name":"uint256","nodeType":"ElementaryTypeName","src":"30118:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30117:16:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37649,"nodeType":"FunctionDefinition","src":"30338:109:36","nodes":[],"documentation":{"id":37638,"nodeType":"StructuredDocumentation","src":"30140:193:36","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"30347:16:36","parameters":{"id":37645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37640,"mutability":"mutable","name":"target","nameLocation":"30372:6:36","nodeType":"VariableDeclaration","scope":37649,"src":"30364:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37639,"name":"address","nodeType":"ElementaryTypeName","src":"30364:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":37642,"mutability":"mutable","name":"mappingSlot","nameLocation":"30388:11:36","nodeType":"VariableDeclaration","scope":37649,"src":"30380:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30380:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":37644,"mutability":"mutable","name":"idx","nameLocation":"30409:3:36","nodeType":"VariableDeclaration","scope":37649,"src":"30401:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37643,"name":"uint256","nodeType":"ElementaryTypeName","src":"30401:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30363:50:36"},"returnParameters":{"id":37648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37647,"mutability":"mutable","name":"value","nameLocation":"30440:5:36","nodeType":"VariableDeclaration","scope":37649,"src":"30432:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30432:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"30431:15:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37657,"nodeType":"FunctionDefinition","src":"30491:72:36","nodes":[],"documentation":{"id":37650,"nodeType":"StructuredDocumentation","src":"30453:33:36","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"30500:8:36","parameters":{"id":37653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37652,"mutability":"mutable","name":"account","nameLocation":"30517:7:36","nodeType":"VariableDeclaration","scope":37657,"src":"30509:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37651,"name":"address","nodeType":"ElementaryTypeName","src":"30509:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30508:17:36"},"returnParameters":{"id":37656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37655,"mutability":"mutable","name":"nonce","nameLocation":"30556:5:36","nodeType":"VariableDeclaration","scope":37657,"src":"30549:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":37654,"name":"uint64","nodeType":"ElementaryTypeName","src":"30549:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"30548:14:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37666,"nodeType":"FunctionDefinition","src":"30606:74:36","nodes":[],"documentation":{"id":37658,"nodeType":"StructuredDocumentation","src":"30569:32:36","text":"Get the nonce of a `Wallet`."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"30615:8:36","parameters":{"id":37662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37661,"mutability":"mutable","name":"wallet","nameLocation":"30640:6:36","nodeType":"VariableDeclaration","scope":37666,"src":"30624:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$36854_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":37660,"nodeType":"UserDefinedTypeName","pathNode":{"id":37659,"name":"Wallet","nameLocations":["30624:6:36"],"nodeType":"IdentifierPath","referencedDeclaration":36854,"src":"30624:6:36"},"referencedDeclaration":36854,"src":"30624:6:36","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$36854_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"30623:24:36"},"returnParameters":{"id":37665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37664,"mutability":"mutable","name":"nonce","nameLocation":"30673:5:36","nodeType":"VariableDeclaration","scope":37666,"src":"30666:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":37663,"name":"uint64","nodeType":"ElementaryTypeName","src":"30666:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"30665:14:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37674,"nodeType":"FunctionDefinition","src":"30844:95:36","nodes":[],"documentation":{"id":37667,"nodeType":"StructuredDocumentation","src":"30686:153:36","text":"Gets the RLP encoded block header for a given block number.\n Returns the block header in the same format as `cast block <block_number> --raw`."},"functionSelector":"2c667606","implemented":false,"kind":"function","modifiers":[],"name":"getRawBlockHeader","nameLocation":"30853:17:36","parameters":{"id":37670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37669,"mutability":"mutable","name":"blockNumber","nameLocation":"30879:11:36","nodeType":"VariableDeclaration","scope":37674,"src":"30871:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37668,"name":"uint256","nodeType":"ElementaryTypeName","src":"30871:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30870:21:36"},"returnParameters":{"id":37673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37672,"mutability":"mutable","name":"rlpHeader","nameLocation":"30928:9:36","nodeType":"VariableDeclaration","scope":37674,"src":"30915:22:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":37671,"name":"bytes","nodeType":"ElementaryTypeName","src":"30915:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30914:24:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37682,"nodeType":"FunctionDefinition","src":"30981:64:36","nodes":[],"documentation":{"id":37675,"nodeType":"StructuredDocumentation","src":"30945:31:36","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"30990:15:36","parameters":{"id":37676,"nodeType":"ParameterList","parameters":[],"src":"31005:2:36"},"returnParameters":{"id":37681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37680,"mutability":"mutable","name":"logs","nameLocation":"31039:4:36","nodeType":"VariableDeclaration","scope":37682,"src":"31026:17:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$36789_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":37678,"nodeType":"UserDefinedTypeName","pathNode":{"id":37677,"name":"Log","nameLocations":["31026:3:36"],"nodeType":"IdentifierPath","referencedDeclaration":36789,"src":"31026:3:36"},"referencedDeclaration":36789,"src":"31026:3:36","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$36789_storage_ptr","typeString":"struct VmSafe.Log"}},"id":37679,"nodeType":"ArrayTypeName","src":"31026:5:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$36789_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"31025:19:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37688,"nodeType":"FunctionDefinition","src":"31130:67:36","nodes":[],"documentation":{"id":37683,"nodeType":"StructuredDocumentation","src":"31051:74:36","text":"Returns state diffs from current `vm.startStateDiffRecording` session."},"functionSelector":"80df01cc","implemented":false,"kind":"function","modifiers":[],"name":"getStateDiff","nameLocation":"31139:12:36","parameters":{"id":37684,"nodeType":"ParameterList","parameters":[],"src":"31151:2:36"},"returnParameters":{"id":37687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37686,"mutability":"mutable","name":"diff","nameLocation":"31191:4:36","nodeType":"VariableDeclaration","scope":37688,"src":"31177:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":37685,"name":"string","nodeType":"ElementaryTypeName","src":"31177:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31176:20:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37694,"nodeType":"FunctionDefinition","src":"31298:71:36","nodes":[],"documentation":{"id":37689,"nodeType":"StructuredDocumentation","src":"31203:90:36","text":"Returns state diffs from current `vm.startStateDiffRecording` session, in json format."},"functionSelector":"f54fe009","implemented":false,"kind":"function","modifiers":[],"name":"getStateDiffJson","nameLocation":"31307:16:36","parameters":{"id":37690,"nodeType":"ParameterList","parameters":[],"src":"31323:2:36"},"returnParameters":{"id":37693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37692,"mutability":"mutable","name":"diff","nameLocation":"31363:4:36","nodeType":"VariableDeclaration","scope":37694,"src":"31349:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":37691,"name":"string","nodeType":"ElementaryTypeName","src":"31349:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31348:20:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37701,"nodeType":"FunctionDefinition","src":"31447:62:36","nodes":[],"documentation":{"id":37695,"nodeType":"StructuredDocumentation","src":"31375:67:36","text":"Gets the gas used in the last call from the callee perspective."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"31456:11:36","parameters":{"id":37696,"nodeType":"ParameterList","parameters":[],"src":"31467:2:36"},"returnParameters":{"id":37700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37699,"mutability":"mutable","name":"gas","nameLocation":"31504:3:36","nodeType":"VariableDeclaration","scope":37701,"src":"31493:14:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$36940_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":37698,"nodeType":"UserDefinedTypeName","pathNode":{"id":37697,"name":"Gas","nameLocations":["31493:3:36"],"nodeType":"IdentifierPath","referencedDeclaration":36940,"src":"31493:3:36"},"referencedDeclaration":36940,"src":"31493:3:36","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$36940_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"31492:16:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37711,"nodeType":"FunctionDefinition","src":"31561:81:36","nodes":[],"documentation":{"id":37702,"nodeType":"StructuredDocumentation","src":"31515:41:36","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"31570:4:36","parameters":{"id":37707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37704,"mutability":"mutable","name":"target","nameLocation":"31583:6:36","nodeType":"VariableDeclaration","scope":37711,"src":"31575:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37703,"name":"address","nodeType":"ElementaryTypeName","src":"31575:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":37706,"mutability":"mutable","name":"slot","nameLocation":"31599:4:36","nodeType":"VariableDeclaration","scope":37711,"src":"31591:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31591:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31574:30:36"},"returnParameters":{"id":37710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37709,"mutability":"mutable","name":"data","nameLocation":"31636:4:36","nodeType":"VariableDeclaration","scope":37711,"src":"31628:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31628:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31627:14:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37715,"nodeType":"FunctionDefinition","src":"31733:37:36","nodes":[],"documentation":{"id":37712,"nodeType":"StructuredDocumentation","src":"31648:80:36","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"31742:16:36","parameters":{"id":37713,"nodeType":"ParameterList","parameters":[],"src":"31758:2:36"},"returnParameters":{"id":37714,"nodeType":"ParameterList","parameters":[],"src":"31769:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37719,"nodeType":"FunctionDefinition","src":"31930:27:36","nodes":[],"documentation":{"id":37716,"nodeType":"StructuredDocumentation","src":"31776:149:36","text":"Records all storage reads and writes. Use `accesses` to get the recorded data.\n Subsequent calls to `record` will clear the previous data."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"31939:6:36","parameters":{"id":37717,"nodeType":"ParameterList","parameters":[],"src":"31945:2:36"},"returnParameters":{"id":37718,"nodeType":"ParameterList","parameters":[],"src":"31956:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37723,"nodeType":"FunctionDefinition","src":"32004:31:36","nodes":[],"documentation":{"id":37720,"nodeType":"StructuredDocumentation","src":"31963:36:36","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"32013:10:36","parameters":{"id":37721,"nodeType":"ParameterList","parameters":[],"src":"32023:2:36"},"returnParameters":{"id":37722,"nodeType":"ParameterList","parameters":[],"src":"32034:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37727,"nodeType":"FunctionDefinition","src":"32106:37:36","nodes":[],"documentation":{"id":37724,"nodeType":"StructuredDocumentation","src":"32041:60:36","text":"Reset gas metering (i.e. gas usage is set to gas limit)."},"functionSelector":"be367dd3","implemented":false,"kind":"function","modifiers":[],"name":"resetGasMetering","nameLocation":"32115:16:36","parameters":{"id":37725,"nodeType":"ParameterList","parameters":[],"src":"32131:2:36"},"returnParameters":{"id":37726,"nodeType":"ParameterList","parameters":[],"src":"32142:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37731,"nodeType":"FunctionDefinition","src":"32233:38:36","nodes":[],"documentation":{"id":37728,"nodeType":"StructuredDocumentation","src":"32149:79:36","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"32242:17:36","parameters":{"id":37729,"nodeType":"ParameterList","parameters":[],"src":"32259:2:36"},"returnParameters":{"id":37730,"nodeType":"ParameterList","parameters":[],"src":"32270:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37741,"nodeType":"FunctionDefinition","src":"32348:98:36","nodes":[],"documentation":{"id":37732,"nodeType":"StructuredDocumentation","src":"32277:66:36","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"32357:3:36","parameters":{"id":37737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37734,"mutability":"mutable","name":"method","nameLocation":"32377:6:36","nodeType":"VariableDeclaration","scope":37741,"src":"32361:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37733,"name":"string","nodeType":"ElementaryTypeName","src":"32361:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37736,"mutability":"mutable","name":"params","nameLocation":"32401:6:36","nodeType":"VariableDeclaration","scope":37741,"src":"32385:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37735,"name":"string","nodeType":"ElementaryTypeName","src":"32385:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32360:48:36"},"returnParameters":{"id":37740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37739,"mutability":"mutable","name":"data","nameLocation":"32440:4:36","nodeType":"VariableDeclaration","scope":37741,"src":"32427:17:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":37738,"name":"bytes","nodeType":"ElementaryTypeName","src":"32427:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32426:19:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37753,"nodeType":"FunctionDefinition","src":"32521:142:36","nodes":[],"documentation":{"id":37742,"nodeType":"StructuredDocumentation","src":"32452:64:36","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"32530:3:36","parameters":{"id":37749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37744,"mutability":"mutable","name":"urlOrAlias","nameLocation":"32550:10:36","nodeType":"VariableDeclaration","scope":37753,"src":"32534:26:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37743,"name":"string","nodeType":"ElementaryTypeName","src":"32534:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37746,"mutability":"mutable","name":"method","nameLocation":"32578:6:36","nodeType":"VariableDeclaration","scope":37753,"src":"32562:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37745,"name":"string","nodeType":"ElementaryTypeName","src":"32562:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37748,"mutability":"mutable","name":"params","nameLocation":"32602:6:36","nodeType":"VariableDeclaration","scope":37753,"src":"32586:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37747,"name":"string","nodeType":"ElementaryTypeName","src":"32586:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32533:76:36"},"returnParameters":{"id":37752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37751,"mutability":"mutable","name":"data","nameLocation":"32657:4:36","nodeType":"VariableDeclaration","scope":37753,"src":"32644:17:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":37750,"name":"bytes","nodeType":"ElementaryTypeName","src":"32644:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32643:19:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37757,"nodeType":"FunctionDefinition","src":"32717:45:36","nodes":[],"documentation":{"id":37754,"nodeType":"StructuredDocumentation","src":"32669:43:36","text":"Records the debug trace during the run."},"functionSelector":"419c8832","implemented":false,"kind":"function","modifiers":[],"name":"startDebugTraceRecording","nameLocation":"32726:24:36","parameters":{"id":37755,"nodeType":"ParameterList","parameters":[],"src":"32750:2:36"},"returnParameters":{"id":37756,"nodeType":"ParameterList","parameters":[],"src":"32761:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37761,"nodeType":"FunctionDefinition","src":"32830:42:36","nodes":[],"documentation":{"id":37758,"nodeType":"StructuredDocumentation","src":"32768:57:36","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"32839:21:36","parameters":{"id":37759,"nodeType":"ParameterList","parameters":[],"src":"32860:2:36"},"returnParameters":{"id":37760,"nodeType":"ParameterList","parameters":[],"src":"32871:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37765,"nodeType":"FunctionDefinition","src":"33016:44:36","nodes":[],"documentation":{"id":37762,"nodeType":"StructuredDocumentation","src":"32878:133:36","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"33025:23:36","parameters":{"id":37763,"nodeType":"ParameterList","parameters":[],"src":"33048:2:36"},"returnParameters":{"id":37764,"nodeType":"ParameterList","parameters":[],"src":"33059:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37773,"nodeType":"FunctionDefinition","src":"33139:87:36","nodes":[],"documentation":{"id":37766,"nodeType":"StructuredDocumentation","src":"33066:68:36","text":"Stop debug trace recording and returns the recorded debug trace."},"functionSelector":"ced398a2","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnDebugTraceRecording","nameLocation":"33148:32:36","parameters":{"id":37767,"nodeType":"ParameterList","parameters":[],"src":"33180:2:36"},"returnParameters":{"id":37772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37771,"mutability":"mutable","name":"step","nameLocation":"33220:4:36","nodeType":"VariableDeclaration","scope":37773,"src":"33201:23:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DebugStep_$36955_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DebugStep[]"},"typeName":{"baseType":{"id":37769,"nodeType":"UserDefinedTypeName","pathNode":{"id":37768,"name":"DebugStep","nameLocations":["33201:9:36"],"nodeType":"IdentifierPath","referencedDeclaration":36955,"src":"33201:9:36"},"referencedDeclaration":36955,"src":"33201:9:36","typeDescriptions":{"typeIdentifier":"t_struct$_DebugStep_$36955_storage_ptr","typeString":"struct VmSafe.DebugStep"}},"id":37770,"nodeType":"ArrayTypeName","src":"33201:11:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DebugStep_$36955_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DebugStep[]"}},"visibility":"internal"}],"src":"33200:25:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37781,"nodeType":"FunctionDefinition","src":"33334:92:36","nodes":[],"documentation":{"id":37774,"nodeType":"StructuredDocumentation","src":"33232:97:36","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"33343:22:36","parameters":{"id":37775,"nodeType":"ParameterList","parameters":[],"src":"33365:2:36"},"returnParameters":{"id":37780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37779,"mutability":"mutable","name":"accountAccesses","nameLocation":"33409:15:36","nodeType":"VariableDeclaration","scope":37781,"src":"33386:38:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$36914_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":37777,"nodeType":"UserDefinedTypeName","pathNode":{"id":37776,"name":"AccountAccess","nameLocations":["33386:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":36914,"src":"33386:13:36"},"referencedDeclaration":36914,"src":"33386:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$36914_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":37778,"nodeType":"ArrayTypeName","src":"33386:15:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$36914_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"33385:40:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37785,"nodeType":"FunctionDefinition","src":"33522:41:36","nodes":[],"documentation":{"id":37782,"nodeType":"StructuredDocumentation","src":"33432:85:36","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"33531:20:36","parameters":{"id":37783,"nodeType":"ParameterList","parameters":[],"src":"33551:2:36"},"returnParameters":{"id":37784,"nodeType":"ParameterList","parameters":[],"src":"33562:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37789,"nodeType":"FunctionDefinition","src":"33619:31:36","nodes":[],"documentation":{"id":37786,"nodeType":"StructuredDocumentation","src":"33569:45:36","text":"Stops recording storage reads and writes."},"functionSelector":"996be76d","implemented":false,"kind":"function","modifiers":[],"name":"stopRecord","nameLocation":"33628:10:36","parameters":{"id":37787,"nodeType":"ParameterList","parameters":[],"src":"33638:2:36"},"returnParameters":{"id":37788,"nodeType":"ParameterList","parameters":[],"src":"33649:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37795,"nodeType":"FunctionDefinition","src":"33849:50:36","nodes":[],"documentation":{"id":37790,"nodeType":"StructuredDocumentation","src":"33693:151:36","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"33858:9:36","parameters":{"id":37793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37792,"mutability":"mutable","name":"path","nameLocation":"33884:4:36","nodeType":"VariableDeclaration","scope":37795,"src":"33868:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37791,"name":"string","nodeType":"ElementaryTypeName","src":"33868:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33867:22:36"},"returnParameters":{"id":37794,"nodeType":"ParameterList","parameters":[],"src":"33898:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37805,"nodeType":"FunctionDefinition","src":"34214:93:36","nodes":[],"documentation":{"id":37796,"nodeType":"StructuredDocumentation","src":"33905:304:36","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"34223:8:36","parameters":{"id":37801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37798,"mutability":"mutable","name":"from","nameLocation":"34248:4:36","nodeType":"VariableDeclaration","scope":37805,"src":"34232:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37797,"name":"string","nodeType":"ElementaryTypeName","src":"34232:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37800,"mutability":"mutable","name":"to","nameLocation":"34270:2:36","nodeType":"VariableDeclaration","scope":37805,"src":"34254:18:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37799,"name":"string","nodeType":"ElementaryTypeName","src":"34254:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34231:42:36"},"returnParameters":{"id":37804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37803,"mutability":"mutable","name":"copied","nameLocation":"34299:6:36","nodeType":"VariableDeclaration","scope":37805,"src":"34292:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":37802,"name":"uint64","nodeType":"ElementaryTypeName","src":"34292:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"34291:15:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37813,"nodeType":"FunctionDefinition","src":"34712:66:36","nodes":[],"documentation":{"id":37806,"nodeType":"StructuredDocumentation","src":"34313:394:36","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"34721:9:36","parameters":{"id":37811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37808,"mutability":"mutable","name":"path","nameLocation":"34747:4:36","nodeType":"VariableDeclaration","scope":37813,"src":"34731:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37807,"name":"string","nodeType":"ElementaryTypeName","src":"34731:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37810,"mutability":"mutable","name":"recursive","nameLocation":"34758:9:36","nodeType":"VariableDeclaration","scope":37813,"src":"34753:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":37809,"name":"bool","nodeType":"ElementaryTypeName","src":"34753:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34730:38:36"},"returnParameters":{"id":37812,"nodeType":"ParameterList","parameters":[],"src":"34777:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37821,"nodeType":"FunctionDefinition","src":"35008:93:36","nodes":[],"documentation":{"id":37814,"nodeType":"StructuredDocumentation","src":"34784:219:36","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"35017:10:36","parameters":{"id":37817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37816,"mutability":"mutable","name":"artifactPath","nameLocation":"35044:12:36","nodeType":"VariableDeclaration","scope":37821,"src":"35028:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37815,"name":"string","nodeType":"ElementaryTypeName","src":"35028:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35027:30:36"},"returnParameters":{"id":37820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37819,"mutability":"mutable","name":"deployedAddress","nameLocation":"35084:15:36","nodeType":"VariableDeclaration","scope":37821,"src":"35076:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37818,"name":"address","nodeType":"ElementaryTypeName","src":"35076:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"35075:25:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37831,"nodeType":"FunctionDefinition","src":"35395:141:36","nodes":[],"documentation":{"id":37822,"nodeType":"StructuredDocumentation","src":"35107:283:36","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"35404:10:36","parameters":{"id":37827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37824,"mutability":"mutable","name":"artifactPath","nameLocation":"35431:12:36","nodeType":"VariableDeclaration","scope":37831,"src":"35415:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37823,"name":"string","nodeType":"ElementaryTypeName","src":"35415:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37826,"mutability":"mutable","name":"constructorArgs","nameLocation":"35460:15:36","nodeType":"VariableDeclaration","scope":37831,"src":"35445:30:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":37825,"name":"bytes","nodeType":"ElementaryTypeName","src":"35445:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35414:62:36"},"returnParameters":{"id":37830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37829,"mutability":"mutable","name":"deployedAddress","nameLocation":"35519:15:36","nodeType":"VariableDeclaration","scope":37831,"src":"35511:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37828,"name":"address","nodeType":"ElementaryTypeName","src":"35511:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"35510:25:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37841,"nodeType":"FunctionDefinition","src":"35808:108:36","nodes":[],"documentation":{"id":37832,"nodeType":"StructuredDocumentation","src":"35542:261:36","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts `msg.value`."},"functionSelector":"0af6a701","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"35817:10:36","parameters":{"id":37837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37834,"mutability":"mutable","name":"artifactPath","nameLocation":"35844:12:36","nodeType":"VariableDeclaration","scope":37841,"src":"35828:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37833,"name":"string","nodeType":"ElementaryTypeName","src":"35828:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37836,"mutability":"mutable","name":"value","nameLocation":"35866:5:36","nodeType":"VariableDeclaration","scope":37841,"src":"35858:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37835,"name":"uint256","nodeType":"ElementaryTypeName","src":"35858:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35827:45:36"},"returnParameters":{"id":37840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37839,"mutability":"mutable","name":"deployedAddress","nameLocation":"35899:15:36","nodeType":"VariableDeclaration","scope":37841,"src":"35891:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37838,"name":"address","nodeType":"ElementaryTypeName","src":"35891:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"35890:25:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37853,"nodeType":"FunctionDefinition","src":"36226:156:36","nodes":[],"documentation":{"id":37842,"nodeType":"StructuredDocumentation","src":"35922:299:36","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments and `msg.value`."},"functionSelector":"ff5d64e4","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"36235:10:36","parameters":{"id":37849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37844,"mutability":"mutable","name":"artifactPath","nameLocation":"36262:12:36","nodeType":"VariableDeclaration","scope":37853,"src":"36246:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37843,"name":"string","nodeType":"ElementaryTypeName","src":"36246:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37846,"mutability":"mutable","name":"constructorArgs","nameLocation":"36291:15:36","nodeType":"VariableDeclaration","scope":37853,"src":"36276:30:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":37845,"name":"bytes","nodeType":"ElementaryTypeName","src":"36276:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":37848,"mutability":"mutable","name":"value","nameLocation":"36316:5:36","nodeType":"VariableDeclaration","scope":37853,"src":"36308:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37847,"name":"uint256","nodeType":"ElementaryTypeName","src":"36308:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36245:77:36"},"returnParameters":{"id":37852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37851,"mutability":"mutable","name":"deployedAddress","nameLocation":"36365:15:36","nodeType":"VariableDeclaration","scope":37853,"src":"36357:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37850,"name":"address","nodeType":"ElementaryTypeName","src":"36357:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36356:25:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37863,"nodeType":"FunctionDefinition","src":"36636:107:36","nodes":[],"documentation":{"id":37854,"nodeType":"StructuredDocumentation","src":"36388:243:36","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"17ab1d79","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"36645:10:36","parameters":{"id":37859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37856,"mutability":"mutable","name":"artifactPath","nameLocation":"36672:12:36","nodeType":"VariableDeclaration","scope":37863,"src":"36656:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37855,"name":"string","nodeType":"ElementaryTypeName","src":"36656:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37858,"mutability":"mutable","name":"salt","nameLocation":"36694:4:36","nodeType":"VariableDeclaration","scope":37863,"src":"36686:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36686:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"36655:44:36"},"returnParameters":{"id":37862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37861,"mutability":"mutable","name":"deployedAddress","nameLocation":"36726:15:36","nodeType":"VariableDeclaration","scope":37863,"src":"36718:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37860,"name":"address","nodeType":"ElementaryTypeName","src":"36718:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36717:25:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37875,"nodeType":"FunctionDefinition","src":"37061:155:36","nodes":[],"documentation":{"id":37864,"nodeType":"StructuredDocumentation","src":"36749:307:36","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments."},"functionSelector":"016155bf","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"37070:10:36","parameters":{"id":37871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37866,"mutability":"mutable","name":"artifactPath","nameLocation":"37097:12:36","nodeType":"VariableDeclaration","scope":37875,"src":"37081:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37865,"name":"string","nodeType":"ElementaryTypeName","src":"37081:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37868,"mutability":"mutable","name":"constructorArgs","nameLocation":"37126:15:36","nodeType":"VariableDeclaration","scope":37875,"src":"37111:30:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":37867,"name":"bytes","nodeType":"ElementaryTypeName","src":"37111:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":37870,"mutability":"mutable","name":"salt","nameLocation":"37151:4:36","nodeType":"VariableDeclaration","scope":37875,"src":"37143:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37869,"name":"bytes32","nodeType":"ElementaryTypeName","src":"37143:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"37080:76:36"},"returnParameters":{"id":37874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37873,"mutability":"mutable","name":"deployedAddress","nameLocation":"37199:15:36","nodeType":"VariableDeclaration","scope":37875,"src":"37191:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37872,"name":"address","nodeType":"ElementaryTypeName","src":"37191:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37190:25:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37887,"nodeType":"FunctionDefinition","src":"37512:138:36","nodes":[],"documentation":{"id":37876,"nodeType":"StructuredDocumentation","src":"37222:285:36","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts `msg.value`."},"functionSelector":"002cb687","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"37521:10:36","parameters":{"id":37883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37878,"mutability":"mutable","name":"artifactPath","nameLocation":"37548:12:36","nodeType":"VariableDeclaration","scope":37887,"src":"37532:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37877,"name":"string","nodeType":"ElementaryTypeName","src":"37532:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37880,"mutability":"mutable","name":"value","nameLocation":"37570:5:36","nodeType":"VariableDeclaration","scope":37887,"src":"37562:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37879,"name":"uint256","nodeType":"ElementaryTypeName","src":"37562:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":37882,"mutability":"mutable","name":"salt","nameLocation":"37585:4:36","nodeType":"VariableDeclaration","scope":37887,"src":"37577:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"37577:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"37531:59:36"},"returnParameters":{"id":37886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37885,"mutability":"mutable","name":"deployedAddress","nameLocation":"37633:15:36","nodeType":"VariableDeclaration","scope":37887,"src":"37625:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37884,"name":"address","nodeType":"ElementaryTypeName","src":"37625:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37624:25:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37901,"nodeType":"FunctionDefinition","src":"37984:170:36","nodes":[],"documentation":{"id":37888,"nodeType":"StructuredDocumentation","src":"37656:323:36","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments and `msg.value`."},"functionSelector":"3aa773ea","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"37993:10:36","parameters":{"id":37897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37890,"mutability":"mutable","name":"artifactPath","nameLocation":"38020:12:36","nodeType":"VariableDeclaration","scope":37901,"src":"38004:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37889,"name":"string","nodeType":"ElementaryTypeName","src":"38004:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37892,"mutability":"mutable","name":"constructorArgs","nameLocation":"38049:15:36","nodeType":"VariableDeclaration","scope":37901,"src":"38034:30:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":37891,"name":"bytes","nodeType":"ElementaryTypeName","src":"38034:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":37894,"mutability":"mutable","name":"value","nameLocation":"38074:5:36","nodeType":"VariableDeclaration","scope":37901,"src":"38066:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37893,"name":"uint256","nodeType":"ElementaryTypeName","src":"38066:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":37896,"mutability":"mutable","name":"salt","nameLocation":"38089:4:36","nodeType":"VariableDeclaration","scope":37901,"src":"38081:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"38081:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"38003:91:36"},"returnParameters":{"id":37900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37899,"mutability":"mutable","name":"deployedAddress","nameLocation":"38137:15:36","nodeType":"VariableDeclaration","scope":37901,"src":"38129:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37898,"name":"address","nodeType":"ElementaryTypeName","src":"38129:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"38128:25:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37909,"nodeType":"FunctionDefinition","src":"38249:74:36","nodes":[],"documentation":{"id":37902,"nodeType":"StructuredDocumentation","src":"38160:84:36","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"38258:6:36","parameters":{"id":37905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37904,"mutability":"mutable","name":"path","nameLocation":"38281:4:36","nodeType":"VariableDeclaration","scope":37909,"src":"38265:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37903,"name":"string","nodeType":"ElementaryTypeName","src":"38265:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38264:22:36"},"returnParameters":{"id":37908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37907,"mutability":"mutable","name":"result","nameLocation":"38315:6:36","nodeType":"VariableDeclaration","scope":37909,"src":"38310:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":37906,"name":"bool","nodeType":"ElementaryTypeName","src":"38310:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38309:13:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37918,"nodeType":"FunctionDefinition","src":"38388:84:36","nodes":[],"documentation":{"id":37910,"nodeType":"StructuredDocumentation","src":"38329:54:36","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"38397:3:36","parameters":{"id":37914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37913,"mutability":"mutable","name":"commandInput","nameLocation":"38419:12:36","nodeType":"VariableDeclaration","scope":37918,"src":"38401:30:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":37911,"name":"string","nodeType":"ElementaryTypeName","src":"38401:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":37912,"nodeType":"ArrayTypeName","src":"38401:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"38400:32:36"},"returnParameters":{"id":37917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37916,"mutability":"mutable","name":"result","nameLocation":"38464:6:36","nodeType":"VariableDeclaration","scope":37918,"src":"38451:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":37915,"name":"bytes","nodeType":"ElementaryTypeName","src":"38451:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38450:21:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":37927,"nodeType":"FunctionDefinition","src":"38571:93:36","nodes":[],"documentation":{"id":37919,"nodeType":"StructuredDocumentation","src":"38478:88:36","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"38580:10:36","parameters":{"id":37922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37921,"mutability":"mutable","name":"path","nameLocation":"38607:4:36","nodeType":"VariableDeclaration","scope":37927,"src":"38591:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37920,"name":"string","nodeType":"ElementaryTypeName","src":"38591:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38590:22:36"},"returnParameters":{"id":37926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37925,"mutability":"mutable","name":"metadata","nameLocation":"38654:8:36","nodeType":"VariableDeclaration","scope":37927,"src":"38636:26:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$36844_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":37924,"nodeType":"UserDefinedTypeName","pathNode":{"id":37923,"name":"FsMetadata","nameLocations":["38636:10:36"],"nodeType":"IdentifierPath","referencedDeclaration":36844,"src":"38636:10:36"},"referencedDeclaration":36844,"src":"38636:10:36","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$36844_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"38635:28:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37935,"nodeType":"FunctionDefinition","src":"38733:95:36","nodes":[],"documentation":{"id":37928,"nodeType":"StructuredDocumentation","src":"38670:58:36","text":"Gets the artifact path from code (aka. creation code)."},"functionSelector":"eb74848c","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByCode","nameLocation":"38742:21:36","parameters":{"id":37931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37930,"mutability":"mutable","name":"code","nameLocation":"38779:4:36","nodeType":"VariableDeclaration","scope":37935,"src":"38764:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":37929,"name":"bytes","nodeType":"ElementaryTypeName","src":"38764:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38763:21:36"},"returnParameters":{"id":37934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37933,"mutability":"mutable","name":"path","nameLocation":"38822:4:36","nodeType":"VariableDeclaration","scope":37935,"src":"38808:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":37932,"name":"string","nodeType":"ElementaryTypeName","src":"38808:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38807:20:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37943,"nodeType":"FunctionDefinition","src":"38905:111:36","nodes":[],"documentation":{"id":37936,"nodeType":"StructuredDocumentation","src":"38834:66:36","text":"Gets the artifact path from deployed code (aka. runtime code)."},"functionSelector":"6d853ba5","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByDeployedCode","nameLocation":"38914:29:36","parameters":{"id":37939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37938,"mutability":"mutable","name":"deployedCode","nameLocation":"38959:12:36","nodeType":"VariableDeclaration","scope":37943,"src":"38944:27:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":37937,"name":"bytes","nodeType":"ElementaryTypeName","src":"38944:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38943:29:36"},"returnParameters":{"id":37942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37941,"mutability":"mutable","name":"path","nameLocation":"39010:4:36","nodeType":"VariableDeclaration","scope":37943,"src":"38996:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":37940,"name":"string","nodeType":"ElementaryTypeName","src":"38996:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38995:20:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37957,"nodeType":"FunctionDefinition","src":"39311:166:36","nodes":[],"documentation":{"id":37944,"nodeType":"StructuredDocumentation","src":"39022:284:36","text":"Returns the most recent broadcast for the given contract on `chainId` matching `txType`.\n For example:\n The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`.\n The most recent call can be fetched by passing `txType` as `CALL`."},"functionSelector":"3dc90cb3","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcast","nameLocation":"39320:12:36","parameters":{"id":37952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37946,"mutability":"mutable","name":"contractName","nameLocation":"39349:12:36","nodeType":"VariableDeclaration","scope":37957,"src":"39333:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37945,"name":"string","nodeType":"ElementaryTypeName","src":"39333:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37948,"mutability":"mutable","name":"chainId","nameLocation":"39370:7:36","nodeType":"VariableDeclaration","scope":37957,"src":"39363:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":37947,"name":"uint64","nodeType":"ElementaryTypeName","src":"39363:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":37951,"mutability":"mutable","name":"txType","nameLocation":"39395:6:36","nodeType":"VariableDeclaration","scope":37957,"src":"39379:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$36780","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":37950,"nodeType":"UserDefinedTypeName","pathNode":{"id":37949,"name":"BroadcastTxType","nameLocations":["39379:15:36"],"nodeType":"IdentifierPath","referencedDeclaration":36780,"src":"39379:15:36"},"referencedDeclaration":36780,"src":"39379:15:36","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$36780","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"}],"src":"39332:70:36"},"returnParameters":{"id":37956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":37957,"src":"39450:25:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$36968_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary"},"typeName":{"id":37954,"nodeType":"UserDefinedTypeName","pathNode":{"id":37953,"name":"BroadcastTxSummary","nameLocations":["39450:18:36"],"nodeType":"IdentifierPath","referencedDeclaration":36968,"src":"39450:18:36"},"referencedDeclaration":36968,"src":"39450:18:36","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$36968_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"visibility":"internal"}],"src":"39449:27:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37972,"nodeType":"FunctionDefinition","src":"39736:169:36","nodes":[],"documentation":{"id":37958,"nodeType":"StructuredDocumentation","src":"39483:248:36","text":"Returns all broadcasts for the given contract on `chainId` with the specified `txType`.\n Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"functionSelector":"f7afe919","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcasts","nameLocation":"39745:13:36","parameters":{"id":37966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37960,"mutability":"mutable","name":"contractName","nameLocation":"39775:12:36","nodeType":"VariableDeclaration","scope":37972,"src":"39759:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37959,"name":"string","nodeType":"ElementaryTypeName","src":"39759:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37962,"mutability":"mutable","name":"chainId","nameLocation":"39796:7:36","nodeType":"VariableDeclaration","scope":37972,"src":"39789:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":37961,"name":"uint64","nodeType":"ElementaryTypeName","src":"39789:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":37965,"mutability":"mutable","name":"txType","nameLocation":"39821:6:36","nodeType":"VariableDeclaration","scope":37972,"src":"39805:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$36780","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":37964,"nodeType":"UserDefinedTypeName","pathNode":{"id":37963,"name":"BroadcastTxType","nameLocations":["39805:15:36"],"nodeType":"IdentifierPath","referencedDeclaration":36780,"src":"39805:15:36"},"referencedDeclaration":36780,"src":"39805:15:36","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$36780","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"}],"src":"39758:70:36"},"returnParameters":{"id":37971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":37972,"src":"39876:27:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$36968_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"},"typeName":{"baseType":{"id":37968,"nodeType":"UserDefinedTypeName","pathNode":{"id":37967,"name":"BroadcastTxSummary","nameLocations":["39876:18:36"],"nodeType":"IdentifierPath","referencedDeclaration":36968,"src":"39876:18:36"},"referencedDeclaration":36968,"src":"39876:18:36","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$36968_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"id":37969,"nodeType":"ArrayTypeName","src":"39876:20:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$36968_storage_$dyn_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"}},"visibility":"internal"}],"src":"39875:29:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37984,"nodeType":"FunctionDefinition","src":"40136:145:36","nodes":[],"documentation":{"id":37973,"nodeType":"StructuredDocumentation","src":"39911:220:36","text":"Returns all broadcasts for the given contract on `chainId`.\n Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"functionSelector":"f2fa4a26","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcasts","nameLocation":"40145:13:36","parameters":{"id":37978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37975,"mutability":"mutable","name":"contractName","nameLocation":"40175:12:36","nodeType":"VariableDeclaration","scope":37984,"src":"40159:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37974,"name":"string","nodeType":"ElementaryTypeName","src":"40159:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37977,"mutability":"mutable","name":"chainId","nameLocation":"40196:7:36","nodeType":"VariableDeclaration","scope":37984,"src":"40189:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":37976,"name":"uint64","nodeType":"ElementaryTypeName","src":"40189:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"40158:46:36"},"returnParameters":{"id":37983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":37984,"src":"40252:27:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$36968_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"},"typeName":{"baseType":{"id":37980,"nodeType":"UserDefinedTypeName","pathNode":{"id":37979,"name":"BroadcastTxSummary","nameLocations":["40252:18:36"],"nodeType":"IdentifierPath","referencedDeclaration":36968,"src":"40252:18:36"},"referencedDeclaration":36968,"src":"40252:18:36","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$36968_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"id":37981,"nodeType":"ArrayTypeName","src":"40252:20:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$36968_storage_$dyn_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"}},"visibility":"internal"}],"src":"40251:29:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":37992,"nodeType":"FunctionDefinition","src":"40519:101:36","nodes":[],"documentation":{"id":37985,"nodeType":"StructuredDocumentation","src":"40287:227:36","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"40528:7:36","parameters":{"id":37988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37987,"mutability":"mutable","name":"artifactPath","nameLocation":"40552:12:36","nodeType":"VariableDeclaration","scope":37992,"src":"40536:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37986,"name":"string","nodeType":"ElementaryTypeName","src":"40536:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40535:30:36"},"returnParameters":{"id":37991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37990,"mutability":"mutable","name":"creationBytecode","nameLocation":"40602:16:36","nodeType":"VariableDeclaration","scope":37992,"src":"40589:29:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":37989,"name":"bytes","nodeType":"ElementaryTypeName","src":"40589:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40588:31:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38000,"nodeType":"FunctionDefinition","src":"40858:108:36","nodes":[],"documentation":{"id":37993,"nodeType":"StructuredDocumentation","src":"40626:227:36","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"40867:15:36","parameters":{"id":37996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37995,"mutability":"mutable","name":"artifactPath","nameLocation":"40899:12:36","nodeType":"VariableDeclaration","scope":38000,"src":"40883:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":37994,"name":"string","nodeType":"ElementaryTypeName","src":"40883:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40882:30:36"},"returnParameters":{"id":37999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37998,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"40949:15:36","nodeType":"VariableDeclaration","scope":38000,"src":"40936:28:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":37997,"name":"bytes","nodeType":"ElementaryTypeName","src":"40936:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40935:30:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38008,"nodeType":"FunctionDefinition","src":"41042:101:36","nodes":[],"documentation":{"id":38001,"nodeType":"StructuredDocumentation","src":"40972:65:36","text":"Returns the most recent deployment for the current `chainId`."},"functionSelector":"a8091d97","implemented":false,"kind":"function","modifiers":[],"name":"getDeployment","nameLocation":"41051:13:36","parameters":{"id":38004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38003,"mutability":"mutable","name":"contractName","nameLocation":"41081:12:36","nodeType":"VariableDeclaration","scope":38008,"src":"41065:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38002,"name":"string","nodeType":"ElementaryTypeName","src":"41065:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41064:30:36"},"returnParameters":{"id":38007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38006,"mutability":"mutable","name":"deployedAddress","nameLocation":"41126:15:36","nodeType":"VariableDeclaration","scope":38008,"src":"41118:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38005,"name":"address","nodeType":"ElementaryTypeName","src":"41118:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"41117:25:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38018,"nodeType":"FunctionDefinition","src":"41228:141:36","nodes":[],"documentation":{"id":38009,"nodeType":"StructuredDocumentation","src":"41149:74:36","text":"Returns the most recent deployment for the given contract on `chainId`"},"functionSelector":"0debd5d6","implemented":false,"kind":"function","modifiers":[],"name":"getDeployment","nameLocation":"41237:13:36","parameters":{"id":38014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38011,"mutability":"mutable","name":"contractName","nameLocation":"41267:12:36","nodeType":"VariableDeclaration","scope":38018,"src":"41251:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38010,"name":"string","nodeType":"ElementaryTypeName","src":"41251:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38013,"mutability":"mutable","name":"chainId","nameLocation":"41288:7:36","nodeType":"VariableDeclaration","scope":38018,"src":"41281:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":38012,"name":"uint64","nodeType":"ElementaryTypeName","src":"41281:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"41250:46:36"},"returnParameters":{"id":38017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38016,"mutability":"mutable","name":"deployedAddress","nameLocation":"41352:15:36","nodeType":"VariableDeclaration","scope":38018,"src":"41344:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38015,"name":"address","nodeType":"ElementaryTypeName","src":"41344:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"41343:25:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38029,"nodeType":"FunctionDefinition","src":"41638:153:36","nodes":[],"documentation":{"id":38019,"nodeType":"StructuredDocumentation","src":"41375:258:36","text":"Returns all deployments for the given contract on `chainId`\n Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber.\n The most recent deployment is the first element, and the oldest is the last."},"functionSelector":"74e133dd","implemented":false,"kind":"function","modifiers":[],"name":"getDeployments","nameLocation":"41647:14:36","parameters":{"id":38024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38021,"mutability":"mutable","name":"contractName","nameLocation":"41678:12:36","nodeType":"VariableDeclaration","scope":38029,"src":"41662:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38020,"name":"string","nodeType":"ElementaryTypeName","src":"41662:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38023,"mutability":"mutable","name":"chainId","nameLocation":"41699:7:36","nodeType":"VariableDeclaration","scope":38029,"src":"41692:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":38022,"name":"uint64","nodeType":"ElementaryTypeName","src":"41692:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"41661:46:36"},"returnParameters":{"id":38028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38027,"mutability":"mutable","name":"deployedAddresses","nameLocation":"41772:17:36","nodeType":"VariableDeclaration","scope":38029,"src":"41755:34:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":38025,"name":"address","nodeType":"ElementaryTypeName","src":"41755:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":38026,"nodeType":"ArrayTypeName","src":"41755:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"41754:36:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38037,"nodeType":"FunctionDefinition","src":"41897:73:36","nodes":[],"documentation":{"id":38030,"nodeType":"StructuredDocumentation","src":"41797:95:36","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"41906:5:36","parameters":{"id":38033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38032,"mutability":"mutable","name":"path","nameLocation":"41928:4:36","nodeType":"VariableDeclaration","scope":38037,"src":"41912:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38031,"name":"string","nodeType":"ElementaryTypeName","src":"41912:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41911:22:36"},"returnParameters":{"id":38036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38035,"mutability":"mutable","name":"result","nameLocation":"41962:6:36","nodeType":"VariableDeclaration","scope":38037,"src":"41957:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":38034,"name":"bool","nodeType":"ElementaryTypeName","src":"41957:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41956:13:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38045,"nodeType":"FunctionDefinition","src":"42079:74:36","nodes":[],"documentation":{"id":38038,"nodeType":"StructuredDocumentation","src":"41976:98:36","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"42088:6:36","parameters":{"id":38041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38040,"mutability":"mutable","name":"path","nameLocation":"42111:4:36","nodeType":"VariableDeclaration","scope":38045,"src":"42095:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38039,"name":"string","nodeType":"ElementaryTypeName","src":"42095:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42094:22:36"},"returnParameters":{"id":38044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38043,"mutability":"mutable","name":"result","nameLocation":"42145:6:36","nodeType":"VariableDeclaration","scope":38045,"src":"42140:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":38042,"name":"bool","nodeType":"ElementaryTypeName","src":"42140:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"42139:13:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38051,"nodeType":"FunctionDefinition","src":"42209:66:36","nodes":[],"documentation":{"id":38046,"nodeType":"StructuredDocumentation","src":"42159:45:36","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"42218:11:36","parameters":{"id":38047,"nodeType":"ParameterList","parameters":[],"src":"42229:2:36"},"returnParameters":{"id":38050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38049,"mutability":"mutable","name":"path","nameLocation":"42269:4:36","nodeType":"VariableDeclaration","scope":38051,"src":"42255:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38048,"name":"string","nodeType":"ElementaryTypeName","src":"42255:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42254:20:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38059,"nodeType":"FunctionDefinition","src":"42342:83:36","nodes":[],"documentation":{"id":38052,"nodeType":"StructuredDocumentation","src":"42281:56:36","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"42351:6:36","parameters":{"id":38055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38054,"mutability":"mutable","name":"promptText","nameLocation":"42374:10:36","nodeType":"VariableDeclaration","scope":38059,"src":"42358:26:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38053,"name":"string","nodeType":"ElementaryTypeName","src":"42358:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42357:28:36"},"returnParameters":{"id":38058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38057,"mutability":"mutable","name":"input","nameLocation":"42418:5:36","nodeType":"VariableDeclaration","scope":38059,"src":"42404:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38056,"name":"string","nodeType":"ElementaryTypeName","src":"42404:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42403:21:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38067,"nodeType":"FunctionDefinition","src":"42488:78:36","nodes":[],"documentation":{"id":38060,"nodeType":"StructuredDocumentation","src":"42431:52:36","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"42497:13:36","parameters":{"id":38063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38062,"mutability":"mutable","name":"promptText","nameLocation":"42527:10:36","nodeType":"VariableDeclaration","scope":38067,"src":"42511:26:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38061,"name":"string","nodeType":"ElementaryTypeName","src":"42511:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42510:28:36"},"returnParameters":{"id":38066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38067,"src":"42557:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38064,"name":"address","nodeType":"ElementaryTypeName","src":"42557:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"42556:9:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38075,"nodeType":"FunctionDefinition","src":"42640:89:36","nodes":[],"documentation":{"id":38068,"nodeType":"StructuredDocumentation","src":"42572:63:36","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"42649:12:36","parameters":{"id":38071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38070,"mutability":"mutable","name":"promptText","nameLocation":"42678:10:36","nodeType":"VariableDeclaration","scope":38075,"src":"42662:26:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38069,"name":"string","nodeType":"ElementaryTypeName","src":"42662:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42661:28:36"},"returnParameters":{"id":38074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38073,"mutability":"mutable","name":"input","nameLocation":"42722:5:36","nodeType":"VariableDeclaration","scope":38075,"src":"42708:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38072,"name":"string","nodeType":"ElementaryTypeName","src":"42708:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42707:21:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38083,"nodeType":"FunctionDefinition","src":"42809:81:36","nodes":[],"documentation":{"id":38076,"nodeType":"StructuredDocumentation","src":"42735:69:36","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"42818:16:36","parameters":{"id":38079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38078,"mutability":"mutable","name":"promptText","nameLocation":"42851:10:36","nodeType":"VariableDeclaration","scope":38083,"src":"42835:26:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38077,"name":"string","nodeType":"ElementaryTypeName","src":"42835:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42834:28:36"},"returnParameters":{"id":38082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38083,"src":"42881:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38080,"name":"uint256","nodeType":"ElementaryTypeName","src":"42881:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42880:9:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38091,"nodeType":"FunctionDefinition","src":"42950:75:36","nodes":[],"documentation":{"id":38084,"nodeType":"StructuredDocumentation","src":"42896:49:36","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"42959:10:36","parameters":{"id":38087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38086,"mutability":"mutable","name":"promptText","nameLocation":"42986:10:36","nodeType":"VariableDeclaration","scope":38091,"src":"42970:26:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38085,"name":"string","nodeType":"ElementaryTypeName","src":"42970:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42969:28:36"},"returnParameters":{"id":38090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38091,"src":"43016:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38088,"name":"uint256","nodeType":"ElementaryTypeName","src":"43016:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43015:9:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38101,"nodeType":"FunctionDefinition","src":"43273:89:36","nodes":[],"documentation":{"id":38092,"nodeType":"StructuredDocumentation","src":"43031:237:36","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"43282:7:36","parameters":{"id":38095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38094,"mutability":"mutable","name":"path","nameLocation":"43306:4:36","nodeType":"VariableDeclaration","scope":38101,"src":"43290:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38093,"name":"string","nodeType":"ElementaryTypeName","src":"43290:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43289:22:36"},"returnParameters":{"id":38100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38099,"mutability":"mutable","name":"entries","nameLocation":"43353:7:36","nodeType":"VariableDeclaration","scope":38101,"src":"43335:25:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$36828_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":38097,"nodeType":"UserDefinedTypeName","pathNode":{"id":38096,"name":"DirEntry","nameLocations":["43335:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":36828,"src":"43335:8:36"},"referencedDeclaration":36828,"src":"43335:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$36828_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":38098,"nodeType":"ArrayTypeName","src":"43335:10:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$36828_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"43334:27:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38113,"nodeType":"FunctionDefinition","src":"43399:106:36","nodes":[],"documentation":{"id":38102,"nodeType":"StructuredDocumentation","src":"43368:26:36","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"43408:7:36","parameters":{"id":38107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38104,"mutability":"mutable","name":"path","nameLocation":"43432:4:36","nodeType":"VariableDeclaration","scope":38113,"src":"43416:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38103,"name":"string","nodeType":"ElementaryTypeName","src":"43416:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38106,"mutability":"mutable","name":"maxDepth","nameLocation":"43445:8:36","nodeType":"VariableDeclaration","scope":38113,"src":"43438:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":38105,"name":"uint64","nodeType":"ElementaryTypeName","src":"43438:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"43415:39:36"},"returnParameters":{"id":38112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38111,"mutability":"mutable","name":"entries","nameLocation":"43496:7:36","nodeType":"VariableDeclaration","scope":38113,"src":"43478:25:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$36828_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":38109,"nodeType":"UserDefinedTypeName","pathNode":{"id":38108,"name":"DirEntry","nameLocations":["43478:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":36828,"src":"43478:8:36"},"referencedDeclaration":36828,"src":"43478:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$36828_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":38110,"nodeType":"ArrayTypeName","src":"43478:10:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$36828_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"43477:27:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38127,"nodeType":"FunctionDefinition","src":"43542:148:36","nodes":[],"documentation":{"id":38114,"nodeType":"StructuredDocumentation","src":"43511:26:36","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"43551:7:36","parameters":{"id":38121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38116,"mutability":"mutable","name":"path","nameLocation":"43575:4:36","nodeType":"VariableDeclaration","scope":38127,"src":"43559:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38115,"name":"string","nodeType":"ElementaryTypeName","src":"43559:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38118,"mutability":"mutable","name":"maxDepth","nameLocation":"43588:8:36","nodeType":"VariableDeclaration","scope":38127,"src":"43581:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":38117,"name":"uint64","nodeType":"ElementaryTypeName","src":"43581:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":38120,"mutability":"mutable","name":"followLinks","nameLocation":"43603:11:36","nodeType":"VariableDeclaration","scope":38127,"src":"43598:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":38119,"name":"bool","nodeType":"ElementaryTypeName","src":"43598:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"43558:57:36"},"returnParameters":{"id":38126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38125,"mutability":"mutable","name":"entries","nameLocation":"43681:7:36","nodeType":"VariableDeclaration","scope":38127,"src":"43663:25:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$36828_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":38123,"nodeType":"UserDefinedTypeName","pathNode":{"id":38122,"name":"DirEntry","nameLocations":["43663:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":36828,"src":"43663:8:36"},"referencedDeclaration":36828,"src":"43663:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$36828_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":38124,"nodeType":"ArrayTypeName","src":"43663:10:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$36828_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"43662:27:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38135,"nodeType":"FunctionDefinition","src":"43788:83:36","nodes":[],"documentation":{"id":38128,"nodeType":"StructuredDocumentation","src":"43696:87:36","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"43797:8:36","parameters":{"id":38131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38130,"mutability":"mutable","name":"path","nameLocation":"43822:4:36","nodeType":"VariableDeclaration","scope":38135,"src":"43806:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38129,"name":"string","nodeType":"ElementaryTypeName","src":"43806:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43805:22:36"},"returnParameters":{"id":38134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38133,"mutability":"mutable","name":"data","nameLocation":"43865:4:36","nodeType":"VariableDeclaration","scope":38135,"src":"43851:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38132,"name":"string","nodeType":"ElementaryTypeName","src":"43851:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43850:20:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38143,"nodeType":"FunctionDefinition","src":"43969:88:36","nodes":[],"documentation":{"id":38136,"nodeType":"StructuredDocumentation","src":"43877:87:36","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"43978:14:36","parameters":{"id":38139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38138,"mutability":"mutable","name":"path","nameLocation":"44009:4:36","nodeType":"VariableDeclaration","scope":38143,"src":"43993:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38137,"name":"string","nodeType":"ElementaryTypeName","src":"43993:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43992:22:36"},"returnParameters":{"id":38142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38141,"mutability":"mutable","name":"data","nameLocation":"44051:4:36","nodeType":"VariableDeclaration","scope":38143,"src":"44038:17:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":38140,"name":"bytes","nodeType":"ElementaryTypeName","src":"44038:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"44037:19:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38151,"nodeType":"FunctionDefinition","src":"44106:83:36","nodes":[],"documentation":{"id":38144,"nodeType":"StructuredDocumentation","src":"44063:38:36","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"44115:8:36","parameters":{"id":38147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38146,"mutability":"mutable","name":"path","nameLocation":"44140:4:36","nodeType":"VariableDeclaration","scope":38151,"src":"44124:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38145,"name":"string","nodeType":"ElementaryTypeName","src":"44124:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44123:22:36"},"returnParameters":{"id":38150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38149,"mutability":"mutable","name":"line","nameLocation":"44183:4:36","nodeType":"VariableDeclaration","scope":38151,"src":"44169:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38148,"name":"string","nodeType":"ElementaryTypeName","src":"44169:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44168:20:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38159,"nodeType":"FunctionDefinition","src":"44448:93:36","nodes":[],"documentation":{"id":38152,"nodeType":"StructuredDocumentation","src":"44195:248:36","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"44457:8:36","parameters":{"id":38155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38154,"mutability":"mutable","name":"linkPath","nameLocation":"44482:8:36","nodeType":"VariableDeclaration","scope":38159,"src":"44466:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38153,"name":"string","nodeType":"ElementaryTypeName","src":"44466:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44465:26:36"},"returnParameters":{"id":38158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38157,"mutability":"mutable","name":"targetPath","nameLocation":"44529:10:36","nodeType":"VariableDeclaration","scope":38159,"src":"44515:24:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38156,"name":"string","nodeType":"ElementaryTypeName","src":"44515:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44514:26:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38167,"nodeType":"FunctionDefinition","src":"44931:66:36","nodes":[],"documentation":{"id":38160,"nodeType":"StructuredDocumentation","src":"44547:379:36","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"44940:9:36","parameters":{"id":38165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38162,"mutability":"mutable","name":"path","nameLocation":"44966:4:36","nodeType":"VariableDeclaration","scope":38167,"src":"44950:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38161,"name":"string","nodeType":"ElementaryTypeName","src":"44950:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38164,"mutability":"mutable","name":"recursive","nameLocation":"44977:9:36","nodeType":"VariableDeclaration","scope":38167,"src":"44972:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":38163,"name":"bool","nodeType":"ElementaryTypeName","src":"44972:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"44949:38:36"},"returnParameters":{"id":38166,"nodeType":"ParameterList","parameters":[],"src":"44996:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38173,"nodeType":"FunctionDefinition","src":"45330:51:36","nodes":[],"documentation":{"id":38168,"nodeType":"StructuredDocumentation","src":"45003:322:36","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"45339:10:36","parameters":{"id":38171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38170,"mutability":"mutable","name":"path","nameLocation":"45366:4:36","nodeType":"VariableDeclaration","scope":38173,"src":"45350:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38169,"name":"string","nodeType":"ElementaryTypeName","src":"45350:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45349:22:36"},"returnParameters":{"id":38172,"nodeType":"ParameterList","parameters":[],"src":"45380:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38183,"nodeType":"FunctionDefinition","src":"45488:91:36","nodes":[],"documentation":{"id":38174,"nodeType":"StructuredDocumentation","src":"45387:96:36","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"45497:6:36","parameters":{"id":38178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38177,"mutability":"mutable","name":"commandInput","nameLocation":"45522:12:36","nodeType":"VariableDeclaration","scope":38183,"src":"45504:30:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":38175,"name":"string","nodeType":"ElementaryTypeName","src":"45504:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":38176,"nodeType":"ArrayTypeName","src":"45504:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"45503:32:36"},"returnParameters":{"id":38182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38181,"mutability":"mutable","name":"result","nameLocation":"45571:6:36","nodeType":"VariableDeclaration","scope":38183,"src":"45554:23:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$36862_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":38180,"nodeType":"UserDefinedTypeName","pathNode":{"id":38179,"name":"FfiResult","nameLocations":["45554:9:36"],"nodeType":"IdentifierPath","referencedDeclaration":36862,"src":"45554:9:36"},"referencedDeclaration":36862,"src":"45554:9:36","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$36862_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"45553:25:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38189,"nodeType":"FunctionDefinition","src":"45644:65:36","nodes":[],"documentation":{"id":38184,"nodeType":"StructuredDocumentation","src":"45585:54:36","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"45653:8:36","parameters":{"id":38185,"nodeType":"ParameterList","parameters":[],"src":"45661:2:36"},"returnParameters":{"id":38188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38187,"mutability":"mutable","name":"milliseconds","nameLocation":"45695:12:36","nodeType":"VariableDeclaration","scope":38189,"src":"45687:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38186,"name":"uint256","nodeType":"ElementaryTypeName","src":"45687:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45686:22:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38197,"nodeType":"FunctionDefinition","src":"45878:72:36","nodes":[],"documentation":{"id":38190,"nodeType":"StructuredDocumentation","src":"45715:158:36","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"45887:9:36","parameters":{"id":38195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38192,"mutability":"mutable","name":"path","nameLocation":"45913:4:36","nodeType":"VariableDeclaration","scope":38197,"src":"45897:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38191,"name":"string","nodeType":"ElementaryTypeName","src":"45897:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38194,"mutability":"mutable","name":"data","nameLocation":"45935:4:36","nodeType":"VariableDeclaration","scope":38197,"src":"45919:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38193,"name":"string","nodeType":"ElementaryTypeName","src":"45919:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45896:44:36"},"returnParameters":{"id":38196,"nodeType":"ParameterList","parameters":[],"src":"45949:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38205,"nodeType":"FunctionDefinition","src":"46128:77:36","nodes":[],"documentation":{"id":38198,"nodeType":"StructuredDocumentation","src":"45956:167:36","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"46137:15:36","parameters":{"id":38203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38200,"mutability":"mutable","name":"path","nameLocation":"46169:4:36","nodeType":"VariableDeclaration","scope":38205,"src":"46153:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38199,"name":"string","nodeType":"ElementaryTypeName","src":"46153:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38202,"mutability":"mutable","name":"data","nameLocation":"46190:4:36","nodeType":"VariableDeclaration","scope":38205,"src":"46175:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":38201,"name":"bytes","nodeType":"ElementaryTypeName","src":"46175:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"46152:43:36"},"returnParameters":{"id":38204,"nodeType":"ParameterList","parameters":[],"src":"46204:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38213,"nodeType":"FunctionDefinition","src":"46326:72:36","nodes":[],"documentation":{"id":38206,"nodeType":"StructuredDocumentation","src":"46211:110:36","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"46335:9:36","parameters":{"id":38211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38208,"mutability":"mutable","name":"path","nameLocation":"46361:4:36","nodeType":"VariableDeclaration","scope":38213,"src":"46345:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38207,"name":"string","nodeType":"ElementaryTypeName","src":"46345:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38210,"mutability":"mutable","name":"data","nameLocation":"46383:4:36","nodeType":"VariableDeclaration","scope":38213,"src":"46367:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38209,"name":"string","nodeType":"ElementaryTypeName","src":"46367:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46344:44:36"},"returnParameters":{"id":38212,"nodeType":"ParameterList","parameters":[],"src":"46397:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38221,"nodeType":"FunctionDefinition","src":"46613:74:36","nodes":[],"documentation":{"id":38214,"nodeType":"StructuredDocumentation","src":"46438:170:36","text":"Gets the value for the key `key` from the currently active fork and parses it as `address`.\n Reverts if the key was not found or the value could not be parsed."},"functionSelector":"27b1efc0","implemented":false,"kind":"function","modifiers":[],"name":"forkAddress","nameLocation":"46622:11:36","parameters":{"id":38217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38216,"mutability":"mutable","name":"key","nameLocation":"46650:3:36","nodeType":"VariableDeclaration","scope":38221,"src":"46634:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38215,"name":"string","nodeType":"ElementaryTypeName","src":"46634:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46633:21:36"},"returnParameters":{"id":38220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38221,"src":"46678:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38218,"name":"address","nodeType":"ElementaryTypeName","src":"46678:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"46677:9:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38229,"nodeType":"FunctionDefinition","src":"46865:68:36","nodes":[],"documentation":{"id":38222,"nodeType":"StructuredDocumentation","src":"46693:167:36","text":"Gets the value for the key `key` from the currently active fork and parses it as `bool`.\n Reverts if the key was not found or the value could not be parsed."},"functionSelector":"c06e85dd","implemented":false,"kind":"function","modifiers":[],"name":"forkBool","nameLocation":"46874:8:36","parameters":{"id":38225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38224,"mutability":"mutable","name":"key","nameLocation":"46899:3:36","nodeType":"VariableDeclaration","scope":38229,"src":"46883:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38223,"name":"string","nodeType":"ElementaryTypeName","src":"46883:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46882:21:36"},"returnParameters":{"id":38228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38229,"src":"46927:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":38226,"name":"bool","nodeType":"ElementaryTypeName","src":"46927:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"46926:6:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38237,"nodeType":"FunctionDefinition","src":"47112:77:36","nodes":[],"documentation":{"id":38230,"nodeType":"StructuredDocumentation","src":"46939:168:36","text":"Gets the value for the key `key` from the currently active fork and parses it as `bytes`.\n Reverts if the key was not found or the value could not be parsed."},"functionSelector":"7c055631","implemented":false,"kind":"function","modifiers":[],"name":"forkBytes","nameLocation":"47121:9:36","parameters":{"id":38233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38232,"mutability":"mutable","name":"key","nameLocation":"47147:3:36","nodeType":"VariableDeclaration","scope":38237,"src":"47131:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38231,"name":"string","nodeType":"ElementaryTypeName","src":"47131:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47130:21:36"},"returnParameters":{"id":38236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38237,"src":"47175:12:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":38234,"name":"bytes","nodeType":"ElementaryTypeName","src":"47175:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"47174:14:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38245,"nodeType":"FunctionDefinition","src":"47370:74:36","nodes":[],"documentation":{"id":38238,"nodeType":"StructuredDocumentation","src":"47195:170:36","text":"Gets the value for the key `key` from the currently active fork and parses it as `bytes32`.\n Reverts if the key was not found or the value could not be parsed."},"functionSelector":"a912a3f4","implemented":false,"kind":"function","modifiers":[],"name":"forkBytes32","nameLocation":"47379:11:36","parameters":{"id":38241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38240,"mutability":"mutable","name":"key","nameLocation":"47407:3:36","nodeType":"VariableDeclaration","scope":38245,"src":"47391:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38239,"name":"string","nodeType":"ElementaryTypeName","src":"47391:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47390:21:36"},"returnParameters":{"id":38244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38245,"src":"47435:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":38242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47435:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"47434:9:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38251,"nodeType":"FunctionDefinition","src":"47513:59:36","nodes":[],"documentation":{"id":38246,"nodeType":"StructuredDocumentation","src":"47450:58:36","text":"Returns the chain name of the currently selected fork."},"functionSelector":"e6075d94","implemented":false,"kind":"function","modifiers":[],"name":"forkChain","nameLocation":"47522:9:36","parameters":{"id":38247,"nodeType":"ParameterList","parameters":[],"src":"47531:2:36"},"returnParameters":{"id":38250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38251,"src":"47557:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38248,"name":"string","nodeType":"ElementaryTypeName","src":"47557:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47556:15:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38261,"nodeType":"FunctionDefinition","src":"47761:94:36","nodes":[],"documentation":{"id":38252,"nodeType":"StructuredDocumentation","src":"47578:178:36","text":"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `address`.\n Reverts if the key was not found or the value could not be parsed."},"functionSelector":"5dc00a35","implemented":false,"kind":"function","modifiers":[],"name":"forkChainAddress","nameLocation":"47770:16:36","parameters":{"id":38257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38254,"mutability":"mutable","name":"chain","nameLocation":"47795:5:36","nodeType":"VariableDeclaration","scope":38261,"src":"47787:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38253,"name":"uint256","nodeType":"ElementaryTypeName","src":"47787:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":38256,"mutability":"mutable","name":"key","nameLocation":"47818:3:36","nodeType":"VariableDeclaration","scope":38261,"src":"47802:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38255,"name":"string","nodeType":"ElementaryTypeName","src":"47802:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47786:36:36"},"returnParameters":{"id":38260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38261,"src":"47846:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38258,"name":"address","nodeType":"ElementaryTypeName","src":"47846:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"47845:9:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38271,"nodeType":"FunctionDefinition","src":"48041:88:36","nodes":[],"documentation":{"id":38262,"nodeType":"StructuredDocumentation","src":"47861:175:36","text":"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `bool`.\n Reverts if the key was not found or the value could not be parsed."},"functionSelector":"8f947e16","implemented":false,"kind":"function","modifiers":[],"name":"forkChainBool","nameLocation":"48050:13:36","parameters":{"id":38267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38264,"mutability":"mutable","name":"chain","nameLocation":"48072:5:36","nodeType":"VariableDeclaration","scope":38271,"src":"48064:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38263,"name":"uint256","nodeType":"ElementaryTypeName","src":"48064:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":38266,"mutability":"mutable","name":"key","nameLocation":"48095:3:36","nodeType":"VariableDeclaration","scope":38271,"src":"48079:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38265,"name":"string","nodeType":"ElementaryTypeName","src":"48079:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48063:36:36"},"returnParameters":{"id":38270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38271,"src":"48123:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":38268,"name":"bool","nodeType":"ElementaryTypeName","src":"48123:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48122:6:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38281,"nodeType":"FunctionDefinition","src":"48316:97:36","nodes":[],"documentation":{"id":38272,"nodeType":"StructuredDocumentation","src":"48135:176:36","text":"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `bytes`.\n Reverts if the key was not found or the value could not be parsed."},"functionSelector":"0e73256d","implemented":false,"kind":"function","modifiers":[],"name":"forkChainBytes","nameLocation":"48325:14:36","parameters":{"id":38277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38274,"mutability":"mutable","name":"chain","nameLocation":"48348:5:36","nodeType":"VariableDeclaration","scope":38281,"src":"48340:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38273,"name":"uint256","nodeType":"ElementaryTypeName","src":"48340:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":38276,"mutability":"mutable","name":"key","nameLocation":"48371:3:36","nodeType":"VariableDeclaration","scope":38281,"src":"48355:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38275,"name":"string","nodeType":"ElementaryTypeName","src":"48355:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48339:36:36"},"returnParameters":{"id":38280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38281,"src":"48399:12:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":38278,"name":"bytes","nodeType":"ElementaryTypeName","src":"48399:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"48398:14:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38291,"nodeType":"FunctionDefinition","src":"48602:94:36","nodes":[],"documentation":{"id":38282,"nodeType":"StructuredDocumentation","src":"48419:178:36","text":"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `bytes32`.\n Reverts if the key was not found or the value could not be parsed."},"functionSelector":"05dd6d07","implemented":false,"kind":"function","modifiers":[],"name":"forkChainBytes32","nameLocation":"48611:16:36","parameters":{"id":38287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38284,"mutability":"mutable","name":"chain","nameLocation":"48636:5:36","nodeType":"VariableDeclaration","scope":38291,"src":"48628:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38283,"name":"uint256","nodeType":"ElementaryTypeName","src":"48628:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":38286,"mutability":"mutable","name":"key","nameLocation":"48659:3:36","nodeType":"VariableDeclaration","scope":38291,"src":"48643:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38285,"name":"string","nodeType":"ElementaryTypeName","src":"48643:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48627:36:36"},"returnParameters":{"id":38290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38291,"src":"48687:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":38288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48687:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"48686:9:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38297,"nodeType":"FunctionDefinition","src":"48763:55:36","nodes":[],"documentation":{"id":38292,"nodeType":"StructuredDocumentation","src":"48702:56:36","text":"Returns the chain id of the currently selected fork."},"functionSelector":"e6b661e2","implemented":false,"kind":"function","modifiers":[],"name":"forkChainId","nameLocation":"48772:11:36","parameters":{"id":38293,"nodeType":"ParameterList","parameters":[],"src":"48783:2:36"},"returnParameters":{"id":38296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38297,"src":"48809:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38294,"name":"uint256","nodeType":"ElementaryTypeName","src":"48809:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48808:9:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38304,"nodeType":"FunctionDefinition","src":"49001:65:36","nodes":[],"documentation":{"id":38298,"nodeType":"StructuredDocumentation","src":"48824:172:36","text":"Returns an array with the ids of all the configured fork chains.\n Note that the configured fork chains are subsections of the `[fork]` section of 'foundry.toml'."},"functionSelector":"04dc8feb","implemented":false,"kind":"function","modifiers":[],"name":"forkChainIds","nameLocation":"49010:12:36","parameters":{"id":38299,"nodeType":"ParameterList","parameters":[],"src":"49022:2:36"},"returnParameters":{"id":38303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38304,"src":"49048:16:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":38300,"name":"uint256","nodeType":"ElementaryTypeName","src":"49048:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":38301,"nodeType":"ArrayTypeName","src":"49048:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"49047:18:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38314,"nodeType":"FunctionDefinition","src":"49254:89:36","nodes":[],"documentation":{"id":38305,"nodeType":"StructuredDocumentation","src":"49072:177:36","text":"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `int256`.\n Reverts if the key was not found or the value could not be parsed."},"functionSelector":"c1ff595f","implemented":false,"kind":"function","modifiers":[],"name":"forkChainInt","nameLocation":"49263:12:36","parameters":{"id":38310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38307,"mutability":"mutable","name":"chain","nameLocation":"49284:5:36","nodeType":"VariableDeclaration","scope":38314,"src":"49276:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38306,"name":"uint256","nodeType":"ElementaryTypeName","src":"49276:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":38309,"mutability":"mutable","name":"key","nameLocation":"49307:3:36","nodeType":"VariableDeclaration","scope":38314,"src":"49291:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38308,"name":"string","nodeType":"ElementaryTypeName","src":"49291:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49275:36:36"},"returnParameters":{"id":38313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38314,"src":"49335:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":38311,"name":"int256","nodeType":"ElementaryTypeName","src":"49335:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"49334:8:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38322,"nodeType":"FunctionDefinition","src":"49591:75:36","nodes":[],"documentation":{"id":38315,"nodeType":"StructuredDocumentation","src":"49349:237:36","text":"Returns the rpc url of the corresponding chain id.\n By default, the rpc url of each fork is derived from the `[rpc_endpoints]`, unless\n the rpc config is specifically informed in the fork config for that specific chain."},"functionSelector":"a2c51cca","implemented":false,"kind":"function","modifiers":[],"name":"forkChainRpcUrl","nameLocation":"49600:15:36","parameters":{"id":38318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38317,"mutability":"mutable","name":"id","nameLocation":"49624:2:36","nodeType":"VariableDeclaration","scope":38322,"src":"49616:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38316,"name":"uint256","nodeType":"ElementaryTypeName","src":"49616:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49615:12:36"},"returnParameters":{"id":38321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38322,"src":"49651:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38319,"name":"string","nodeType":"ElementaryTypeName","src":"49651:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49650:15:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38332,"nodeType":"FunctionDefinition","src":"49854:99:36","nodes":[],"documentation":{"id":38323,"nodeType":"StructuredDocumentation","src":"49672:177:36","text":"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `string`.\n Reverts if the key was not found or the value could not be parsed."},"functionSelector":"24062881","implemented":false,"kind":"function","modifiers":[],"name":"forkChainString","nameLocation":"49863:15:36","parameters":{"id":38328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38325,"mutability":"mutable","name":"chain","nameLocation":"49887:5:36","nodeType":"VariableDeclaration","scope":38332,"src":"49879:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38324,"name":"uint256","nodeType":"ElementaryTypeName","src":"49879:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":38327,"mutability":"mutable","name":"key","nameLocation":"49910:3:36","nodeType":"VariableDeclaration","scope":38332,"src":"49894:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38326,"name":"string","nodeType":"ElementaryTypeName","src":"49894:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49878:36:36"},"returnParameters":{"id":38331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38332,"src":"49938:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38329,"name":"string","nodeType":"ElementaryTypeName","src":"49938:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49937:15:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38342,"nodeType":"FunctionDefinition","src":"50142:91:36","nodes":[],"documentation":{"id":38333,"nodeType":"StructuredDocumentation","src":"49959:178:36","text":"Gets the value for the key `key` from the fork config for chain `chain` and parses it as `uint256`.\n Reverts if the key was not found or the value could not be parsed."},"functionSelector":"2bfffa5c","implemented":false,"kind":"function","modifiers":[],"name":"forkChainUint","nameLocation":"50151:13:36","parameters":{"id":38338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38335,"mutability":"mutable","name":"chain","nameLocation":"50173:5:36","nodeType":"VariableDeclaration","scope":38342,"src":"50165:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38334,"name":"uint256","nodeType":"ElementaryTypeName","src":"50165:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":38337,"mutability":"mutable","name":"key","nameLocation":"50196:3:36","nodeType":"VariableDeclaration","scope":38342,"src":"50180:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38336,"name":"string","nodeType":"ElementaryTypeName","src":"50180:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50164:36:36"},"returnParameters":{"id":38341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38342,"src":"50224:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38339,"name":"uint256","nodeType":"ElementaryTypeName","src":"50224:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50223:9:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38349,"nodeType":"FunctionDefinition","src":"50417:62:36","nodes":[],"documentation":{"id":38343,"nodeType":"StructuredDocumentation","src":"50239:173:36","text":"Returns an array with the name of all the configured fork chains.\n Note that the configured fork chains are subsections of the `[fork]` section of 'foundry.toml'."},"functionSelector":"081f64cd","implemented":false,"kind":"function","modifiers":[],"name":"forkChains","nameLocation":"50426:10:36","parameters":{"id":38344,"nodeType":"ParameterList","parameters":[],"src":"50436:2:36"},"returnParameters":{"id":38348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38349,"src":"50462:15:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":38345,"name":"string","nodeType":"ElementaryTypeName","src":"50462:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":38346,"nodeType":"ArrayTypeName","src":"50462:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"50461:17:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38357,"nodeType":"FunctionDefinition","src":"50659:69:36","nodes":[],"documentation":{"id":38350,"nodeType":"StructuredDocumentation","src":"50485:169:36","text":"Gets the value for the key `key` from the currently active fork and parses it as `int256`.\n Reverts if the key was not found or the value could not be parsed."},"functionSelector":"4b326af0","implemented":false,"kind":"function","modifiers":[],"name":"forkInt","nameLocation":"50668:7:36","parameters":{"id":38353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38352,"mutability":"mutable","name":"key","nameLocation":"50692:3:36","nodeType":"VariableDeclaration","scope":38357,"src":"50676:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38351,"name":"string","nodeType":"ElementaryTypeName","src":"50676:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50675:21:36"},"returnParameters":{"id":38356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38357,"src":"50720:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":38354,"name":"int256","nodeType":"ElementaryTypeName","src":"50720:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"50719:8:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38363,"nodeType":"FunctionDefinition","src":"50977:60:36","nodes":[],"documentation":{"id":38358,"nodeType":"StructuredDocumentation","src":"50734:238:36","text":"Returns the rpc url of the currently selected fork.\n By default, the rpc url of each fork is derived from the `[rpc_endpoints]`, unless\n the rpc config is specifically informed in the fork config for that specific chain."},"functionSelector":"66d48d21","implemented":false,"kind":"function","modifiers":[],"name":"forkRpcUrl","nameLocation":"50986:10:36","parameters":{"id":38359,"nodeType":"ParameterList","parameters":[],"src":"50996:2:36"},"returnParameters":{"id":38362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38363,"src":"51022:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38360,"name":"string","nodeType":"ElementaryTypeName","src":"51022:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51021:15:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38371,"nodeType":"FunctionDefinition","src":"51217:79:36","nodes":[],"documentation":{"id":38364,"nodeType":"StructuredDocumentation","src":"51043:169:36","text":"Gets the value for the key `key` from the currently active fork and parses it as `string`.\n Reverts if the key was not found or the value could not be parsed."},"functionSelector":"d8525752","implemented":false,"kind":"function","modifiers":[],"name":"forkString","nameLocation":"51226:10:36","parameters":{"id":38367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38366,"mutability":"mutable","name":"key","nameLocation":"51253:3:36","nodeType":"VariableDeclaration","scope":38371,"src":"51237:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38365,"name":"string","nodeType":"ElementaryTypeName","src":"51237:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51236:21:36"},"returnParameters":{"id":38370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38371,"src":"51281:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38368,"name":"string","nodeType":"ElementaryTypeName","src":"51281:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51280:15:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38379,"nodeType":"FunctionDefinition","src":"51477:71:36","nodes":[],"documentation":{"id":38372,"nodeType":"StructuredDocumentation","src":"51302:170:36","text":"Gets the value for the key `key` from the currently active fork and parses it as `uint256`.\n Reverts if the key was not found or the value could not be parsed."},"functionSelector":"be0fe4a8","implemented":false,"kind":"function","modifiers":[],"name":"forkUint","nameLocation":"51486:8:36","parameters":{"id":38375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38374,"mutability":"mutable","name":"key","nameLocation":"51511:3:36","nodeType":"VariableDeclaration","scope":38379,"src":"51495:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38373,"name":"string","nodeType":"ElementaryTypeName","src":"51495:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51494:21:36"},"returnParameters":{"id":38378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38379,"src":"51539:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38376,"name":"uint256","nodeType":"ElementaryTypeName","src":"51539:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51538:9:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38389,"nodeType":"FunctionDefinition","src":"51634:95:36","nodes":[],"documentation":{"id":38380,"nodeType":"StructuredDocumentation","src":"51585:44:36","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"51643:13:36","parameters":{"id":38385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38382,"mutability":"mutable","name":"json","nameLocation":"51673:4:36","nodeType":"VariableDeclaration","scope":38389,"src":"51657:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38381,"name":"string","nodeType":"ElementaryTypeName","src":"51657:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38384,"mutability":"mutable","name":"key","nameLocation":"51695:3:36","nodeType":"VariableDeclaration","scope":38389,"src":"51679:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38383,"name":"string","nodeType":"ElementaryTypeName","src":"51679:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51656:43:36"},"returnParameters":{"id":38388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38389,"src":"51723:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":38386,"name":"bool","nodeType":"ElementaryTypeName","src":"51723:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"51722:6:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38399,"nodeType":"FunctionDefinition","src":"51810:101:36","nodes":[],"documentation":{"id":38390,"nodeType":"StructuredDocumentation","src":"51735:70:36","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"51819:16:36","parameters":{"id":38395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38392,"mutability":"mutable","name":"json","nameLocation":"51852:4:36","nodeType":"VariableDeclaration","scope":38399,"src":"51836:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38391,"name":"string","nodeType":"ElementaryTypeName","src":"51836:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38394,"mutability":"mutable","name":"key","nameLocation":"51874:3:36","nodeType":"VariableDeclaration","scope":38399,"src":"51858:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38393,"name":"string","nodeType":"ElementaryTypeName","src":"51858:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51835:43:36"},"returnParameters":{"id":38398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38399,"src":"51902:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38396,"name":"address","nodeType":"ElementaryTypeName","src":"51902:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"51901:9:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38410,"nodeType":"FunctionDefinition","src":"51994:139:36","nodes":[],"documentation":{"id":38400,"nodeType":"StructuredDocumentation","src":"51917:72:36","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"52003:21:36","parameters":{"id":38405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38402,"mutability":"mutable","name":"json","nameLocation":"52041:4:36","nodeType":"VariableDeclaration","scope":38410,"src":"52025:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38401,"name":"string","nodeType":"ElementaryTypeName","src":"52025:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38404,"mutability":"mutable","name":"key","nameLocation":"52063:3:36","nodeType":"VariableDeclaration","scope":38410,"src":"52047:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38403,"name":"string","nodeType":"ElementaryTypeName","src":"52047:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52024:43:36"},"returnParameters":{"id":38409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38410,"src":"52115:16:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":38406,"name":"address","nodeType":"ElementaryTypeName","src":"52115:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":38407,"nodeType":"ArrayTypeName","src":"52115:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"52114:18:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38420,"nodeType":"FunctionDefinition","src":"52211:95:36","nodes":[],"documentation":{"id":38411,"nodeType":"StructuredDocumentation","src":"52139:67:36","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"52220:13:36","parameters":{"id":38416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38413,"mutability":"mutable","name":"json","nameLocation":"52250:4:36","nodeType":"VariableDeclaration","scope":38420,"src":"52234:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38412,"name":"string","nodeType":"ElementaryTypeName","src":"52234:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38415,"mutability":"mutable","name":"key","nameLocation":"52272:3:36","nodeType":"VariableDeclaration","scope":38420,"src":"52256:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38414,"name":"string","nodeType":"ElementaryTypeName","src":"52256:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52233:43:36"},"returnParameters":{"id":38419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38420,"src":"52300:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":38417,"name":"bool","nodeType":"ElementaryTypeName","src":"52300:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"52299:6:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38431,"nodeType":"FunctionDefinition","src":"52386:109:36","nodes":[],"documentation":{"id":38421,"nodeType":"StructuredDocumentation","src":"52312:69:36","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"52395:18:36","parameters":{"id":38426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38423,"mutability":"mutable","name":"json","nameLocation":"52430:4:36","nodeType":"VariableDeclaration","scope":38431,"src":"52414:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38422,"name":"string","nodeType":"ElementaryTypeName","src":"52414:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38425,"mutability":"mutable","name":"key","nameLocation":"52452:3:36","nodeType":"VariableDeclaration","scope":38431,"src":"52436:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38424,"name":"string","nodeType":"ElementaryTypeName","src":"52436:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52413:43:36"},"returnParameters":{"id":38430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38431,"src":"52480:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":38427,"name":"bool","nodeType":"ElementaryTypeName","src":"52480:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":38428,"nodeType":"ArrayTypeName","src":"52480:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"52479:15:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38441,"nodeType":"FunctionDefinition","src":"52574:104:36","nodes":[],"documentation":{"id":38432,"nodeType":"StructuredDocumentation","src":"52501:68:36","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"52583:14:36","parameters":{"id":38437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38434,"mutability":"mutable","name":"json","nameLocation":"52614:4:36","nodeType":"VariableDeclaration","scope":38441,"src":"52598:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38433,"name":"string","nodeType":"ElementaryTypeName","src":"52598:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38436,"mutability":"mutable","name":"key","nameLocation":"52636:3:36","nodeType":"VariableDeclaration","scope":38441,"src":"52620:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38435,"name":"string","nodeType":"ElementaryTypeName","src":"52620:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52597:43:36"},"returnParameters":{"id":38440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38441,"src":"52664:12:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":38438,"name":"bytes","nodeType":"ElementaryTypeName","src":"52664:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"52663:14:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38451,"nodeType":"FunctionDefinition","src":"52759:101:36","nodes":[],"documentation":{"id":38442,"nodeType":"StructuredDocumentation","src":"52684:70:36","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"52768:16:36","parameters":{"id":38447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38444,"mutability":"mutable","name":"json","nameLocation":"52801:4:36","nodeType":"VariableDeclaration","scope":38451,"src":"52785:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38443,"name":"string","nodeType":"ElementaryTypeName","src":"52785:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38446,"mutability":"mutable","name":"key","nameLocation":"52823:3:36","nodeType":"VariableDeclaration","scope":38451,"src":"52807:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38445,"name":"string","nodeType":"ElementaryTypeName","src":"52807:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52784:43:36"},"returnParameters":{"id":38450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38451,"src":"52851:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":38448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"52851:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"52850:9:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38462,"nodeType":"FunctionDefinition","src":"52943:139:36","nodes":[],"documentation":{"id":38452,"nodeType":"StructuredDocumentation","src":"52866:72:36","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"52952:21:36","parameters":{"id":38457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38454,"mutability":"mutable","name":"json","nameLocation":"52990:4:36","nodeType":"VariableDeclaration","scope":38462,"src":"52974:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38453,"name":"string","nodeType":"ElementaryTypeName","src":"52974:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38456,"mutability":"mutable","name":"key","nameLocation":"53012:3:36","nodeType":"VariableDeclaration","scope":38462,"src":"52996:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38455,"name":"string","nodeType":"ElementaryTypeName","src":"52996:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52973:43:36"},"returnParameters":{"id":38461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38462,"src":"53064:16:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":38458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53064:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":38459,"nodeType":"ArrayTypeName","src":"53064:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"53063:18:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38473,"nodeType":"FunctionDefinition","src":"53163:111:36","nodes":[],"documentation":{"id":38463,"nodeType":"StructuredDocumentation","src":"53088:70:36","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"53172:19:36","parameters":{"id":38468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38465,"mutability":"mutable","name":"json","nameLocation":"53208:4:36","nodeType":"VariableDeclaration","scope":38473,"src":"53192:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38464,"name":"string","nodeType":"ElementaryTypeName","src":"53192:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38467,"mutability":"mutable","name":"key","nameLocation":"53230:3:36","nodeType":"VariableDeclaration","scope":38473,"src":"53214:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38466,"name":"string","nodeType":"ElementaryTypeName","src":"53214:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53191:43:36"},"returnParameters":{"id":38472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38473,"src":"53258:14:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":38469,"name":"bytes","nodeType":"ElementaryTypeName","src":"53258:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":38470,"nodeType":"ArrayTypeName","src":"53258:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"53257:16:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38483,"nodeType":"FunctionDefinition","src":"53354:96:36","nodes":[],"documentation":{"id":38474,"nodeType":"StructuredDocumentation","src":"53280:69:36","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"53363:12:36","parameters":{"id":38479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38476,"mutability":"mutable","name":"json","nameLocation":"53392:4:36","nodeType":"VariableDeclaration","scope":38483,"src":"53376:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38475,"name":"string","nodeType":"ElementaryTypeName","src":"53376:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38478,"mutability":"mutable","name":"key","nameLocation":"53414:3:36","nodeType":"VariableDeclaration","scope":38483,"src":"53398:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38477,"name":"string","nodeType":"ElementaryTypeName","src":"53398:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53375:43:36"},"returnParameters":{"id":38482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38483,"src":"53442:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":38480,"name":"int256","nodeType":"ElementaryTypeName","src":"53442:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"53441:8:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38494,"nodeType":"FunctionDefinition","src":"53532:110:36","nodes":[],"documentation":{"id":38484,"nodeType":"StructuredDocumentation","src":"53456:71:36","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"53541:17:36","parameters":{"id":38489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38486,"mutability":"mutable","name":"json","nameLocation":"53575:4:36","nodeType":"VariableDeclaration","scope":38494,"src":"53559:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38485,"name":"string","nodeType":"ElementaryTypeName","src":"53559:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38488,"mutability":"mutable","name":"key","nameLocation":"53597:3:36","nodeType":"VariableDeclaration","scope":38494,"src":"53581:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38487,"name":"string","nodeType":"ElementaryTypeName","src":"53581:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53558:43:36"},"returnParameters":{"id":38493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38494,"src":"53625:15:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":38490,"name":"int256","nodeType":"ElementaryTypeName","src":"53625:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":38491,"nodeType":"ArrayTypeName","src":"53625:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"53624:17:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38505,"nodeType":"FunctionDefinition","src":"53707:111:36","nodes":[],"documentation":{"id":38495,"nodeType":"StructuredDocumentation","src":"53648:54:36","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"53716:13:36","parameters":{"id":38500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38497,"mutability":"mutable","name":"json","nameLocation":"53746:4:36","nodeType":"VariableDeclaration","scope":38505,"src":"53730:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38496,"name":"string","nodeType":"ElementaryTypeName","src":"53730:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38499,"mutability":"mutable","name":"key","nameLocation":"53768:3:36","nodeType":"VariableDeclaration","scope":38505,"src":"53752:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38498,"name":"string","nodeType":"ElementaryTypeName","src":"53752:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53729:43:36"},"returnParameters":{"id":38504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38503,"mutability":"mutable","name":"keys","nameLocation":"53812:4:36","nodeType":"VariableDeclaration","scope":38505,"src":"53796:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":38501,"name":"string","nodeType":"ElementaryTypeName","src":"53796:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":38502,"nodeType":"ArrayTypeName","src":"53796:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"53795:22:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38515,"nodeType":"FunctionDefinition","src":"53898:106:36","nodes":[],"documentation":{"id":38506,"nodeType":"StructuredDocumentation","src":"53824:69:36","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"53907:15:36","parameters":{"id":38511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38508,"mutability":"mutable","name":"json","nameLocation":"53939:4:36","nodeType":"VariableDeclaration","scope":38515,"src":"53923:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38507,"name":"string","nodeType":"ElementaryTypeName","src":"53923:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38510,"mutability":"mutable","name":"key","nameLocation":"53961:3:36","nodeType":"VariableDeclaration","scope":38515,"src":"53945:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38509,"name":"string","nodeType":"ElementaryTypeName","src":"53945:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53922:43:36"},"returnParameters":{"id":38514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38515,"src":"53989:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38512,"name":"string","nodeType":"ElementaryTypeName","src":"53989:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53988:15:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38526,"nodeType":"FunctionDefinition","src":"54086:113:36","nodes":[],"documentation":{"id":38516,"nodeType":"StructuredDocumentation","src":"54010:71:36","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"54095:20:36","parameters":{"id":38521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38518,"mutability":"mutable","name":"json","nameLocation":"54132:4:36","nodeType":"VariableDeclaration","scope":38526,"src":"54116:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38517,"name":"string","nodeType":"ElementaryTypeName","src":"54116:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38520,"mutability":"mutable","name":"key","nameLocation":"54154:3:36","nodeType":"VariableDeclaration","scope":38526,"src":"54138:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38519,"name":"string","nodeType":"ElementaryTypeName","src":"54138:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54115:43:36"},"returnParameters":{"id":38525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38526,"src":"54182:15:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":38522,"name":"string","nodeType":"ElementaryTypeName","src":"54182:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":38523,"nodeType":"ArrayTypeName","src":"54182:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"54181:17:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38538,"nodeType":"FunctionDefinition","src":"54316:165:36","nodes":[],"documentation":{"id":38527,"nodeType":"StructuredDocumentation","src":"54205:106:36","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"54325:18:36","parameters":{"id":38534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38529,"mutability":"mutable","name":"json","nameLocation":"54360:4:36","nodeType":"VariableDeclaration","scope":38538,"src":"54344:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38528,"name":"string","nodeType":"ElementaryTypeName","src":"54344:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38531,"mutability":"mutable","name":"key","nameLocation":"54382:3:36","nodeType":"VariableDeclaration","scope":38538,"src":"54366:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38530,"name":"string","nodeType":"ElementaryTypeName","src":"54366:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38533,"mutability":"mutable","name":"typeDescription","nameLocation":"54403:15:36","nodeType":"VariableDeclaration","scope":38538,"src":"54387:31:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38532,"name":"string","nodeType":"ElementaryTypeName","src":"54387:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54343:76:36"},"returnParameters":{"id":38537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38538,"src":"54467:12:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":38535,"name":"bytes","nodeType":"ElementaryTypeName","src":"54467:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"54466:14:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38548,"nodeType":"FunctionDefinition","src":"54583:139:36","nodes":[],"documentation":{"id":38539,"nodeType":"StructuredDocumentation","src":"54487:91:36","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"54592:13:36","parameters":{"id":38544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38541,"mutability":"mutable","name":"json","nameLocation":"54622:4:36","nodeType":"VariableDeclaration","scope":38548,"src":"54606:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38540,"name":"string","nodeType":"ElementaryTypeName","src":"54606:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38543,"mutability":"mutable","name":"typeDescription","nameLocation":"54644:15:36","nodeType":"VariableDeclaration","scope":38548,"src":"54628:31:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38542,"name":"string","nodeType":"ElementaryTypeName","src":"54628:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54605:55:36"},"returnParameters":{"id":38547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38548,"src":"54708:12:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":38545,"name":"bytes","nodeType":"ElementaryTypeName","src":"54708:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"54707:14:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38560,"nodeType":"FunctionDefinition","src":"54833:160:36","nodes":[],"documentation":{"id":38549,"nodeType":"StructuredDocumentation","src":"54728:100:36","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"54842:13:36","parameters":{"id":38556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38551,"mutability":"mutable","name":"json","nameLocation":"54872:4:36","nodeType":"VariableDeclaration","scope":38560,"src":"54856:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38550,"name":"string","nodeType":"ElementaryTypeName","src":"54856:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38553,"mutability":"mutable","name":"key","nameLocation":"54894:3:36","nodeType":"VariableDeclaration","scope":38560,"src":"54878:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38552,"name":"string","nodeType":"ElementaryTypeName","src":"54878:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38555,"mutability":"mutable","name":"typeDescription","nameLocation":"54915:15:36","nodeType":"VariableDeclaration","scope":38560,"src":"54899:31:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38554,"name":"string","nodeType":"ElementaryTypeName","src":"54899:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54855:76:36"},"returnParameters":{"id":38559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38560,"src":"54979:12:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":38557,"name":"bytes","nodeType":"ElementaryTypeName","src":"54979:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"54978:14:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38570,"nodeType":"FunctionDefinition","src":"55074:98:36","nodes":[],"documentation":{"id":38561,"nodeType":"StructuredDocumentation","src":"54999:70:36","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"55083:13:36","parameters":{"id":38566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38563,"mutability":"mutable","name":"json","nameLocation":"55113:4:36","nodeType":"VariableDeclaration","scope":38570,"src":"55097:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38562,"name":"string","nodeType":"ElementaryTypeName","src":"55097:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38565,"mutability":"mutable","name":"key","nameLocation":"55135:3:36","nodeType":"VariableDeclaration","scope":38570,"src":"55119:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38564,"name":"string","nodeType":"ElementaryTypeName","src":"55119:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55096:43:36"},"returnParameters":{"id":38569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38570,"src":"55163:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38567,"name":"uint256","nodeType":"ElementaryTypeName","src":"55163:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55162:9:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38581,"nodeType":"FunctionDefinition","src":"55255:112:36","nodes":[],"documentation":{"id":38571,"nodeType":"StructuredDocumentation","src":"55178:72:36","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"55264:18:36","parameters":{"id":38576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38573,"mutability":"mutable","name":"json","nameLocation":"55299:4:36","nodeType":"VariableDeclaration","scope":38581,"src":"55283:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38572,"name":"string","nodeType":"ElementaryTypeName","src":"55283:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38575,"mutability":"mutable","name":"key","nameLocation":"55321:3:36","nodeType":"VariableDeclaration","scope":38581,"src":"55305:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38574,"name":"string","nodeType":"ElementaryTypeName","src":"55305:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55282:43:36"},"returnParameters":{"id":38580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38581,"src":"55349:16:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":38577,"name":"uint256","nodeType":"ElementaryTypeName","src":"55349:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":38578,"nodeType":"ArrayTypeName","src":"55349:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"55348:18:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38589,"nodeType":"FunctionDefinition","src":"55408:93:36","nodes":[],"documentation":{"id":38582,"nodeType":"StructuredDocumentation","src":"55373:30:36","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"55417:9:36","parameters":{"id":38585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38584,"mutability":"mutable","name":"json","nameLocation":"55443:4:36","nodeType":"VariableDeclaration","scope":38589,"src":"55427:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38583,"name":"string","nodeType":"ElementaryTypeName","src":"55427:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55426:22:36"},"returnParameters":{"id":38588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38587,"mutability":"mutable","name":"abiEncodedData","nameLocation":"55485:14:36","nodeType":"VariableDeclaration","scope":38589,"src":"55472:27:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":38586,"name":"bytes","nodeType":"ElementaryTypeName","src":"55472:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"55471:29:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38599,"nodeType":"FunctionDefinition","src":"55551:114:36","nodes":[],"documentation":{"id":38590,"nodeType":"StructuredDocumentation","src":"55507:39:36","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"55560:9:36","parameters":{"id":38595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38592,"mutability":"mutable","name":"json","nameLocation":"55586:4:36","nodeType":"VariableDeclaration","scope":38599,"src":"55570:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38591,"name":"string","nodeType":"ElementaryTypeName","src":"55570:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38594,"mutability":"mutable","name":"key","nameLocation":"55608:3:36","nodeType":"VariableDeclaration","scope":38599,"src":"55592:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38593,"name":"string","nodeType":"ElementaryTypeName","src":"55592:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55569:43:36"},"returnParameters":{"id":38598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38597,"mutability":"mutable","name":"abiEncodedData","nameLocation":"55649:14:36","nodeType":"VariableDeclaration","scope":38599,"src":"55636:27:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":38596,"name":"bytes","nodeType":"ElementaryTypeName","src":"55636:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"55635:29:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38611,"nodeType":"FunctionDefinition","src":"55700:148:36","nodes":[],"documentation":{"id":38600,"nodeType":"StructuredDocumentation","src":"55671:24:36","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"55709:16:36","parameters":{"id":38607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38602,"mutability":"mutable","name":"objectKey","nameLocation":"55742:9:36","nodeType":"VariableDeclaration","scope":38611,"src":"55726:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38601,"name":"string","nodeType":"ElementaryTypeName","src":"55726:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38604,"mutability":"mutable","name":"valueKey","nameLocation":"55769:8:36","nodeType":"VariableDeclaration","scope":38611,"src":"55753:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38603,"name":"string","nodeType":"ElementaryTypeName","src":"55753:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38606,"mutability":"mutable","name":"value","nameLocation":"55787:5:36","nodeType":"VariableDeclaration","scope":38611,"src":"55779:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38605,"name":"address","nodeType":"ElementaryTypeName","src":"55779:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"55725:68:36"},"returnParameters":{"id":38610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38609,"mutability":"mutable","name":"json","nameLocation":"55842:4:36","nodeType":"VariableDeclaration","scope":38611,"src":"55828:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38608,"name":"string","nodeType":"ElementaryTypeName","src":"55828:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55827:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38624,"nodeType":"FunctionDefinition","src":"55883:160:36","nodes":[],"documentation":{"id":38612,"nodeType":"StructuredDocumentation","src":"55854:24:36","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"55892:16:36","parameters":{"id":38620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38614,"mutability":"mutable","name":"objectKey","nameLocation":"55925:9:36","nodeType":"VariableDeclaration","scope":38624,"src":"55909:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38613,"name":"string","nodeType":"ElementaryTypeName","src":"55909:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38616,"mutability":"mutable","name":"valueKey","nameLocation":"55952:8:36","nodeType":"VariableDeclaration","scope":38624,"src":"55936:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38615,"name":"string","nodeType":"ElementaryTypeName","src":"55936:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38619,"mutability":"mutable","name":"values","nameLocation":"55981:6:36","nodeType":"VariableDeclaration","scope":38624,"src":"55962:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":38617,"name":"address","nodeType":"ElementaryTypeName","src":"55962:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":38618,"nodeType":"ArrayTypeName","src":"55962:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"55908:80:36"},"returnParameters":{"id":38623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38622,"mutability":"mutable","name":"json","nameLocation":"56037:4:36","nodeType":"VariableDeclaration","scope":38624,"src":"56023:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38621,"name":"string","nodeType":"ElementaryTypeName","src":"56023:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56022:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38636,"nodeType":"FunctionDefinition","src":"56078:142:36","nodes":[],"documentation":{"id":38625,"nodeType":"StructuredDocumentation","src":"56049:24:36","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"56087:13:36","parameters":{"id":38632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38627,"mutability":"mutable","name":"objectKey","nameLocation":"56117:9:36","nodeType":"VariableDeclaration","scope":38636,"src":"56101:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38626,"name":"string","nodeType":"ElementaryTypeName","src":"56101:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38629,"mutability":"mutable","name":"valueKey","nameLocation":"56144:8:36","nodeType":"VariableDeclaration","scope":38636,"src":"56128:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38628,"name":"string","nodeType":"ElementaryTypeName","src":"56128:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38631,"mutability":"mutable","name":"value","nameLocation":"56159:5:36","nodeType":"VariableDeclaration","scope":38636,"src":"56154:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":38630,"name":"bool","nodeType":"ElementaryTypeName","src":"56154:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"56100:65:36"},"returnParameters":{"id":38635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38634,"mutability":"mutable","name":"json","nameLocation":"56214:4:36","nodeType":"VariableDeclaration","scope":38636,"src":"56200:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38633,"name":"string","nodeType":"ElementaryTypeName","src":"56200:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56199:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38649,"nodeType":"FunctionDefinition","src":"56255:154:36","nodes":[],"documentation":{"id":38637,"nodeType":"StructuredDocumentation","src":"56226:24:36","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"56264:13:36","parameters":{"id":38645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38639,"mutability":"mutable","name":"objectKey","nameLocation":"56294:9:36","nodeType":"VariableDeclaration","scope":38649,"src":"56278:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38638,"name":"string","nodeType":"ElementaryTypeName","src":"56278:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38641,"mutability":"mutable","name":"valueKey","nameLocation":"56321:8:36","nodeType":"VariableDeclaration","scope":38649,"src":"56305:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38640,"name":"string","nodeType":"ElementaryTypeName","src":"56305:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38644,"mutability":"mutable","name":"values","nameLocation":"56347:6:36","nodeType":"VariableDeclaration","scope":38649,"src":"56331:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":38642,"name":"bool","nodeType":"ElementaryTypeName","src":"56331:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":38643,"nodeType":"ArrayTypeName","src":"56331:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"56277:77:36"},"returnParameters":{"id":38648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38647,"mutability":"mutable","name":"json","nameLocation":"56403:4:36","nodeType":"VariableDeclaration","scope":38649,"src":"56389:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38646,"name":"string","nodeType":"ElementaryTypeName","src":"56389:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56388:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38661,"nodeType":"FunctionDefinition","src":"56444:148:36","nodes":[],"documentation":{"id":38650,"nodeType":"StructuredDocumentation","src":"56415:24:36","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"56453:16:36","parameters":{"id":38657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38652,"mutability":"mutable","name":"objectKey","nameLocation":"56486:9:36","nodeType":"VariableDeclaration","scope":38661,"src":"56470:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38651,"name":"string","nodeType":"ElementaryTypeName","src":"56470:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38654,"mutability":"mutable","name":"valueKey","nameLocation":"56513:8:36","nodeType":"VariableDeclaration","scope":38661,"src":"56497:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38653,"name":"string","nodeType":"ElementaryTypeName","src":"56497:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38656,"mutability":"mutable","name":"value","nameLocation":"56531:5:36","nodeType":"VariableDeclaration","scope":38661,"src":"56523:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":38655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"56523:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"56469:68:36"},"returnParameters":{"id":38660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38659,"mutability":"mutable","name":"json","nameLocation":"56586:4:36","nodeType":"VariableDeclaration","scope":38661,"src":"56572:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38658,"name":"string","nodeType":"ElementaryTypeName","src":"56572:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56571:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38674,"nodeType":"FunctionDefinition","src":"56627:160:36","nodes":[],"documentation":{"id":38662,"nodeType":"StructuredDocumentation","src":"56598:24:36","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"56636:16:36","parameters":{"id":38670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38664,"mutability":"mutable","name":"objectKey","nameLocation":"56669:9:36","nodeType":"VariableDeclaration","scope":38674,"src":"56653:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38663,"name":"string","nodeType":"ElementaryTypeName","src":"56653:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38666,"mutability":"mutable","name":"valueKey","nameLocation":"56696:8:36","nodeType":"VariableDeclaration","scope":38674,"src":"56680:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38665,"name":"string","nodeType":"ElementaryTypeName","src":"56680:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38669,"mutability":"mutable","name":"values","nameLocation":"56725:6:36","nodeType":"VariableDeclaration","scope":38674,"src":"56706:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":38667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"56706:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":38668,"nodeType":"ArrayTypeName","src":"56706:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"56652:80:36"},"returnParameters":{"id":38673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38672,"mutability":"mutable","name":"json","nameLocation":"56781:4:36","nodeType":"VariableDeclaration","scope":38674,"src":"56767:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38671,"name":"string","nodeType":"ElementaryTypeName","src":"56767:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56766:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38686,"nodeType":"FunctionDefinition","src":"56822:153:36","nodes":[],"documentation":{"id":38675,"nodeType":"StructuredDocumentation","src":"56793:24:36","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"56831:14:36","parameters":{"id":38682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38677,"mutability":"mutable","name":"objectKey","nameLocation":"56862:9:36","nodeType":"VariableDeclaration","scope":38686,"src":"56846:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38676,"name":"string","nodeType":"ElementaryTypeName","src":"56846:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38679,"mutability":"mutable","name":"valueKey","nameLocation":"56889:8:36","nodeType":"VariableDeclaration","scope":38686,"src":"56873:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38678,"name":"string","nodeType":"ElementaryTypeName","src":"56873:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38681,"mutability":"mutable","name":"value","nameLocation":"56914:5:36","nodeType":"VariableDeclaration","scope":38686,"src":"56899:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":38680,"name":"bytes","nodeType":"ElementaryTypeName","src":"56899:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"56845:75:36"},"returnParameters":{"id":38685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38684,"mutability":"mutable","name":"json","nameLocation":"56969:4:36","nodeType":"VariableDeclaration","scope":38686,"src":"56955:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38683,"name":"string","nodeType":"ElementaryTypeName","src":"56955:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56954:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38699,"nodeType":"FunctionDefinition","src":"57010:156:36","nodes":[],"documentation":{"id":38687,"nodeType":"StructuredDocumentation","src":"56981:24:36","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"57019:14:36","parameters":{"id":38695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38689,"mutability":"mutable","name":"objectKey","nameLocation":"57050:9:36","nodeType":"VariableDeclaration","scope":38699,"src":"57034:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38688,"name":"string","nodeType":"ElementaryTypeName","src":"57034:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38691,"mutability":"mutable","name":"valueKey","nameLocation":"57077:8:36","nodeType":"VariableDeclaration","scope":38699,"src":"57061:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38690,"name":"string","nodeType":"ElementaryTypeName","src":"57061:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38694,"mutability":"mutable","name":"values","nameLocation":"57104:6:36","nodeType":"VariableDeclaration","scope":38699,"src":"57087:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":38692,"name":"bytes","nodeType":"ElementaryTypeName","src":"57087:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":38693,"nodeType":"ArrayTypeName","src":"57087:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"57033:78:36"},"returnParameters":{"id":38698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38697,"mutability":"mutable","name":"json","nameLocation":"57160:4:36","nodeType":"VariableDeclaration","scope":38699,"src":"57146:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38696,"name":"string","nodeType":"ElementaryTypeName","src":"57146:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57145:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38711,"nodeType":"FunctionDefinition","src":"57201:143:36","nodes":[],"documentation":{"id":38700,"nodeType":"StructuredDocumentation","src":"57172:24:36","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"57210:12:36","parameters":{"id":38707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38702,"mutability":"mutable","name":"objectKey","nameLocation":"57239:9:36","nodeType":"VariableDeclaration","scope":38711,"src":"57223:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38701,"name":"string","nodeType":"ElementaryTypeName","src":"57223:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38704,"mutability":"mutable","name":"valueKey","nameLocation":"57266:8:36","nodeType":"VariableDeclaration","scope":38711,"src":"57250:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38703,"name":"string","nodeType":"ElementaryTypeName","src":"57250:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38706,"mutability":"mutable","name":"value","nameLocation":"57283:5:36","nodeType":"VariableDeclaration","scope":38711,"src":"57276:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":38705,"name":"int256","nodeType":"ElementaryTypeName","src":"57276:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"57222:67:36"},"returnParameters":{"id":38710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38709,"mutability":"mutable","name":"json","nameLocation":"57338:4:36","nodeType":"VariableDeclaration","scope":38711,"src":"57324:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38708,"name":"string","nodeType":"ElementaryTypeName","src":"57324:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57323:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38724,"nodeType":"FunctionDefinition","src":"57379:155:36","nodes":[],"documentation":{"id":38712,"nodeType":"StructuredDocumentation","src":"57350:24:36","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"57388:12:36","parameters":{"id":38720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38714,"mutability":"mutable","name":"objectKey","nameLocation":"57417:9:36","nodeType":"VariableDeclaration","scope":38724,"src":"57401:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38713,"name":"string","nodeType":"ElementaryTypeName","src":"57401:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38716,"mutability":"mutable","name":"valueKey","nameLocation":"57444:8:36","nodeType":"VariableDeclaration","scope":38724,"src":"57428:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38715,"name":"string","nodeType":"ElementaryTypeName","src":"57428:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38719,"mutability":"mutable","name":"values","nameLocation":"57472:6:36","nodeType":"VariableDeclaration","scope":38724,"src":"57454:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":38717,"name":"int256","nodeType":"ElementaryTypeName","src":"57454:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":38718,"nodeType":"ArrayTypeName","src":"57454:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"57400:79:36"},"returnParameters":{"id":38723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38722,"mutability":"mutable","name":"json","nameLocation":"57528:4:36","nodeType":"VariableDeclaration","scope":38724,"src":"57514:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38721,"name":"string","nodeType":"ElementaryTypeName","src":"57514:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57513:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38734,"nodeType":"FunctionDefinition","src":"57731:111:36","nodes":[],"documentation":{"id":38725,"nodeType":"StructuredDocumentation","src":"57540:186:36","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"57740:13:36","parameters":{"id":38730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38727,"mutability":"mutable","name":"objectKey","nameLocation":"57770:9:36","nodeType":"VariableDeclaration","scope":38734,"src":"57754:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38726,"name":"string","nodeType":"ElementaryTypeName","src":"57754:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38729,"mutability":"mutable","name":"value","nameLocation":"57797:5:36","nodeType":"VariableDeclaration","scope":38734,"src":"57781:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38728,"name":"string","nodeType":"ElementaryTypeName","src":"57781:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57753:50:36"},"returnParameters":{"id":38733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38732,"mutability":"mutable","name":"json","nameLocation":"57836:4:36","nodeType":"VariableDeclaration","scope":38734,"src":"57822:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38731,"name":"string","nodeType":"ElementaryTypeName","src":"57822:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57821:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38744,"nodeType":"FunctionDefinition","src":"57877:149:36","nodes":[],"documentation":{"id":38735,"nodeType":"StructuredDocumentation","src":"57848:24:36","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"57886:17:36","parameters":{"id":38740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38737,"mutability":"mutable","name":"typeDescription","nameLocation":"57920:15:36","nodeType":"VariableDeclaration","scope":38744,"src":"57904:31:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38736,"name":"string","nodeType":"ElementaryTypeName","src":"57904:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38739,"mutability":"mutable","name":"value","nameLocation":"57952:5:36","nodeType":"VariableDeclaration","scope":38744,"src":"57937:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":38738,"name":"bytes","nodeType":"ElementaryTypeName","src":"57937:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"57903:55:36"},"returnParameters":{"id":38743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38742,"mutability":"mutable","name":"json","nameLocation":"58020:4:36","nodeType":"VariableDeclaration","scope":38744,"src":"58006:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38741,"name":"string","nodeType":"ElementaryTypeName","src":"58006:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58005:20:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":38758,"nodeType":"FunctionDefinition","src":"58061:211:36","nodes":[],"documentation":{"id":38745,"nodeType":"StructuredDocumentation","src":"58032:24:36","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"58070:17:36","parameters":{"id":38754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38747,"mutability":"mutable","name":"objectKey","nameLocation":"58113:9:36","nodeType":"VariableDeclaration","scope":38758,"src":"58097:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38746,"name":"string","nodeType":"ElementaryTypeName","src":"58097:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38749,"mutability":"mutable","name":"valueKey","nameLocation":"58148:8:36","nodeType":"VariableDeclaration","scope":38758,"src":"58132:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38748,"name":"string","nodeType":"ElementaryTypeName","src":"58132:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38751,"mutability":"mutable","name":"typeDescription","nameLocation":"58182:15:36","nodeType":"VariableDeclaration","scope":38758,"src":"58166:31:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38750,"name":"string","nodeType":"ElementaryTypeName","src":"58166:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38753,"mutability":"mutable","name":"value","nameLocation":"58222:5:36","nodeType":"VariableDeclaration","scope":38758,"src":"58207:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":38752,"name":"bytes","nodeType":"ElementaryTypeName","src":"58207:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"58087:146:36"},"returnParameters":{"id":38757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38756,"mutability":"mutable","name":"json","nameLocation":"58266:4:36","nodeType":"VariableDeclaration","scope":38758,"src":"58252:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38755,"name":"string","nodeType":"ElementaryTypeName","src":"58252:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58251:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38770,"nodeType":"FunctionDefinition","src":"58307:155:36","nodes":[],"documentation":{"id":38759,"nodeType":"StructuredDocumentation","src":"58278:24:36","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"58316:15:36","parameters":{"id":38766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38761,"mutability":"mutable","name":"objectKey","nameLocation":"58348:9:36","nodeType":"VariableDeclaration","scope":38770,"src":"58332:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38760,"name":"string","nodeType":"ElementaryTypeName","src":"58332:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38763,"mutability":"mutable","name":"valueKey","nameLocation":"58375:8:36","nodeType":"VariableDeclaration","scope":38770,"src":"58359:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38762,"name":"string","nodeType":"ElementaryTypeName","src":"58359:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38765,"mutability":"mutable","name":"value","nameLocation":"58401:5:36","nodeType":"VariableDeclaration","scope":38770,"src":"58385:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38764,"name":"string","nodeType":"ElementaryTypeName","src":"58385:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58331:76:36"},"returnParameters":{"id":38769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38768,"mutability":"mutable","name":"json","nameLocation":"58456:4:36","nodeType":"VariableDeclaration","scope":38770,"src":"58442:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38767,"name":"string","nodeType":"ElementaryTypeName","src":"58442:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58441:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38783,"nodeType":"FunctionDefinition","src":"58497:158:36","nodes":[],"documentation":{"id":38771,"nodeType":"StructuredDocumentation","src":"58468:24:36","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"58506:15:36","parameters":{"id":38779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38773,"mutability":"mutable","name":"objectKey","nameLocation":"58538:9:36","nodeType":"VariableDeclaration","scope":38783,"src":"58522:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38772,"name":"string","nodeType":"ElementaryTypeName","src":"58522:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38775,"mutability":"mutable","name":"valueKey","nameLocation":"58565:8:36","nodeType":"VariableDeclaration","scope":38783,"src":"58549:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38774,"name":"string","nodeType":"ElementaryTypeName","src":"58549:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38778,"mutability":"mutable","name":"values","nameLocation":"58593:6:36","nodeType":"VariableDeclaration","scope":38783,"src":"58575:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":38776,"name":"string","nodeType":"ElementaryTypeName","src":"58575:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":38777,"nodeType":"ArrayTypeName","src":"58575:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"58521:79:36"},"returnParameters":{"id":38782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38781,"mutability":"mutable","name":"json","nameLocation":"58649:4:36","nodeType":"VariableDeclaration","scope":38783,"src":"58635:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38780,"name":"string","nodeType":"ElementaryTypeName","src":"58635:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58634:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38795,"nodeType":"FunctionDefinition","src":"58690:150:36","nodes":[],"documentation":{"id":38784,"nodeType":"StructuredDocumentation","src":"58661:24:36","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"58699:18:36","parameters":{"id":38791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38786,"mutability":"mutable","name":"objectKey","nameLocation":"58734:9:36","nodeType":"VariableDeclaration","scope":38795,"src":"58718:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38785,"name":"string","nodeType":"ElementaryTypeName","src":"58718:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38788,"mutability":"mutable","name":"valueKey","nameLocation":"58761:8:36","nodeType":"VariableDeclaration","scope":38795,"src":"58745:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38787,"name":"string","nodeType":"ElementaryTypeName","src":"58745:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38790,"mutability":"mutable","name":"value","nameLocation":"58779:5:36","nodeType":"VariableDeclaration","scope":38795,"src":"58771:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38789,"name":"uint256","nodeType":"ElementaryTypeName","src":"58771:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58717:68:36"},"returnParameters":{"id":38794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38793,"mutability":"mutable","name":"json","nameLocation":"58834:4:36","nodeType":"VariableDeclaration","scope":38795,"src":"58820:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38792,"name":"string","nodeType":"ElementaryTypeName","src":"58820:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58819:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38807,"nodeType":"FunctionDefinition","src":"58875:145:36","nodes":[],"documentation":{"id":38796,"nodeType":"StructuredDocumentation","src":"58846:24:36","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"58884:13:36","parameters":{"id":38803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38798,"mutability":"mutable","name":"objectKey","nameLocation":"58914:9:36","nodeType":"VariableDeclaration","scope":38807,"src":"58898:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38797,"name":"string","nodeType":"ElementaryTypeName","src":"58898:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38800,"mutability":"mutable","name":"valueKey","nameLocation":"58941:8:36","nodeType":"VariableDeclaration","scope":38807,"src":"58925:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38799,"name":"string","nodeType":"ElementaryTypeName","src":"58925:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38802,"mutability":"mutable","name":"value","nameLocation":"58959:5:36","nodeType":"VariableDeclaration","scope":38807,"src":"58951:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38801,"name":"uint256","nodeType":"ElementaryTypeName","src":"58951:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58897:68:36"},"returnParameters":{"id":38806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38805,"mutability":"mutable","name":"json","nameLocation":"59014:4:36","nodeType":"VariableDeclaration","scope":38807,"src":"59000:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38804,"name":"string","nodeType":"ElementaryTypeName","src":"59000:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58999:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38820,"nodeType":"FunctionDefinition","src":"59055:157:36","nodes":[],"documentation":{"id":38808,"nodeType":"StructuredDocumentation","src":"59026:24:36","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"59064:13:36","parameters":{"id":38816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38810,"mutability":"mutable","name":"objectKey","nameLocation":"59094:9:36","nodeType":"VariableDeclaration","scope":38820,"src":"59078:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38809,"name":"string","nodeType":"ElementaryTypeName","src":"59078:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38812,"mutability":"mutable","name":"valueKey","nameLocation":"59121:8:36","nodeType":"VariableDeclaration","scope":38820,"src":"59105:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38811,"name":"string","nodeType":"ElementaryTypeName","src":"59105:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38815,"mutability":"mutable","name":"values","nameLocation":"59150:6:36","nodeType":"VariableDeclaration","scope":38820,"src":"59131:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":38813,"name":"uint256","nodeType":"ElementaryTypeName","src":"59131:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":38814,"nodeType":"ArrayTypeName","src":"59131:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"59077:80:36"},"returnParameters":{"id":38819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38818,"mutability":"mutable","name":"json","nameLocation":"59206:4:36","nodeType":"VariableDeclaration","scope":38820,"src":"59192:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":38817,"name":"string","nodeType":"ElementaryTypeName","src":"59192:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59191:20:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38828,"nodeType":"FunctionDefinition","src":"59312:72:36","nodes":[],"documentation":{"id":38821,"nodeType":"StructuredDocumentation","src":"59218:89:36","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"59321:9:36","parameters":{"id":38826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38823,"mutability":"mutable","name":"json","nameLocation":"59347:4:36","nodeType":"VariableDeclaration","scope":38828,"src":"59331:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38822,"name":"string","nodeType":"ElementaryTypeName","src":"59331:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38825,"mutability":"mutable","name":"path","nameLocation":"59369:4:36","nodeType":"VariableDeclaration","scope":38828,"src":"59353:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38824,"name":"string","nodeType":"ElementaryTypeName","src":"59353:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59330:44:36"},"returnParameters":{"id":38827,"nodeType":"ParameterList","parameters":[],"src":"59383:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38838,"nodeType":"FunctionDefinition","src":"59610:98:36","nodes":[],"documentation":{"id":38829,"nodeType":"StructuredDocumentation","src":"59390:215:36","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"59619:9:36","parameters":{"id":38836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38831,"mutability":"mutable","name":"json","nameLocation":"59645:4:36","nodeType":"VariableDeclaration","scope":38838,"src":"59629:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38830,"name":"string","nodeType":"ElementaryTypeName","src":"59629:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38833,"mutability":"mutable","name":"path","nameLocation":"59667:4:36","nodeType":"VariableDeclaration","scope":38838,"src":"59651:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38832,"name":"string","nodeType":"ElementaryTypeName","src":"59651:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38835,"mutability":"mutable","name":"valueKey","nameLocation":"59689:8:36","nodeType":"VariableDeclaration","scope":38838,"src":"59673:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38834,"name":"string","nodeType":"ElementaryTypeName","src":"59673:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59628:70:36"},"returnParameters":{"id":38837,"nodeType":"ParameterList","parameters":[],"src":"59707:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38848,"nodeType":"FunctionDefinition","src":"59870:91:36","nodes":[],"documentation":{"id":38839,"nodeType":"StructuredDocumentation","src":"59714:151:36","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"59879:9:36","parameters":{"id":38844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38841,"mutability":"mutable","name":"json","nameLocation":"59905:4:36","nodeType":"VariableDeclaration","scope":38848,"src":"59889:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38840,"name":"string","nodeType":"ElementaryTypeName","src":"59889:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38843,"mutability":"mutable","name":"key","nameLocation":"59927:3:36","nodeType":"VariableDeclaration","scope":38848,"src":"59911:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38842,"name":"string","nodeType":"ElementaryTypeName","src":"59911:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59888:43:36"},"returnParameters":{"id":38847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":38848,"src":"59955:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":38845,"name":"bool","nodeType":"ElementaryTypeName","src":"59955:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"59954:6:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":38854,"nodeType":"FunctionDefinition","src":"60052:50:36","nodes":[],"documentation":{"id":38849,"nodeType":"StructuredDocumentation","src":"60003:44:36","text":"Attach an EIP-4844 blob to the next call"},"functionSelector":"10cb385c","implemented":false,"kind":"function","modifiers":[],"name":"attachBlob","nameLocation":"60061:10:36","parameters":{"id":38852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38851,"mutability":"mutable","name":"blob","nameLocation":"60087:4:36","nodeType":"VariableDeclaration","scope":38854,"src":"60072:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":38850,"name":"bytes","nodeType":"ElementaryTypeName","src":"60072:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"60071:21:36"},"returnParameters":{"id":38853,"nodeType":"ParameterList","parameters":[],"src":"60101:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38861,"nodeType":"FunctionDefinition","src":"60167:79:36","nodes":[],"documentation":{"id":38855,"nodeType":"StructuredDocumentation","src":"60108:54:36","text":"Designate the next call as an EIP-7702 transaction"},"functionSelector":"14ae3519","implemented":false,"kind":"function","modifiers":[],"name":"attachDelegation","nameLocation":"60176:16:36","parameters":{"id":38859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38858,"mutability":"mutable","name":"signedDelegation","nameLocation":"60219:16:36","nodeType":"VariableDeclaration","scope":38861,"src":"60193:42:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_calldata_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":38857,"nodeType":"UserDefinedTypeName","pathNode":{"id":38856,"name":"SignedDelegation","nameLocations":["60193:16:36"],"nodeType":"IdentifierPath","referencedDeclaration":36980,"src":"60193:16:36"},"referencedDeclaration":36980,"src":"60193:16:36","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"60192:44:36"},"returnParameters":{"id":38860,"nodeType":"ParameterList","parameters":[],"src":"60245:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38870,"nodeType":"FunctionDefinition","src":"60348:96:36","nodes":[],"documentation":{"id":38862,"nodeType":"StructuredDocumentation","src":"60252:91:36","text":"Designate the next call as an EIP-7702 transaction, with optional cross-chain validity."},"functionSelector":"f4460d34","implemented":false,"kind":"function","modifiers":[],"name":"attachDelegation","nameLocation":"60357:16:36","parameters":{"id":38868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38865,"mutability":"mutable","name":"signedDelegation","nameLocation":"60400:16:36","nodeType":"VariableDeclaration","scope":38870,"src":"60374:42:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_calldata_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":38864,"nodeType":"UserDefinedTypeName","pathNode":{"id":38863,"name":"SignedDelegation","nameLocations":["60374:16:36"],"nodeType":"IdentifierPath","referencedDeclaration":36980,"src":"60374:16:36"},"referencedDeclaration":36980,"src":"60374:16:36","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"},{"constant":false,"id":38867,"mutability":"mutable","name":"crossChain","nameLocation":"60423:10:36","nodeType":"VariableDeclaration","scope":38870,"src":"60418:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":38866,"name":"bool","nodeType":"ElementaryTypeName","src":"60418:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"60373:61:36"},"returnParameters":{"id":38869,"nodeType":"ParameterList","parameters":[],"src":"60443:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38876,"nodeType":"FunctionDefinition","src":"60519:63:36","nodes":[],"documentation":{"id":38871,"nodeType":"StructuredDocumentation","src":"60450:64:36","text":"Takes a signed transaction and broadcasts it to the network."},"functionSelector":"8c0c72e0","implemented":false,"kind":"function","modifiers":[],"name":"broadcastRawTransaction","nameLocation":"60528:23:36","parameters":{"id":38874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38873,"mutability":"mutable","name":"data","nameLocation":"60567:4:36","nodeType":"VariableDeclaration","scope":38876,"src":"60552:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":38872,"name":"bytes","nodeType":"ElementaryTypeName","src":"60552:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"60551:21:36"},"returnParameters":{"id":38875,"nodeType":"ParameterList","parameters":[],"src":"60581:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38880,"nodeType":"FunctionDefinition","src":"61085:30:36","nodes":[],"documentation":{"id":38877,"nodeType":"StructuredDocumentation","src":"60588:492:36","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"61094:9:36","parameters":{"id":38878,"nodeType":"ParameterList","parameters":[],"src":"61103:2:36"},"returnParameters":{"id":38879,"nodeType":"ParameterList","parameters":[],"src":"61114:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38886,"nodeType":"FunctionDefinition","src":"61285:44:36","nodes":[],"documentation":{"id":38881,"nodeType":"StructuredDocumentation","src":"61121:159:36","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"61294:9:36","parameters":{"id":38884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38883,"mutability":"mutable","name":"signer","nameLocation":"61312:6:36","nodeType":"VariableDeclaration","scope":38886,"src":"61304:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38882,"name":"address","nodeType":"ElementaryTypeName","src":"61304:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"61303:16:36"},"returnParameters":{"id":38885,"nodeType":"ParameterList","parameters":[],"src":"61328:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38892,"nodeType":"FunctionDefinition","src":"61503:48:36","nodes":[],"documentation":{"id":38887,"nodeType":"StructuredDocumentation","src":"61335:163:36","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"61512:9:36","parameters":{"id":38890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38889,"mutability":"mutable","name":"privateKey","nameLocation":"61530:10:36","nodeType":"VariableDeclaration","scope":38892,"src":"61522:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38888,"name":"uint256","nodeType":"ElementaryTypeName","src":"61522:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61521:20:36"},"returnParameters":{"id":38891,"nodeType":"ParameterList","parameters":[],"src":"61550:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38899,"nodeType":"FunctionDefinition","src":"61640:66:36","nodes":[],"documentation":{"id":38893,"nodeType":"StructuredDocumentation","src":"61557:78:36","text":"Returns addresses of available unlocked wallets in the script environment."},"functionSelector":"db7a4605","implemented":false,"kind":"function","modifiers":[],"name":"getWallets","nameLocation":"61649:10:36","parameters":{"id":38894,"nodeType":"ParameterList","parameters":[],"src":"61659:2:36"},"returnParameters":{"id":38898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38897,"mutability":"mutable","name":"wallets","nameLocation":"61697:7:36","nodeType":"VariableDeclaration","scope":38899,"src":"61680:24:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":38895,"name":"address","nodeType":"ElementaryTypeName","src":"61680:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":38896,"nodeType":"ArrayTypeName","src":"61680:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"61679:26:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38910,"nodeType":"FunctionDefinition","src":"61806:153:36","nodes":[],"documentation":{"id":38900,"nodeType":"StructuredDocumentation","src":"61712:89:36","text":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction"},"functionSelector":"c7fa7288","implemented":false,"kind":"function","modifiers":[],"name":"signAndAttachDelegation","nameLocation":"61815:23:36","parameters":{"id":38905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38902,"mutability":"mutable","name":"implementation","nameLocation":"61847:14:36","nodeType":"VariableDeclaration","scope":38910,"src":"61839:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38901,"name":"address","nodeType":"ElementaryTypeName","src":"61839:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":38904,"mutability":"mutable","name":"privateKey","nameLocation":"61871:10:36","nodeType":"VariableDeclaration","scope":38910,"src":"61863:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38903,"name":"uint256","nodeType":"ElementaryTypeName","src":"61863:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61838:44:36"},"returnParameters":{"id":38909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38908,"mutability":"mutable","name":"signedDelegation","nameLocation":"61941:16:36","nodeType":"VariableDeclaration","scope":38910,"src":"61917:40:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":38907,"nodeType":"UserDefinedTypeName","pathNode":{"id":38906,"name":"SignedDelegation","nameLocations":["61917:16:36"],"nodeType":"IdentifierPath","referencedDeclaration":36980,"src":"61917:16:36"},"referencedDeclaration":36980,"src":"61917:16:36","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"61916:42:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38923,"nodeType":"FunctionDefinition","src":"62078:167:36","nodes":[],"documentation":{"id":38911,"nodeType":"StructuredDocumentation","src":"61965:108:36","text":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction for specific nonce"},"functionSelector":"cde3e5be","implemented":false,"kind":"function","modifiers":[],"name":"signAndAttachDelegation","nameLocation":"62087:23:36","parameters":{"id":38918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38913,"mutability":"mutable","name":"implementation","nameLocation":"62119:14:36","nodeType":"VariableDeclaration","scope":38923,"src":"62111:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38912,"name":"address","nodeType":"ElementaryTypeName","src":"62111:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":38915,"mutability":"mutable","name":"privateKey","nameLocation":"62143:10:36","nodeType":"VariableDeclaration","scope":38923,"src":"62135:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38914,"name":"uint256","nodeType":"ElementaryTypeName","src":"62135:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":38917,"mutability":"mutable","name":"nonce","nameLocation":"62162:5:36","nodeType":"VariableDeclaration","scope":38923,"src":"62155:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":38916,"name":"uint64","nodeType":"ElementaryTypeName","src":"62155:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"62110:58:36"},"returnParameters":{"id":38922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38921,"mutability":"mutable","name":"signedDelegation","nameLocation":"62227:16:36","nodeType":"VariableDeclaration","scope":38923,"src":"62203:40:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":38920,"nodeType":"UserDefinedTypeName","pathNode":{"id":38919,"name":"SignedDelegation","nameLocations":["62203:16:36"],"nodeType":"IdentifierPath","referencedDeclaration":36980,"src":"62203:16:36"},"referencedDeclaration":36980,"src":"62203:16:36","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"62202:42:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38936,"nodeType":"FunctionDefinition","src":"62382:170:36","nodes":[],"documentation":{"id":38924,"nodeType":"StructuredDocumentation","src":"62251:126:36","text":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction, with optional cross-chain validity."},"functionSelector":"d936e146","implemented":false,"kind":"function","modifiers":[],"name":"signAndAttachDelegation","nameLocation":"62391:23:36","parameters":{"id":38931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38926,"mutability":"mutable","name":"implementation","nameLocation":"62423:14:36","nodeType":"VariableDeclaration","scope":38936,"src":"62415:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38925,"name":"address","nodeType":"ElementaryTypeName","src":"62415:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":38928,"mutability":"mutable","name":"privateKey","nameLocation":"62447:10:36","nodeType":"VariableDeclaration","scope":38936,"src":"62439:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38927,"name":"uint256","nodeType":"ElementaryTypeName","src":"62439:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":38930,"mutability":"mutable","name":"crossChain","nameLocation":"62464:10:36","nodeType":"VariableDeclaration","scope":38936,"src":"62459:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":38929,"name":"bool","nodeType":"ElementaryTypeName","src":"62459:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"62414:61:36"},"returnParameters":{"id":38935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38934,"mutability":"mutable","name":"signedDelegation","nameLocation":"62534:16:36","nodeType":"VariableDeclaration","scope":38936,"src":"62510:40:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":38933,"nodeType":"UserDefinedTypeName","pathNode":{"id":38932,"name":"SignedDelegation","nameLocations":["62510:16:36"],"nodeType":"IdentifierPath","referencedDeclaration":36980,"src":"62510:16:36"},"referencedDeclaration":36980,"src":"62510:16:36","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"62509:42:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38947,"nodeType":"FunctionDefinition","src":"62612:144:36","nodes":[],"documentation":{"id":38937,"nodeType":"StructuredDocumentation","src":"62558:49:36","text":"Sign an EIP-7702 authorization for delegation"},"functionSelector":"5b593c7b","implemented":false,"kind":"function","modifiers":[],"name":"signDelegation","nameLocation":"62621:14:36","parameters":{"id":38942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38939,"mutability":"mutable","name":"implementation","nameLocation":"62644:14:36","nodeType":"VariableDeclaration","scope":38947,"src":"62636:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38938,"name":"address","nodeType":"ElementaryTypeName","src":"62636:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":38941,"mutability":"mutable","name":"privateKey","nameLocation":"62668:10:36","nodeType":"VariableDeclaration","scope":38947,"src":"62660:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38940,"name":"uint256","nodeType":"ElementaryTypeName","src":"62660:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62635:44:36"},"returnParameters":{"id":38946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38945,"mutability":"mutable","name":"signedDelegation","nameLocation":"62738:16:36","nodeType":"VariableDeclaration","scope":38947,"src":"62714:40:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":38944,"nodeType":"UserDefinedTypeName","pathNode":{"id":38943,"name":"SignedDelegation","nameLocations":["62714:16:36"],"nodeType":"IdentifierPath","referencedDeclaration":36980,"src":"62714:16:36"},"referencedDeclaration":36980,"src":"62714:16:36","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"62713:42:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38960,"nodeType":"FunctionDefinition","src":"62835:158:36","nodes":[],"documentation":{"id":38948,"nodeType":"StructuredDocumentation","src":"62762:68:36","text":"Sign an EIP-7702 authorization for delegation for specific nonce"},"functionSelector":"ceba2ec3","implemented":false,"kind":"function","modifiers":[],"name":"signDelegation","nameLocation":"62844:14:36","parameters":{"id":38955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38950,"mutability":"mutable","name":"implementation","nameLocation":"62867:14:36","nodeType":"VariableDeclaration","scope":38960,"src":"62859:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38949,"name":"address","nodeType":"ElementaryTypeName","src":"62859:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":38952,"mutability":"mutable","name":"privateKey","nameLocation":"62891:10:36","nodeType":"VariableDeclaration","scope":38960,"src":"62883:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38951,"name":"uint256","nodeType":"ElementaryTypeName","src":"62883:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":38954,"mutability":"mutable","name":"nonce","nameLocation":"62910:5:36","nodeType":"VariableDeclaration","scope":38960,"src":"62903:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":38953,"name":"uint64","nodeType":"ElementaryTypeName","src":"62903:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"62858:58:36"},"returnParameters":{"id":38959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38958,"mutability":"mutable","name":"signedDelegation","nameLocation":"62975:16:36","nodeType":"VariableDeclaration","scope":38960,"src":"62951:40:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":38957,"nodeType":"UserDefinedTypeName","pathNode":{"id":38956,"name":"SignedDelegation","nameLocations":["62951:16:36"],"nodeType":"IdentifierPath","referencedDeclaration":36980,"src":"62951:16:36"},"referencedDeclaration":36980,"src":"62951:16:36","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"62950:42:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38973,"nodeType":"FunctionDefinition","src":"63090:161:36","nodes":[],"documentation":{"id":38961,"nodeType":"StructuredDocumentation","src":"62999:86:36","text":"Sign an EIP-7702 authorization for delegation, with optional cross-chain validity."},"functionSelector":"cdd7563d","implemented":false,"kind":"function","modifiers":[],"name":"signDelegation","nameLocation":"63099:14:36","parameters":{"id":38968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38963,"mutability":"mutable","name":"implementation","nameLocation":"63122:14:36","nodeType":"VariableDeclaration","scope":38973,"src":"63114:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38962,"name":"address","nodeType":"ElementaryTypeName","src":"63114:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":38965,"mutability":"mutable","name":"privateKey","nameLocation":"63146:10:36","nodeType":"VariableDeclaration","scope":38973,"src":"63138:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38964,"name":"uint256","nodeType":"ElementaryTypeName","src":"63138:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":38967,"mutability":"mutable","name":"crossChain","nameLocation":"63163:10:36","nodeType":"VariableDeclaration","scope":38973,"src":"63158:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":38966,"name":"bool","nodeType":"ElementaryTypeName","src":"63158:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"63113:61:36"},"returnParameters":{"id":38972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38971,"mutability":"mutable","name":"signedDelegation","nameLocation":"63233:16:36","nodeType":"VariableDeclaration","scope":38973,"src":"63209:40:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":38970,"nodeType":"UserDefinedTypeName","pathNode":{"id":38969,"name":"SignedDelegation","nameLocations":["63209:16:36"],"nodeType":"IdentifierPath","referencedDeclaration":36980,"src":"63209:16:36"},"referencedDeclaration":36980,"src":"63209:16:36","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$36980_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"63208:42:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38977,"nodeType":"FunctionDefinition","src":"63761:35:36","nodes":[],"documentation":{"id":38974,"nodeType":"StructuredDocumentation","src":"63257:499:36","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"63770:14:36","parameters":{"id":38975,"nodeType":"ParameterList","parameters":[],"src":"63784:2:36"},"returnParameters":{"id":38976,"nodeType":"ParameterList","parameters":[],"src":"63795:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38983,"nodeType":"FunctionDefinition","src":"63958:49:36","nodes":[],"documentation":{"id":38978,"nodeType":"StructuredDocumentation","src":"63802:151:36","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"63967:14:36","parameters":{"id":38981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38980,"mutability":"mutable","name":"signer","nameLocation":"63990:6:36","nodeType":"VariableDeclaration","scope":38983,"src":"63982:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38979,"name":"address","nodeType":"ElementaryTypeName","src":"63982:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"63981:16:36"},"returnParameters":{"id":38982,"nodeType":"ParameterList","parameters":[],"src":"64006:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38989,"nodeType":"FunctionDefinition","src":"64173:53:36","nodes":[],"documentation":{"id":38984,"nodeType":"StructuredDocumentation","src":"64013:155:36","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"64182:14:36","parameters":{"id":38987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38986,"mutability":"mutable","name":"privateKey","nameLocation":"64205:10:36","nodeType":"VariableDeclaration","scope":38989,"src":"64197:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38985,"name":"uint256","nodeType":"ElementaryTypeName","src":"64197:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64196:20:36"},"returnParameters":{"id":38988,"nodeType":"ParameterList","parameters":[],"src":"64225:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":38993,"nodeType":"FunctionDefinition","src":"64279:34:36","nodes":[],"documentation":{"id":38990,"nodeType":"StructuredDocumentation","src":"64232:42:36","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"64288:13:36","parameters":{"id":38991,"nodeType":"ParameterList","parameters":[],"src":"64301:2:36"},"returnParameters":{"id":38992,"nodeType":"ParameterList","parameters":[],"src":"64312:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":39003,"nodeType":"FunctionDefinition","src":"64425:98:36","nodes":[],"documentation":{"id":38994,"nodeType":"StructuredDocumentation","src":"64352:68:36","text":"Returns true if `search` is found in `subject`, false otherwise."},"functionSelector":"3fb18aec","implemented":false,"kind":"function","modifiers":[],"name":"contains","nameLocation":"64434:8:36","parameters":{"id":38999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38996,"mutability":"mutable","name":"subject","nameLocation":"64459:7:36","nodeType":"VariableDeclaration","scope":39003,"src":"64443:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38995,"name":"string","nodeType":"ElementaryTypeName","src":"64443:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":38998,"mutability":"mutable","name":"search","nameLocation":"64484:6:36","nodeType":"VariableDeclaration","scope":39003,"src":"64468:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":38997,"name":"string","nodeType":"ElementaryTypeName","src":"64468:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64442:49:36"},"returnParameters":{"id":39002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39001,"mutability":"mutable","name":"result","nameLocation":"64515:6:36","nodeType":"VariableDeclaration","scope":39003,"src":"64510:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39000,"name":"bool","nodeType":"ElementaryTypeName","src":"64510:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"64509:13:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":39013,"nodeType":"FunctionDefinition","src":"64739:93:36","nodes":[],"documentation":{"id":39004,"nodeType":"StructuredDocumentation","src":"64529:205:36","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"64748:7:36","parameters":{"id":39009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39006,"mutability":"mutable","name":"input","nameLocation":"64772:5:36","nodeType":"VariableDeclaration","scope":39013,"src":"64756:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39005,"name":"string","nodeType":"ElementaryTypeName","src":"64756:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":39008,"mutability":"mutable","name":"key","nameLocation":"64795:3:36","nodeType":"VariableDeclaration","scope":39013,"src":"64779:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39007,"name":"string","nodeType":"ElementaryTypeName","src":"64779:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64755:44:36"},"returnParameters":{"id":39012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":39013,"src":"64823:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39010,"name":"uint256","nodeType":"ElementaryTypeName","src":"64823:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64822:9:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39021,"nodeType":"FunctionDefinition","src":"64891:100:36","nodes":[],"documentation":{"id":39014,"nodeType":"StructuredDocumentation","src":"64838:48:36","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"64900:12:36","parameters":{"id":39017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39016,"mutability":"mutable","name":"stringifiedValue","nameLocation":"64929:16:36","nodeType":"VariableDeclaration","scope":39021,"src":"64913:32:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39015,"name":"string","nodeType":"ElementaryTypeName","src":"64913:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64912:34:36"},"returnParameters":{"id":39020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39019,"mutability":"mutable","name":"parsedValue","nameLocation":"64978:11:36","nodeType":"VariableDeclaration","scope":39021,"src":"64970:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":39018,"name":"address","nodeType":"ElementaryTypeName","src":"64970:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"64969:21:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39029,"nodeType":"FunctionDefinition","src":"65046:94:36","nodes":[],"documentation":{"id":39022,"nodeType":"StructuredDocumentation","src":"64997:44:36","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"65055:9:36","parameters":{"id":39025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39024,"mutability":"mutable","name":"stringifiedValue","nameLocation":"65081:16:36","nodeType":"VariableDeclaration","scope":39029,"src":"65065:32:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39023,"name":"string","nodeType":"ElementaryTypeName","src":"65065:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65064:34:36"},"returnParameters":{"id":39028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39027,"mutability":"mutable","name":"parsedValue","nameLocation":"65127:11:36","nodeType":"VariableDeclaration","scope":39029,"src":"65122:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39026,"name":"bool","nodeType":"ElementaryTypeName","src":"65122:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"65121:18:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39037,"nodeType":"FunctionDefinition","src":"65194:103:36","nodes":[],"documentation":{"id":39030,"nodeType":"StructuredDocumentation","src":"65146:43:36","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"65203:10:36","parameters":{"id":39033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39032,"mutability":"mutable","name":"stringifiedValue","nameLocation":"65230:16:36","nodeType":"VariableDeclaration","scope":39037,"src":"65214:32:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39031,"name":"string","nodeType":"ElementaryTypeName","src":"65214:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65213:34:36"},"returnParameters":{"id":39036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39035,"mutability":"mutable","name":"parsedValue","nameLocation":"65284:11:36","nodeType":"VariableDeclaration","scope":39037,"src":"65271:24:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":39034,"name":"bytes","nodeType":"ElementaryTypeName","src":"65271:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"65270:26:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39045,"nodeType":"FunctionDefinition","src":"65355:100:36","nodes":[],"documentation":{"id":39038,"nodeType":"StructuredDocumentation","src":"65303:47:36","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"65364:12:36","parameters":{"id":39041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39040,"mutability":"mutable","name":"stringifiedValue","nameLocation":"65393:16:36","nodeType":"VariableDeclaration","scope":39045,"src":"65377:32:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39039,"name":"string","nodeType":"ElementaryTypeName","src":"65377:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65376:34:36"},"returnParameters":{"id":39044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39043,"mutability":"mutable","name":"parsedValue","nameLocation":"65442:11:36","nodeType":"VariableDeclaration","scope":39045,"src":"65434:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":39042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65434:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"65433:21:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39053,"nodeType":"FunctionDefinition","src":"65512:95:36","nodes":[],"documentation":{"id":39046,"nodeType":"StructuredDocumentation","src":"65461:46:36","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"65521:8:36","parameters":{"id":39049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39048,"mutability":"mutable","name":"stringifiedValue","nameLocation":"65546:16:36","nodeType":"VariableDeclaration","scope":39053,"src":"65530:32:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39047,"name":"string","nodeType":"ElementaryTypeName","src":"65530:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65529:34:36"},"returnParameters":{"id":39052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39051,"mutability":"mutable","name":"parsedValue","nameLocation":"65594:11:36","nodeType":"VariableDeclaration","scope":39053,"src":"65587:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39050,"name":"int256","nodeType":"ElementaryTypeName","src":"65587:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"65586:20:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39061,"nodeType":"FunctionDefinition","src":"65665:97:36","nodes":[],"documentation":{"id":39054,"nodeType":"StructuredDocumentation","src":"65613:47:36","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"65674:9:36","parameters":{"id":39057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39056,"mutability":"mutable","name":"stringifiedValue","nameLocation":"65700:16:36","nodeType":"VariableDeclaration","scope":39061,"src":"65684:32:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39055,"name":"string","nodeType":"ElementaryTypeName","src":"65684:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65683:34:36"},"returnParameters":{"id":39060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39059,"mutability":"mutable","name":"parsedValue","nameLocation":"65749:11:36","nodeType":"VariableDeclaration","scope":39061,"src":"65741:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39058,"name":"uint256","nodeType":"ElementaryTypeName","src":"65741:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65740:21:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39073,"nodeType":"FunctionDefinition","src":"65840:151:36","nodes":[],"documentation":{"id":39062,"nodeType":"StructuredDocumentation","src":"65768:67:36","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"65849:7:36","parameters":{"id":39069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39064,"mutability":"mutable","name":"input","nameLocation":"65873:5:36","nodeType":"VariableDeclaration","scope":39073,"src":"65857:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39063,"name":"string","nodeType":"ElementaryTypeName","src":"65857:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":39066,"mutability":"mutable","name":"from","nameLocation":"65896:4:36","nodeType":"VariableDeclaration","scope":39073,"src":"65880:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39065,"name":"string","nodeType":"ElementaryTypeName","src":"65880:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":39068,"mutability":"mutable","name":"to","nameLocation":"65918:2:36","nodeType":"VariableDeclaration","scope":39073,"src":"65902:18:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39067,"name":"string","nodeType":"ElementaryTypeName","src":"65902:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65856:65:36"},"returnParameters":{"id":39072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39071,"mutability":"mutable","name":"output","nameLocation":"65983:6:36","nodeType":"VariableDeclaration","scope":39073,"src":"65969:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":39070,"name":"string","nodeType":"ElementaryTypeName","src":"65969:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65968:22:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39084,"nodeType":"FunctionDefinition","src":"66084:113:36","nodes":[],"documentation":{"id":39074,"nodeType":"StructuredDocumentation","src":"65997:82:36","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"66093:5:36","parameters":{"id":39079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39076,"mutability":"mutable","name":"input","nameLocation":"66115:5:36","nodeType":"VariableDeclaration","scope":39084,"src":"66099:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39075,"name":"string","nodeType":"ElementaryTypeName","src":"66099:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":39078,"mutability":"mutable","name":"delimiter","nameLocation":"66138:9:36","nodeType":"VariableDeclaration","scope":39084,"src":"66122:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39077,"name":"string","nodeType":"ElementaryTypeName","src":"66122:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66098:50:36"},"returnParameters":{"id":39083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39082,"mutability":"mutable","name":"outputs","nameLocation":"66188:7:36","nodeType":"VariableDeclaration","scope":39084,"src":"66172:23:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":39080,"name":"string","nodeType":"ElementaryTypeName","src":"66172:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":39081,"nodeType":"ArrayTypeName","src":"66172:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"66171:25:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39092,"nodeType":"FunctionDefinition","src":"66259:89:36","nodes":[],"documentation":{"id":39085,"nodeType":"StructuredDocumentation","src":"66203:51:36","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"66268:11:36","parameters":{"id":39088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39087,"mutability":"mutable","name":"input","nameLocation":"66296:5:36","nodeType":"VariableDeclaration","scope":39092,"src":"66280:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39086,"name":"string","nodeType":"ElementaryTypeName","src":"66280:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66279:23:36"},"returnParameters":{"id":39091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39090,"mutability":"mutable","name":"output","nameLocation":"66340:6:36","nodeType":"VariableDeclaration","scope":39092,"src":"66326:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":39089,"name":"string","nodeType":"ElementaryTypeName","src":"66326:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66325:22:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39100,"nodeType":"FunctionDefinition","src":"66402:88:36","nodes":[],"documentation":{"id":39093,"nodeType":"StructuredDocumentation","src":"66354:43:36","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"66411:8:36","parameters":{"id":39096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39095,"mutability":"mutable","name":"value","nameLocation":"66428:5:36","nodeType":"VariableDeclaration","scope":39100,"src":"66420:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":39094,"name":"address","nodeType":"ElementaryTypeName","src":"66420:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"66419:15:36"},"returnParameters":{"id":39099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39098,"mutability":"mutable","name":"stringifiedValue","nameLocation":"66472:16:36","nodeType":"VariableDeclaration","scope":39100,"src":"66458:30:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":39097,"name":"string","nodeType":"ElementaryTypeName","src":"66458:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66457:32:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39108,"nodeType":"FunctionDefinition","src":"66544:95:36","nodes":[],"documentation":{"id":39101,"nodeType":"StructuredDocumentation","src":"66496:43:36","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"66553:8:36","parameters":{"id":39104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39103,"mutability":"mutable","name":"value","nameLocation":"66577:5:36","nodeType":"VariableDeclaration","scope":39108,"src":"66562:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":39102,"name":"bytes","nodeType":"ElementaryTypeName","src":"66562:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"66561:22:36"},"returnParameters":{"id":39107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39106,"mutability":"mutable","name":"stringifiedValue","nameLocation":"66621:16:36","nodeType":"VariableDeclaration","scope":39108,"src":"66607:30:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":39105,"name":"string","nodeType":"ElementaryTypeName","src":"66607:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66606:32:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39116,"nodeType":"FunctionDefinition","src":"66693:88:36","nodes":[],"documentation":{"id":39109,"nodeType":"StructuredDocumentation","src":"66645:43:36","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"66702:8:36","parameters":{"id":39112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39111,"mutability":"mutable","name":"value","nameLocation":"66719:5:36","nodeType":"VariableDeclaration","scope":39116,"src":"66711:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":39110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"66711:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"66710:15:36"},"returnParameters":{"id":39115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39114,"mutability":"mutable","name":"stringifiedValue","nameLocation":"66763:16:36","nodeType":"VariableDeclaration","scope":39116,"src":"66749:30:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":39113,"name":"string","nodeType":"ElementaryTypeName","src":"66749:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66748:32:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39124,"nodeType":"FunctionDefinition","src":"66835:85:36","nodes":[],"documentation":{"id":39117,"nodeType":"StructuredDocumentation","src":"66787:43:36","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"66844:8:36","parameters":{"id":39120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39119,"mutability":"mutable","name":"value","nameLocation":"66858:5:36","nodeType":"VariableDeclaration","scope":39124,"src":"66853:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39118,"name":"bool","nodeType":"ElementaryTypeName","src":"66853:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"66852:12:36"},"returnParameters":{"id":39123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39122,"mutability":"mutable","name":"stringifiedValue","nameLocation":"66902:16:36","nodeType":"VariableDeclaration","scope":39124,"src":"66888:30:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":39121,"name":"string","nodeType":"ElementaryTypeName","src":"66888:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66887:32:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39132,"nodeType":"FunctionDefinition","src":"66974:88:36","nodes":[],"documentation":{"id":39125,"nodeType":"StructuredDocumentation","src":"66926:43:36","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"66983:8:36","parameters":{"id":39128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39127,"mutability":"mutable","name":"value","nameLocation":"67000:5:36","nodeType":"VariableDeclaration","scope":39132,"src":"66992:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39126,"name":"uint256","nodeType":"ElementaryTypeName","src":"66992:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66991:15:36"},"returnParameters":{"id":39131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39130,"mutability":"mutable","name":"stringifiedValue","nameLocation":"67044:16:36","nodeType":"VariableDeclaration","scope":39132,"src":"67030:30:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":39129,"name":"string","nodeType":"ElementaryTypeName","src":"67030:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67029:32:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39140,"nodeType":"FunctionDefinition","src":"67116:87:36","nodes":[],"documentation":{"id":39133,"nodeType":"StructuredDocumentation","src":"67068:43:36","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"67125:8:36","parameters":{"id":39136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39135,"mutability":"mutable","name":"value","nameLocation":"67141:5:36","nodeType":"VariableDeclaration","scope":39140,"src":"67134:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39134,"name":"int256","nodeType":"ElementaryTypeName","src":"67134:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"67133:14:36"},"returnParameters":{"id":39139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39138,"mutability":"mutable","name":"stringifiedValue","nameLocation":"67185:16:36","nodeType":"VariableDeclaration","scope":39140,"src":"67171:30:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":39137,"name":"string","nodeType":"ElementaryTypeName","src":"67171:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67170:32:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39148,"nodeType":"FunctionDefinition","src":"67265:89:36","nodes":[],"documentation":{"id":39141,"nodeType":"StructuredDocumentation","src":"67209:51:36","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"67274:11:36","parameters":{"id":39144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39143,"mutability":"mutable","name":"input","nameLocation":"67302:5:36","nodeType":"VariableDeclaration","scope":39148,"src":"67286:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39142,"name":"string","nodeType":"ElementaryTypeName","src":"67286:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67285:23:36"},"returnParameters":{"id":39147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39146,"mutability":"mutable","name":"output","nameLocation":"67346:6:36","nodeType":"VariableDeclaration","scope":39148,"src":"67332:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":39145,"name":"string","nodeType":"ElementaryTypeName","src":"67332:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67331:22:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39156,"nodeType":"FunctionDefinition","src":"67437:82:36","nodes":[],"documentation":{"id":39149,"nodeType":"StructuredDocumentation","src":"67360:72:36","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"67446:4:36","parameters":{"id":39152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39151,"mutability":"mutable","name":"input","nameLocation":"67467:5:36","nodeType":"VariableDeclaration","scope":39156,"src":"67451:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39150,"name":"string","nodeType":"ElementaryTypeName","src":"67451:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67450:23:36"},"returnParameters":{"id":39155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39154,"mutability":"mutable","name":"output","nameLocation":"67511:6:36","nodeType":"VariableDeclaration","scope":39156,"src":"67497:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":39153,"name":"string","nodeType":"ElementaryTypeName","src":"67497:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67496:22:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39168,"nodeType":"FunctionDefinition","src":"67714:113:36","nodes":[],"documentation":{"id":39157,"nodeType":"StructuredDocumentation","src":"67559:150:36","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"67723:24:36","parameters":{"id":39166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39159,"mutability":"mutable","name":"left","nameLocation":"67756:4:36","nodeType":"VariableDeclaration","scope":39168,"src":"67748:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39158,"name":"uint256","nodeType":"ElementaryTypeName","src":"67748:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39161,"mutability":"mutable","name":"right","nameLocation":"67770:5:36","nodeType":"VariableDeclaration","scope":39168,"src":"67762:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39160,"name":"uint256","nodeType":"ElementaryTypeName","src":"67762:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39163,"mutability":"mutable","name":"maxDelta","nameLocation":"67785:8:36","nodeType":"VariableDeclaration","scope":39168,"src":"67777:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39162,"name":"uint256","nodeType":"ElementaryTypeName","src":"67777:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39165,"mutability":"mutable","name":"decimals","nameLocation":"67803:8:36","nodeType":"VariableDeclaration","scope":39168,"src":"67795:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39164,"name":"uint256","nodeType":"ElementaryTypeName","src":"67795:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67747:65:36"},"returnParameters":{"id":39167,"nodeType":"ParameterList","parameters":[],"src":"67826:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39182,"nodeType":"FunctionDefinition","src":"68042:182:36","nodes":[],"documentation":{"id":39169,"nodeType":"StructuredDocumentation","src":"67833:204:36","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"68051:24:36","parameters":{"id":39180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39171,"mutability":"mutable","name":"left","nameLocation":"68093:4:36","nodeType":"VariableDeclaration","scope":39182,"src":"68085:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39170,"name":"uint256","nodeType":"ElementaryTypeName","src":"68085:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39173,"mutability":"mutable","name":"right","nameLocation":"68115:5:36","nodeType":"VariableDeclaration","scope":39182,"src":"68107:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39172,"name":"uint256","nodeType":"ElementaryTypeName","src":"68107:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39175,"mutability":"mutable","name":"maxDelta","nameLocation":"68138:8:36","nodeType":"VariableDeclaration","scope":39182,"src":"68130:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39174,"name":"uint256","nodeType":"ElementaryTypeName","src":"68130:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39177,"mutability":"mutable","name":"decimals","nameLocation":"68164:8:36","nodeType":"VariableDeclaration","scope":39182,"src":"68156:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39176,"name":"uint256","nodeType":"ElementaryTypeName","src":"68156:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39179,"mutability":"mutable","name":"error","nameLocation":"68198:5:36","nodeType":"VariableDeclaration","scope":39182,"src":"68182:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39178,"name":"string","nodeType":"ElementaryTypeName","src":"68182:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68075:134:36"},"returnParameters":{"id":39181,"nodeType":"ParameterList","parameters":[],"src":"68223:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39194,"nodeType":"FunctionDefinition","src":"68384:111:36","nodes":[],"documentation":{"id":39183,"nodeType":"StructuredDocumentation","src":"68230:149:36","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"68393:24:36","parameters":{"id":39192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39185,"mutability":"mutable","name":"left","nameLocation":"68425:4:36","nodeType":"VariableDeclaration","scope":39194,"src":"68418:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39184,"name":"int256","nodeType":"ElementaryTypeName","src":"68418:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39187,"mutability":"mutable","name":"right","nameLocation":"68438:5:36","nodeType":"VariableDeclaration","scope":39194,"src":"68431:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39186,"name":"int256","nodeType":"ElementaryTypeName","src":"68431:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39189,"mutability":"mutable","name":"maxDelta","nameLocation":"68453:8:36","nodeType":"VariableDeclaration","scope":39194,"src":"68445:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39188,"name":"uint256","nodeType":"ElementaryTypeName","src":"68445:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39191,"mutability":"mutable","name":"decimals","nameLocation":"68471:8:36","nodeType":"VariableDeclaration","scope":39194,"src":"68463:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39190,"name":"uint256","nodeType":"ElementaryTypeName","src":"68463:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68417:63:36"},"returnParameters":{"id":39193,"nodeType":"ParameterList","parameters":[],"src":"68494:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39208,"nodeType":"FunctionDefinition","src":"68709:180:36","nodes":[],"documentation":{"id":39195,"nodeType":"StructuredDocumentation","src":"68501:203:36","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"68718:24:36","parameters":{"id":39206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39197,"mutability":"mutable","name":"left","nameLocation":"68759:4:36","nodeType":"VariableDeclaration","scope":39208,"src":"68752:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39196,"name":"int256","nodeType":"ElementaryTypeName","src":"68752:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39199,"mutability":"mutable","name":"right","nameLocation":"68780:5:36","nodeType":"VariableDeclaration","scope":39208,"src":"68773:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39198,"name":"int256","nodeType":"ElementaryTypeName","src":"68773:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39201,"mutability":"mutable","name":"maxDelta","nameLocation":"68803:8:36","nodeType":"VariableDeclaration","scope":39208,"src":"68795:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39200,"name":"uint256","nodeType":"ElementaryTypeName","src":"68795:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39203,"mutability":"mutable","name":"decimals","nameLocation":"68829:8:36","nodeType":"VariableDeclaration","scope":39208,"src":"68821:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39202,"name":"uint256","nodeType":"ElementaryTypeName","src":"68821:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39205,"mutability":"mutable","name":"error","nameLocation":"68863:5:36","nodeType":"VariableDeclaration","scope":39208,"src":"68847:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39204,"name":"string","nodeType":"ElementaryTypeName","src":"68847:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68742:132:36"},"returnParameters":{"id":39207,"nodeType":"ParameterList","parameters":[],"src":"68888:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39218,"nodeType":"FunctionDefinition","src":"68993:88:36","nodes":[],"documentation":{"id":39209,"nodeType":"StructuredDocumentation","src":"68895:93:36","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"69002:17:36","parameters":{"id":39216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39211,"mutability":"mutable","name":"left","nameLocation":"69028:4:36","nodeType":"VariableDeclaration","scope":39218,"src":"69020:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39210,"name":"uint256","nodeType":"ElementaryTypeName","src":"69020:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39213,"mutability":"mutable","name":"right","nameLocation":"69042:5:36","nodeType":"VariableDeclaration","scope":39218,"src":"69034:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39212,"name":"uint256","nodeType":"ElementaryTypeName","src":"69034:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39215,"mutability":"mutable","name":"maxDelta","nameLocation":"69057:8:36","nodeType":"VariableDeclaration","scope":39218,"src":"69049:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39214,"name":"uint256","nodeType":"ElementaryTypeName","src":"69049:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69019:47:36"},"returnParameters":{"id":39217,"nodeType":"ParameterList","parameters":[],"src":"69080:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39230,"nodeType":"FunctionDefinition","src":"69247:111:36","nodes":[],"documentation":{"id":39219,"nodeType":"StructuredDocumentation","src":"69087:155:36","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"69256:17:36","parameters":{"id":39228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39221,"mutability":"mutable","name":"left","nameLocation":"69282:4:36","nodeType":"VariableDeclaration","scope":39230,"src":"69274:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39220,"name":"uint256","nodeType":"ElementaryTypeName","src":"69274:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39223,"mutability":"mutable","name":"right","nameLocation":"69296:5:36","nodeType":"VariableDeclaration","scope":39230,"src":"69288:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39222,"name":"uint256","nodeType":"ElementaryTypeName","src":"69288:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39225,"mutability":"mutable","name":"maxDelta","nameLocation":"69311:8:36","nodeType":"VariableDeclaration","scope":39230,"src":"69303:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39224,"name":"uint256","nodeType":"ElementaryTypeName","src":"69303:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39227,"mutability":"mutable","name":"error","nameLocation":"69337:5:36","nodeType":"VariableDeclaration","scope":39230,"src":"69321:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39226,"name":"string","nodeType":"ElementaryTypeName","src":"69321:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69273:70:36"},"returnParameters":{"id":39229,"nodeType":"ParameterList","parameters":[],"src":"69357:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39240,"nodeType":"FunctionDefinition","src":"69461:86:36","nodes":[],"documentation":{"id":39231,"nodeType":"StructuredDocumentation","src":"69364:92:36","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"69470:17:36","parameters":{"id":39238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39233,"mutability":"mutable","name":"left","nameLocation":"69495:4:36","nodeType":"VariableDeclaration","scope":39240,"src":"69488:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39232,"name":"int256","nodeType":"ElementaryTypeName","src":"69488:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39235,"mutability":"mutable","name":"right","nameLocation":"69508:5:36","nodeType":"VariableDeclaration","scope":39240,"src":"69501:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39234,"name":"int256","nodeType":"ElementaryTypeName","src":"69501:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39237,"mutability":"mutable","name":"maxDelta","nameLocation":"69523:8:36","nodeType":"VariableDeclaration","scope":39240,"src":"69515:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39236,"name":"uint256","nodeType":"ElementaryTypeName","src":"69515:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69487:45:36"},"returnParameters":{"id":39239,"nodeType":"ParameterList","parameters":[],"src":"69546:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39252,"nodeType":"FunctionDefinition","src":"69712:109:36","nodes":[],"documentation":{"id":39241,"nodeType":"StructuredDocumentation","src":"69553:154:36","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"69721:17:36","parameters":{"id":39250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39243,"mutability":"mutable","name":"left","nameLocation":"69746:4:36","nodeType":"VariableDeclaration","scope":39252,"src":"69739:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39242,"name":"int256","nodeType":"ElementaryTypeName","src":"69739:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39245,"mutability":"mutable","name":"right","nameLocation":"69759:5:36","nodeType":"VariableDeclaration","scope":39252,"src":"69752:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39244,"name":"int256","nodeType":"ElementaryTypeName","src":"69752:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39247,"mutability":"mutable","name":"maxDelta","nameLocation":"69774:8:36","nodeType":"VariableDeclaration","scope":39252,"src":"69766:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39246,"name":"uint256","nodeType":"ElementaryTypeName","src":"69766:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39249,"mutability":"mutable","name":"error","nameLocation":"69800:5:36","nodeType":"VariableDeclaration","scope":39252,"src":"69784:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39248,"name":"string","nodeType":"ElementaryTypeName","src":"69784:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69738:68:36"},"returnParameters":{"id":39251,"nodeType":"ParameterList","parameters":[],"src":"69820:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39264,"nodeType":"FunctionDefinition","src":"70092:136:36","nodes":[],"documentation":{"id":39253,"nodeType":"StructuredDocumentation","src":"69827:260:36","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"70101:24:36","parameters":{"id":39262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39255,"mutability":"mutable","name":"left","nameLocation":"70134:4:36","nodeType":"VariableDeclaration","scope":39264,"src":"70126:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39254,"name":"uint256","nodeType":"ElementaryTypeName","src":"70126:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39257,"mutability":"mutable","name":"right","nameLocation":"70148:5:36","nodeType":"VariableDeclaration","scope":39264,"src":"70140:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39256,"name":"uint256","nodeType":"ElementaryTypeName","src":"70140:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39259,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"70163:15:36","nodeType":"VariableDeclaration","scope":39264,"src":"70155:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39258,"name":"uint256","nodeType":"ElementaryTypeName","src":"70155:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39261,"mutability":"mutable","name":"decimals","nameLocation":"70188:8:36","nodeType":"VariableDeclaration","scope":39264,"src":"70180:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39260,"name":"uint256","nodeType":"ElementaryTypeName","src":"70180:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70125:72:36"},"returnParameters":{"id":39263,"nodeType":"ParameterList","parameters":[],"src":"70227:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39278,"nodeType":"FunctionDefinition","src":"70553:189:36","nodes":[],"documentation":{"id":39265,"nodeType":"StructuredDocumentation","src":"70234:314:36","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"70562:24:36","parameters":{"id":39276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39267,"mutability":"mutable","name":"left","nameLocation":"70604:4:36","nodeType":"VariableDeclaration","scope":39278,"src":"70596:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39266,"name":"uint256","nodeType":"ElementaryTypeName","src":"70596:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39269,"mutability":"mutable","name":"right","nameLocation":"70626:5:36","nodeType":"VariableDeclaration","scope":39278,"src":"70618:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39268,"name":"uint256","nodeType":"ElementaryTypeName","src":"70618:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39271,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"70649:15:36","nodeType":"VariableDeclaration","scope":39278,"src":"70641:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39270,"name":"uint256","nodeType":"ElementaryTypeName","src":"70641:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39273,"mutability":"mutable","name":"decimals","nameLocation":"70682:8:36","nodeType":"VariableDeclaration","scope":39278,"src":"70674:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39272,"name":"uint256","nodeType":"ElementaryTypeName","src":"70674:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39275,"mutability":"mutable","name":"error","nameLocation":"70716:5:36","nodeType":"VariableDeclaration","scope":39278,"src":"70700:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39274,"name":"string","nodeType":"ElementaryTypeName","src":"70700:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70586:141:36"},"returnParameters":{"id":39277,"nodeType":"ParameterList","parameters":[],"src":"70741:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39290,"nodeType":"FunctionDefinition","src":"71012:134:36","nodes":[],"documentation":{"id":39279,"nodeType":"StructuredDocumentation","src":"70748:259:36","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"71021:24:36","parameters":{"id":39288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39281,"mutability":"mutable","name":"left","nameLocation":"71053:4:36","nodeType":"VariableDeclaration","scope":39290,"src":"71046:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39280,"name":"int256","nodeType":"ElementaryTypeName","src":"71046:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39283,"mutability":"mutable","name":"right","nameLocation":"71066:5:36","nodeType":"VariableDeclaration","scope":39290,"src":"71059:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39282,"name":"int256","nodeType":"ElementaryTypeName","src":"71059:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39285,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"71081:15:36","nodeType":"VariableDeclaration","scope":39290,"src":"71073:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39284,"name":"uint256","nodeType":"ElementaryTypeName","src":"71073:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39287,"mutability":"mutable","name":"decimals","nameLocation":"71106:8:36","nodeType":"VariableDeclaration","scope":39290,"src":"71098:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39286,"name":"uint256","nodeType":"ElementaryTypeName","src":"71098:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71045:70:36"},"returnParameters":{"id":39289,"nodeType":"ParameterList","parameters":[],"src":"71145:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39304,"nodeType":"FunctionDefinition","src":"71470:187:36","nodes":[],"documentation":{"id":39291,"nodeType":"StructuredDocumentation","src":"71152:313:36","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"71479:24:36","parameters":{"id":39302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39293,"mutability":"mutable","name":"left","nameLocation":"71520:4:36","nodeType":"VariableDeclaration","scope":39304,"src":"71513:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39292,"name":"int256","nodeType":"ElementaryTypeName","src":"71513:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39295,"mutability":"mutable","name":"right","nameLocation":"71541:5:36","nodeType":"VariableDeclaration","scope":39304,"src":"71534:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39294,"name":"int256","nodeType":"ElementaryTypeName","src":"71534:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39297,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"71564:15:36","nodeType":"VariableDeclaration","scope":39304,"src":"71556:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39296,"name":"uint256","nodeType":"ElementaryTypeName","src":"71556:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39299,"mutability":"mutable","name":"decimals","nameLocation":"71597:8:36","nodeType":"VariableDeclaration","scope":39304,"src":"71589:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39298,"name":"uint256","nodeType":"ElementaryTypeName","src":"71589:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39301,"mutability":"mutable","name":"error","nameLocation":"71631:5:36","nodeType":"VariableDeclaration","scope":39304,"src":"71615:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39300,"name":"string","nodeType":"ElementaryTypeName","src":"71615:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71503:139:36"},"returnParameters":{"id":39303,"nodeType":"ParameterList","parameters":[],"src":"71656:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39314,"nodeType":"FunctionDefinition","src":"71871:95:36","nodes":[],"documentation":{"id":39305,"nodeType":"StructuredDocumentation","src":"71663:203:36","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"71880:17:36","parameters":{"id":39312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39307,"mutability":"mutable","name":"left","nameLocation":"71906:4:36","nodeType":"VariableDeclaration","scope":39314,"src":"71898:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39306,"name":"uint256","nodeType":"ElementaryTypeName","src":"71898:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39309,"mutability":"mutable","name":"right","nameLocation":"71920:5:36","nodeType":"VariableDeclaration","scope":39314,"src":"71912:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39308,"name":"uint256","nodeType":"ElementaryTypeName","src":"71912:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39311,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"71935:15:36","nodeType":"VariableDeclaration","scope":39314,"src":"71927:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39310,"name":"uint256","nodeType":"ElementaryTypeName","src":"71927:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71897:54:36"},"returnParameters":{"id":39313,"nodeType":"ParameterList","parameters":[],"src":"71965:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39326,"nodeType":"FunctionDefinition","src":"72242:134:36","nodes":[],"documentation":{"id":39315,"nodeType":"StructuredDocumentation","src":"71972:265:36","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"72251:17:36","parameters":{"id":39324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39317,"mutability":"mutable","name":"left","nameLocation":"72277:4:36","nodeType":"VariableDeclaration","scope":39326,"src":"72269:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39316,"name":"uint256","nodeType":"ElementaryTypeName","src":"72269:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39319,"mutability":"mutable","name":"right","nameLocation":"72291:5:36","nodeType":"VariableDeclaration","scope":39326,"src":"72283:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39318,"name":"uint256","nodeType":"ElementaryTypeName","src":"72283:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39321,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"72306:15:36","nodeType":"VariableDeclaration","scope":39326,"src":"72298:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39320,"name":"uint256","nodeType":"ElementaryTypeName","src":"72298:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39323,"mutability":"mutable","name":"error","nameLocation":"72339:5:36","nodeType":"VariableDeclaration","scope":39326,"src":"72323:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39322,"name":"string","nodeType":"ElementaryTypeName","src":"72323:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72268:77:36"},"returnParameters":{"id":39325,"nodeType":"ParameterList","parameters":[],"src":"72375:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39336,"nodeType":"FunctionDefinition","src":"72589:93:36","nodes":[],"documentation":{"id":39327,"nodeType":"StructuredDocumentation","src":"72382:202:36","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"72598:17:36","parameters":{"id":39334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39329,"mutability":"mutable","name":"left","nameLocation":"72623:4:36","nodeType":"VariableDeclaration","scope":39336,"src":"72616:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39328,"name":"int256","nodeType":"ElementaryTypeName","src":"72616:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39331,"mutability":"mutable","name":"right","nameLocation":"72636:5:36","nodeType":"VariableDeclaration","scope":39336,"src":"72629:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39330,"name":"int256","nodeType":"ElementaryTypeName","src":"72629:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39333,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"72651:15:36","nodeType":"VariableDeclaration","scope":39336,"src":"72643:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39332,"name":"uint256","nodeType":"ElementaryTypeName","src":"72643:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72615:52:36"},"returnParameters":{"id":39335,"nodeType":"ParameterList","parameters":[],"src":"72681:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39348,"nodeType":"FunctionDefinition","src":"72957:132:36","nodes":[],"documentation":{"id":39337,"nodeType":"StructuredDocumentation","src":"72688:264:36","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"72966:17:36","parameters":{"id":39346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39339,"mutability":"mutable","name":"left","nameLocation":"72991:4:36","nodeType":"VariableDeclaration","scope":39348,"src":"72984:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39338,"name":"int256","nodeType":"ElementaryTypeName","src":"72984:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39341,"mutability":"mutable","name":"right","nameLocation":"73004:5:36","nodeType":"VariableDeclaration","scope":39348,"src":"72997:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39340,"name":"int256","nodeType":"ElementaryTypeName","src":"72997:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39343,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"73019:15:36","nodeType":"VariableDeclaration","scope":39348,"src":"73011:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39342,"name":"uint256","nodeType":"ElementaryTypeName","src":"73011:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39345,"mutability":"mutable","name":"error","nameLocation":"73052:5:36","nodeType":"VariableDeclaration","scope":39348,"src":"73036:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39344,"name":"string","nodeType":"ElementaryTypeName","src":"73036:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72983:75:36"},"returnParameters":{"id":39347,"nodeType":"ParameterList","parameters":[],"src":"73088:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39358,"nodeType":"FunctionDefinition","src":"73198:86:36","nodes":[],"documentation":{"id":39349,"nodeType":"StructuredDocumentation","src":"73095:98:36","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"73207:15:36","parameters":{"id":39356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39351,"mutability":"mutable","name":"left","nameLocation":"73231:4:36","nodeType":"VariableDeclaration","scope":39358,"src":"73223:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39350,"name":"uint256","nodeType":"ElementaryTypeName","src":"73223:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39353,"mutability":"mutable","name":"right","nameLocation":"73245:5:36","nodeType":"VariableDeclaration","scope":39358,"src":"73237:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39352,"name":"uint256","nodeType":"ElementaryTypeName","src":"73237:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39355,"mutability":"mutable","name":"decimals","nameLocation":"73260:8:36","nodeType":"VariableDeclaration","scope":39358,"src":"73252:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39354,"name":"uint256","nodeType":"ElementaryTypeName","src":"73252:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73222:47:36"},"returnParameters":{"id":39357,"nodeType":"ParameterList","parameters":[],"src":"73283:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39370,"nodeType":"FunctionDefinition","src":"73455:109:36","nodes":[],"documentation":{"id":39359,"nodeType":"StructuredDocumentation","src":"73290:160:36","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"73464:15:36","parameters":{"id":39368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39361,"mutability":"mutable","name":"left","nameLocation":"73488:4:36","nodeType":"VariableDeclaration","scope":39370,"src":"73480:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39360,"name":"uint256","nodeType":"ElementaryTypeName","src":"73480:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39363,"mutability":"mutable","name":"right","nameLocation":"73502:5:36","nodeType":"VariableDeclaration","scope":39370,"src":"73494:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39362,"name":"uint256","nodeType":"ElementaryTypeName","src":"73494:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39365,"mutability":"mutable","name":"decimals","nameLocation":"73517:8:36","nodeType":"VariableDeclaration","scope":39370,"src":"73509:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39364,"name":"uint256","nodeType":"ElementaryTypeName","src":"73509:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39367,"mutability":"mutable","name":"error","nameLocation":"73543:5:36","nodeType":"VariableDeclaration","scope":39370,"src":"73527:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39366,"name":"string","nodeType":"ElementaryTypeName","src":"73527:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73479:70:36"},"returnParameters":{"id":39369,"nodeType":"ParameterList","parameters":[],"src":"73563:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39380,"nodeType":"FunctionDefinition","src":"73672:84:36","nodes":[],"documentation":{"id":39371,"nodeType":"StructuredDocumentation","src":"73570:97:36","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"73681:15:36","parameters":{"id":39378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39373,"mutability":"mutable","name":"left","nameLocation":"73704:4:36","nodeType":"VariableDeclaration","scope":39380,"src":"73697:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39372,"name":"int256","nodeType":"ElementaryTypeName","src":"73697:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39375,"mutability":"mutable","name":"right","nameLocation":"73717:5:36","nodeType":"VariableDeclaration","scope":39380,"src":"73710:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39374,"name":"int256","nodeType":"ElementaryTypeName","src":"73710:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39377,"mutability":"mutable","name":"decimals","nameLocation":"73732:8:36","nodeType":"VariableDeclaration","scope":39380,"src":"73724:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39376,"name":"uint256","nodeType":"ElementaryTypeName","src":"73724:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73696:45:36"},"returnParameters":{"id":39379,"nodeType":"ParameterList","parameters":[],"src":"73755:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39392,"nodeType":"FunctionDefinition","src":"73926:107:36","nodes":[],"documentation":{"id":39381,"nodeType":"StructuredDocumentation","src":"73762:159:36","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"73935:15:36","parameters":{"id":39390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39383,"mutability":"mutable","name":"left","nameLocation":"73958:4:36","nodeType":"VariableDeclaration","scope":39392,"src":"73951:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39382,"name":"int256","nodeType":"ElementaryTypeName","src":"73951:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39385,"mutability":"mutable","name":"right","nameLocation":"73971:5:36","nodeType":"VariableDeclaration","scope":39392,"src":"73964:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39384,"name":"int256","nodeType":"ElementaryTypeName","src":"73964:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39387,"mutability":"mutable","name":"decimals","nameLocation":"73986:8:36","nodeType":"VariableDeclaration","scope":39392,"src":"73978:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39386,"name":"uint256","nodeType":"ElementaryTypeName","src":"73978:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39389,"mutability":"mutable","name":"error","nameLocation":"74012:5:36","nodeType":"VariableDeclaration","scope":39392,"src":"73996:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39388,"name":"string","nodeType":"ElementaryTypeName","src":"73996:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73950:68:36"},"returnParameters":{"id":39391,"nodeType":"ParameterList","parameters":[],"src":"74032:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39400,"nodeType":"FunctionDefinition","src":"74089:55:36","nodes":[],"documentation":{"id":39393,"nodeType":"StructuredDocumentation","src":"74039:45:36","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"74098:8:36","parameters":{"id":39398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39395,"mutability":"mutable","name":"left","nameLocation":"74112:4:36","nodeType":"VariableDeclaration","scope":39400,"src":"74107:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39394,"name":"bool","nodeType":"ElementaryTypeName","src":"74107:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":39397,"mutability":"mutable","name":"right","nameLocation":"74123:5:36","nodeType":"VariableDeclaration","scope":39400,"src":"74118:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39396,"name":"bool","nodeType":"ElementaryTypeName","src":"74118:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74106:23:36"},"returnParameters":{"id":39399,"nodeType":"ParameterList","parameters":[],"src":"74143:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39410,"nodeType":"FunctionDefinition","src":"74257:78:36","nodes":[],"documentation":{"id":39401,"nodeType":"StructuredDocumentation","src":"74150:102:36","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"74266:8:36","parameters":{"id":39408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39403,"mutability":"mutable","name":"left","nameLocation":"74280:4:36","nodeType":"VariableDeclaration","scope":39410,"src":"74275:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39402,"name":"bool","nodeType":"ElementaryTypeName","src":"74275:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":39405,"mutability":"mutable","name":"right","nameLocation":"74291:5:36","nodeType":"VariableDeclaration","scope":39410,"src":"74286:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39404,"name":"bool","nodeType":"ElementaryTypeName","src":"74286:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":39407,"mutability":"mutable","name":"error","nameLocation":"74314:5:36","nodeType":"VariableDeclaration","scope":39410,"src":"74298:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39406,"name":"string","nodeType":"ElementaryTypeName","src":"74298:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74274:46:36"},"returnParameters":{"id":39409,"nodeType":"ParameterList","parameters":[],"src":"74334:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39418,"nodeType":"FunctionDefinition","src":"74393:77:36","nodes":[],"documentation":{"id":39411,"nodeType":"StructuredDocumentation","src":"74341:47:36","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"74402:8:36","parameters":{"id":39416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39413,"mutability":"mutable","name":"left","nameLocation":"74427:4:36","nodeType":"VariableDeclaration","scope":39418,"src":"74411:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39412,"name":"string","nodeType":"ElementaryTypeName","src":"74411:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":39415,"mutability":"mutable","name":"right","nameLocation":"74449:5:36","nodeType":"VariableDeclaration","scope":39418,"src":"74433:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39414,"name":"string","nodeType":"ElementaryTypeName","src":"74433:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74410:45:36"},"returnParameters":{"id":39417,"nodeType":"ParameterList","parameters":[],"src":"74469:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39428,"nodeType":"FunctionDefinition","src":"74585:100:36","nodes":[],"documentation":{"id":39419,"nodeType":"StructuredDocumentation","src":"74476:104:36","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"74594:8:36","parameters":{"id":39426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39421,"mutability":"mutable","name":"left","nameLocation":"74619:4:36","nodeType":"VariableDeclaration","scope":39428,"src":"74603:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39420,"name":"string","nodeType":"ElementaryTypeName","src":"74603:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":39423,"mutability":"mutable","name":"right","nameLocation":"74641:5:36","nodeType":"VariableDeclaration","scope":39428,"src":"74625:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39422,"name":"string","nodeType":"ElementaryTypeName","src":"74625:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":39425,"mutability":"mutable","name":"error","nameLocation":"74664:5:36","nodeType":"VariableDeclaration","scope":39428,"src":"74648:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39424,"name":"string","nodeType":"ElementaryTypeName","src":"74648:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74602:68:36"},"returnParameters":{"id":39427,"nodeType":"ParameterList","parameters":[],"src":"74684:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39436,"nodeType":"FunctionDefinition","src":"74742:75:36","nodes":[],"documentation":{"id":39429,"nodeType":"StructuredDocumentation","src":"74691:46:36","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"74751:8:36","parameters":{"id":39434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39431,"mutability":"mutable","name":"left","nameLocation":"74775:4:36","nodeType":"VariableDeclaration","scope":39436,"src":"74760:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":39430,"name":"bytes","nodeType":"ElementaryTypeName","src":"74760:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":39433,"mutability":"mutable","name":"right","nameLocation":"74796:5:36","nodeType":"VariableDeclaration","scope":39436,"src":"74781:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":39432,"name":"bytes","nodeType":"ElementaryTypeName","src":"74781:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"74759:43:36"},"returnParameters":{"id":39435,"nodeType":"ParameterList","parameters":[],"src":"74816:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39446,"nodeType":"FunctionDefinition","src":"74931:98:36","nodes":[],"documentation":{"id":39437,"nodeType":"StructuredDocumentation","src":"74823:103:36","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"74940:8:36","parameters":{"id":39444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39439,"mutability":"mutable","name":"left","nameLocation":"74964:4:36","nodeType":"VariableDeclaration","scope":39446,"src":"74949:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":39438,"name":"bytes","nodeType":"ElementaryTypeName","src":"74949:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":39441,"mutability":"mutable","name":"right","nameLocation":"74985:5:36","nodeType":"VariableDeclaration","scope":39446,"src":"74970:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":39440,"name":"bytes","nodeType":"ElementaryTypeName","src":"74970:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":39443,"mutability":"mutable","name":"error","nameLocation":"75008:5:36","nodeType":"VariableDeclaration","scope":39446,"src":"74992:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39442,"name":"string","nodeType":"ElementaryTypeName","src":"74992:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74948:66:36"},"returnParameters":{"id":39445,"nodeType":"ParameterList","parameters":[],"src":"75028:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39456,"nodeType":"FunctionDefinition","src":"75095:77:36","nodes":[],"documentation":{"id":39447,"nodeType":"StructuredDocumentation","src":"75035:55:36","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"75104:8:36","parameters":{"id":39454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39450,"mutability":"mutable","name":"left","nameLocation":"75129:4:36","nodeType":"VariableDeclaration","scope":39456,"src":"75113:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":39448,"name":"bool","nodeType":"ElementaryTypeName","src":"75113:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":39449,"nodeType":"ArrayTypeName","src":"75113:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":39453,"mutability":"mutable","name":"right","nameLocation":"75151:5:36","nodeType":"VariableDeclaration","scope":39456,"src":"75135:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":39451,"name":"bool","nodeType":"ElementaryTypeName","src":"75135:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":39452,"nodeType":"ArrayTypeName","src":"75135:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"75112:45:36"},"returnParameters":{"id":39455,"nodeType":"ParameterList","parameters":[],"src":"75171:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39468,"nodeType":"FunctionDefinition","src":"75295:100:36","nodes":[],"documentation":{"id":39457,"nodeType":"StructuredDocumentation","src":"75178:112:36","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"75304:8:36","parameters":{"id":39466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39460,"mutability":"mutable","name":"left","nameLocation":"75329:4:36","nodeType":"VariableDeclaration","scope":39468,"src":"75313:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":39458,"name":"bool","nodeType":"ElementaryTypeName","src":"75313:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":39459,"nodeType":"ArrayTypeName","src":"75313:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":39463,"mutability":"mutable","name":"right","nameLocation":"75351:5:36","nodeType":"VariableDeclaration","scope":39468,"src":"75335:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":39461,"name":"bool","nodeType":"ElementaryTypeName","src":"75335:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":39462,"nodeType":"ArrayTypeName","src":"75335:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":39465,"mutability":"mutable","name":"error","nameLocation":"75374:5:36","nodeType":"VariableDeclaration","scope":39468,"src":"75358:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39464,"name":"string","nodeType":"ElementaryTypeName","src":"75358:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75312:68:36"},"returnParameters":{"id":39467,"nodeType":"ParameterList","parameters":[],"src":"75394:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39478,"nodeType":"FunctionDefinition","src":"75463:83:36","nodes":[],"documentation":{"id":39469,"nodeType":"StructuredDocumentation","src":"75401:57:36","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"75472:8:36","parameters":{"id":39476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39472,"mutability":"mutable","name":"left","nameLocation":"75500:4:36","nodeType":"VariableDeclaration","scope":39478,"src":"75481:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":39470,"name":"uint256","nodeType":"ElementaryTypeName","src":"75481:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":39471,"nodeType":"ArrayTypeName","src":"75481:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":39475,"mutability":"mutable","name":"right","nameLocation":"75525:5:36","nodeType":"VariableDeclaration","scope":39478,"src":"75506:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":39473,"name":"uint256","nodeType":"ElementaryTypeName","src":"75506:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":39474,"nodeType":"ArrayTypeName","src":"75506:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"75480:51:36"},"returnParameters":{"id":39477,"nodeType":"ParameterList","parameters":[],"src":"75545:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39490,"nodeType":"FunctionDefinition","src":"75672:106:36","nodes":[],"documentation":{"id":39479,"nodeType":"StructuredDocumentation","src":"75552:115:36","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"75681:8:36","parameters":{"id":39488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39482,"mutability":"mutable","name":"left","nameLocation":"75709:4:36","nodeType":"VariableDeclaration","scope":39490,"src":"75690:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":39480,"name":"uint256","nodeType":"ElementaryTypeName","src":"75690:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":39481,"nodeType":"ArrayTypeName","src":"75690:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":39485,"mutability":"mutable","name":"right","nameLocation":"75734:5:36","nodeType":"VariableDeclaration","scope":39490,"src":"75715:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":39483,"name":"uint256","nodeType":"ElementaryTypeName","src":"75715:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":39484,"nodeType":"ArrayTypeName","src":"75715:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":39487,"mutability":"mutable","name":"error","nameLocation":"75757:5:36","nodeType":"VariableDeclaration","scope":39490,"src":"75741:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39486,"name":"string","nodeType":"ElementaryTypeName","src":"75741:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75689:74:36"},"returnParameters":{"id":39489,"nodeType":"ParameterList","parameters":[],"src":"75777:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39500,"nodeType":"FunctionDefinition","src":"75846:81:36","nodes":[],"documentation":{"id":39491,"nodeType":"StructuredDocumentation","src":"75784:57:36","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"75855:8:36","parameters":{"id":39498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39494,"mutability":"mutable","name":"left","nameLocation":"75882:4:36","nodeType":"VariableDeclaration","scope":39500,"src":"75864:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":39492,"name":"int256","nodeType":"ElementaryTypeName","src":"75864:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":39493,"nodeType":"ArrayTypeName","src":"75864:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":39497,"mutability":"mutable","name":"right","nameLocation":"75906:5:36","nodeType":"VariableDeclaration","scope":39500,"src":"75888:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":39495,"name":"int256","nodeType":"ElementaryTypeName","src":"75888:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":39496,"nodeType":"ArrayTypeName","src":"75888:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"75863:49:36"},"returnParameters":{"id":39499,"nodeType":"ParameterList","parameters":[],"src":"75926:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39512,"nodeType":"FunctionDefinition","src":"76052:104:36","nodes":[],"documentation":{"id":39501,"nodeType":"StructuredDocumentation","src":"75933:114:36","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"76061:8:36","parameters":{"id":39510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39504,"mutability":"mutable","name":"left","nameLocation":"76088:4:36","nodeType":"VariableDeclaration","scope":39512,"src":"76070:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":39502,"name":"int256","nodeType":"ElementaryTypeName","src":"76070:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":39503,"nodeType":"ArrayTypeName","src":"76070:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":39507,"mutability":"mutable","name":"right","nameLocation":"76112:5:36","nodeType":"VariableDeclaration","scope":39512,"src":"76094:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":39505,"name":"int256","nodeType":"ElementaryTypeName","src":"76094:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":39506,"nodeType":"ArrayTypeName","src":"76094:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":39509,"mutability":"mutable","name":"error","nameLocation":"76135:5:36","nodeType":"VariableDeclaration","scope":39512,"src":"76119:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39508,"name":"string","nodeType":"ElementaryTypeName","src":"76119:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76069:72:36"},"returnParameters":{"id":39511,"nodeType":"ParameterList","parameters":[],"src":"76155:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39520,"nodeType":"FunctionDefinition","src":"76215:61:36","nodes":[],"documentation":{"id":39513,"nodeType":"StructuredDocumentation","src":"76162:48:36","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"76224:8:36","parameters":{"id":39518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39515,"mutability":"mutable","name":"left","nameLocation":"76241:4:36","nodeType":"VariableDeclaration","scope":39520,"src":"76233:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39514,"name":"uint256","nodeType":"ElementaryTypeName","src":"76233:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39517,"mutability":"mutable","name":"right","nameLocation":"76255:5:36","nodeType":"VariableDeclaration","scope":39520,"src":"76247:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39516,"name":"uint256","nodeType":"ElementaryTypeName","src":"76247:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76232:29:36"},"returnParameters":{"id":39519,"nodeType":"ParameterList","parameters":[],"src":"76275:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39530,"nodeType":"FunctionDefinition","src":"76345:83:36","nodes":[],"documentation":{"id":39521,"nodeType":"StructuredDocumentation","src":"76282:58:36","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"76354:8:36","parameters":{"id":39528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39524,"mutability":"mutable","name":"left","nameLocation":"76382:4:36","nodeType":"VariableDeclaration","scope":39530,"src":"76363:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":39522,"name":"address","nodeType":"ElementaryTypeName","src":"76363:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":39523,"nodeType":"ArrayTypeName","src":"76363:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":39527,"mutability":"mutable","name":"right","nameLocation":"76407:5:36","nodeType":"VariableDeclaration","scope":39530,"src":"76388:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":39525,"name":"address","nodeType":"ElementaryTypeName","src":"76388:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":39526,"nodeType":"ArrayTypeName","src":"76388:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"76362:51:36"},"returnParameters":{"id":39529,"nodeType":"ParameterList","parameters":[],"src":"76427:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39542,"nodeType":"FunctionDefinition","src":"76554:106:36","nodes":[],"documentation":{"id":39531,"nodeType":"StructuredDocumentation","src":"76434:115:36","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"76563:8:36","parameters":{"id":39540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39534,"mutability":"mutable","name":"left","nameLocation":"76591:4:36","nodeType":"VariableDeclaration","scope":39542,"src":"76572:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":39532,"name":"address","nodeType":"ElementaryTypeName","src":"76572:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":39533,"nodeType":"ArrayTypeName","src":"76572:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":39537,"mutability":"mutable","name":"right","nameLocation":"76616:5:36","nodeType":"VariableDeclaration","scope":39542,"src":"76597:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":39535,"name":"address","nodeType":"ElementaryTypeName","src":"76597:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":39536,"nodeType":"ArrayTypeName","src":"76597:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":39539,"mutability":"mutable","name":"error","nameLocation":"76639:5:36","nodeType":"VariableDeclaration","scope":39542,"src":"76623:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39538,"name":"string","nodeType":"ElementaryTypeName","src":"76623:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76571:74:36"},"returnParameters":{"id":39541,"nodeType":"ParameterList","parameters":[],"src":"76659:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39552,"nodeType":"FunctionDefinition","src":"76729:83:36","nodes":[],"documentation":{"id":39543,"nodeType":"StructuredDocumentation","src":"76666:58:36","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"76738:8:36","parameters":{"id":39550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39546,"mutability":"mutable","name":"left","nameLocation":"76766:4:36","nodeType":"VariableDeclaration","scope":39552,"src":"76747:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":39544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"76747:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":39545,"nodeType":"ArrayTypeName","src":"76747:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":39549,"mutability":"mutable","name":"right","nameLocation":"76791:5:36","nodeType":"VariableDeclaration","scope":39552,"src":"76772:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":39547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"76772:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":39548,"nodeType":"ArrayTypeName","src":"76772:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"76746:51:36"},"returnParameters":{"id":39551,"nodeType":"ParameterList","parameters":[],"src":"76811:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39564,"nodeType":"FunctionDefinition","src":"76938:106:36","nodes":[],"documentation":{"id":39553,"nodeType":"StructuredDocumentation","src":"76818:115:36","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"76947:8:36","parameters":{"id":39562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39556,"mutability":"mutable","name":"left","nameLocation":"76975:4:36","nodeType":"VariableDeclaration","scope":39564,"src":"76956:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":39554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"76956:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":39555,"nodeType":"ArrayTypeName","src":"76956:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":39559,"mutability":"mutable","name":"right","nameLocation":"77000:5:36","nodeType":"VariableDeclaration","scope":39564,"src":"76981:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":39557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"76981:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":39558,"nodeType":"ArrayTypeName","src":"76981:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":39561,"mutability":"mutable","name":"error","nameLocation":"77023:5:36","nodeType":"VariableDeclaration","scope":39564,"src":"77007:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39560,"name":"string","nodeType":"ElementaryTypeName","src":"77007:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76955:74:36"},"returnParameters":{"id":39563,"nodeType":"ParameterList","parameters":[],"src":"77043:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39574,"nodeType":"FunctionDefinition","src":"77112:81:36","nodes":[],"documentation":{"id":39565,"nodeType":"StructuredDocumentation","src":"77050:57:36","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"77121:8:36","parameters":{"id":39572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39568,"mutability":"mutable","name":"left","nameLocation":"77148:4:36","nodeType":"VariableDeclaration","scope":39574,"src":"77130:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":39566,"name":"string","nodeType":"ElementaryTypeName","src":"77130:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":39567,"nodeType":"ArrayTypeName","src":"77130:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":39571,"mutability":"mutable","name":"right","nameLocation":"77172:5:36","nodeType":"VariableDeclaration","scope":39574,"src":"77154:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":39569,"name":"string","nodeType":"ElementaryTypeName","src":"77154:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":39570,"nodeType":"ArrayTypeName","src":"77154:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"77129:49:36"},"returnParameters":{"id":39573,"nodeType":"ParameterList","parameters":[],"src":"77192:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39586,"nodeType":"FunctionDefinition","src":"77318:104:36","nodes":[],"documentation":{"id":39575,"nodeType":"StructuredDocumentation","src":"77199:114:36","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"77327:8:36","parameters":{"id":39584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39578,"mutability":"mutable","name":"left","nameLocation":"77354:4:36","nodeType":"VariableDeclaration","scope":39586,"src":"77336:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":39576,"name":"string","nodeType":"ElementaryTypeName","src":"77336:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":39577,"nodeType":"ArrayTypeName","src":"77336:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":39581,"mutability":"mutable","name":"right","nameLocation":"77378:5:36","nodeType":"VariableDeclaration","scope":39586,"src":"77360:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":39579,"name":"string","nodeType":"ElementaryTypeName","src":"77360:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":39580,"nodeType":"ArrayTypeName","src":"77360:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":39583,"mutability":"mutable","name":"error","nameLocation":"77401:5:36","nodeType":"VariableDeclaration","scope":39586,"src":"77385:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39582,"name":"string","nodeType":"ElementaryTypeName","src":"77385:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77335:72:36"},"returnParameters":{"id":39585,"nodeType":"ParameterList","parameters":[],"src":"77421:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39596,"nodeType":"FunctionDefinition","src":"77489:79:36","nodes":[],"documentation":{"id":39587,"nodeType":"StructuredDocumentation","src":"77428:56:36","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"77498:8:36","parameters":{"id":39594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39590,"mutability":"mutable","name":"left","nameLocation":"77524:4:36","nodeType":"VariableDeclaration","scope":39596,"src":"77507:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":39588,"name":"bytes","nodeType":"ElementaryTypeName","src":"77507:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":39589,"nodeType":"ArrayTypeName","src":"77507:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":39593,"mutability":"mutable","name":"right","nameLocation":"77547:5:36","nodeType":"VariableDeclaration","scope":39596,"src":"77530:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":39591,"name":"bytes","nodeType":"ElementaryTypeName","src":"77530:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":39592,"nodeType":"ArrayTypeName","src":"77530:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"77506:47:36"},"returnParameters":{"id":39595,"nodeType":"ParameterList","parameters":[],"src":"77567:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39608,"nodeType":"FunctionDefinition","src":"77692:102:36","nodes":[],"documentation":{"id":39597,"nodeType":"StructuredDocumentation","src":"77574:113:36","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"77701:8:36","parameters":{"id":39606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39600,"mutability":"mutable","name":"left","nameLocation":"77727:4:36","nodeType":"VariableDeclaration","scope":39608,"src":"77710:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":39598,"name":"bytes","nodeType":"ElementaryTypeName","src":"77710:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":39599,"nodeType":"ArrayTypeName","src":"77710:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":39603,"mutability":"mutable","name":"right","nameLocation":"77750:5:36","nodeType":"VariableDeclaration","scope":39608,"src":"77733:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":39601,"name":"bytes","nodeType":"ElementaryTypeName","src":"77733:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":39602,"nodeType":"ArrayTypeName","src":"77733:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":39605,"mutability":"mutable","name":"error","nameLocation":"77773:5:36","nodeType":"VariableDeclaration","scope":39608,"src":"77757:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39604,"name":"string","nodeType":"ElementaryTypeName","src":"77757:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77709:70:36"},"returnParameters":{"id":39607,"nodeType":"ParameterList","parameters":[],"src":"77793:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39618,"nodeType":"FunctionDefinition","src":"77910:84:36","nodes":[],"documentation":{"id":39609,"nodeType":"StructuredDocumentation","src":"77800:105:36","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"77919:8:36","parameters":{"id":39616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39611,"mutability":"mutable","name":"left","nameLocation":"77936:4:36","nodeType":"VariableDeclaration","scope":39618,"src":"77928:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39610,"name":"uint256","nodeType":"ElementaryTypeName","src":"77928:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39613,"mutability":"mutable","name":"right","nameLocation":"77950:5:36","nodeType":"VariableDeclaration","scope":39618,"src":"77942:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39612,"name":"uint256","nodeType":"ElementaryTypeName","src":"77942:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39615,"mutability":"mutable","name":"error","nameLocation":"77973:5:36","nodeType":"VariableDeclaration","scope":39618,"src":"77957:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39614,"name":"string","nodeType":"ElementaryTypeName","src":"77957:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77927:52:36"},"returnParameters":{"id":39617,"nodeType":"ParameterList","parameters":[],"src":"77993:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39626,"nodeType":"FunctionDefinition","src":"78052:59:36","nodes":[],"documentation":{"id":39619,"nodeType":"StructuredDocumentation","src":"78000:47:36","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"78061:8:36","parameters":{"id":39624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39621,"mutability":"mutable","name":"left","nameLocation":"78077:4:36","nodeType":"VariableDeclaration","scope":39626,"src":"78070:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39620,"name":"int256","nodeType":"ElementaryTypeName","src":"78070:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39623,"mutability":"mutable","name":"right","nameLocation":"78090:5:36","nodeType":"VariableDeclaration","scope":39626,"src":"78083:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39622,"name":"int256","nodeType":"ElementaryTypeName","src":"78083:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"78069:27:36"},"returnParameters":{"id":39625,"nodeType":"ParameterList","parameters":[],"src":"78110:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39636,"nodeType":"FunctionDefinition","src":"78226:82:36","nodes":[],"documentation":{"id":39627,"nodeType":"StructuredDocumentation","src":"78117:104:36","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"78235:8:36","parameters":{"id":39634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39629,"mutability":"mutable","name":"left","nameLocation":"78251:4:36","nodeType":"VariableDeclaration","scope":39636,"src":"78244:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39628,"name":"int256","nodeType":"ElementaryTypeName","src":"78244:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39631,"mutability":"mutable","name":"right","nameLocation":"78264:5:36","nodeType":"VariableDeclaration","scope":39636,"src":"78257:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39630,"name":"int256","nodeType":"ElementaryTypeName","src":"78257:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39633,"mutability":"mutable","name":"error","nameLocation":"78287:5:36","nodeType":"VariableDeclaration","scope":39636,"src":"78271:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39632,"name":"string","nodeType":"ElementaryTypeName","src":"78271:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78243:50:36"},"returnParameters":{"id":39635,"nodeType":"ParameterList","parameters":[],"src":"78307:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39644,"nodeType":"FunctionDefinition","src":"78367:61:36","nodes":[],"documentation":{"id":39637,"nodeType":"StructuredDocumentation","src":"78314:48:36","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"78376:8:36","parameters":{"id":39642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39639,"mutability":"mutable","name":"left","nameLocation":"78393:4:36","nodeType":"VariableDeclaration","scope":39644,"src":"78385:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":39638,"name":"address","nodeType":"ElementaryTypeName","src":"78385:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39641,"mutability":"mutable","name":"right","nameLocation":"78407:5:36","nodeType":"VariableDeclaration","scope":39644,"src":"78399:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":39640,"name":"address","nodeType":"ElementaryTypeName","src":"78399:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"78384:29:36"},"returnParameters":{"id":39643,"nodeType":"ParameterList","parameters":[],"src":"78427:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39654,"nodeType":"FunctionDefinition","src":"78544:84:36","nodes":[],"documentation":{"id":39645,"nodeType":"StructuredDocumentation","src":"78434:105:36","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"78553:8:36","parameters":{"id":39652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39647,"mutability":"mutable","name":"left","nameLocation":"78570:4:36","nodeType":"VariableDeclaration","scope":39654,"src":"78562:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":39646,"name":"address","nodeType":"ElementaryTypeName","src":"78562:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39649,"mutability":"mutable","name":"right","nameLocation":"78584:5:36","nodeType":"VariableDeclaration","scope":39654,"src":"78576:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":39648,"name":"address","nodeType":"ElementaryTypeName","src":"78576:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39651,"mutability":"mutable","name":"error","nameLocation":"78607:5:36","nodeType":"VariableDeclaration","scope":39654,"src":"78591:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39650,"name":"string","nodeType":"ElementaryTypeName","src":"78591:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78561:52:36"},"returnParameters":{"id":39653,"nodeType":"ParameterList","parameters":[],"src":"78627:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39662,"nodeType":"FunctionDefinition","src":"78687:61:36","nodes":[],"documentation":{"id":39655,"nodeType":"StructuredDocumentation","src":"78634:48:36","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"78696:8:36","parameters":{"id":39660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39657,"mutability":"mutable","name":"left","nameLocation":"78713:4:36","nodeType":"VariableDeclaration","scope":39662,"src":"78705:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":39656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78705:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":39659,"mutability":"mutable","name":"right","nameLocation":"78727:5:36","nodeType":"VariableDeclaration","scope":39662,"src":"78719:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":39658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78719:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78704:29:36"},"returnParameters":{"id":39661,"nodeType":"ParameterList","parameters":[],"src":"78747:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39672,"nodeType":"FunctionDefinition","src":"78864:84:36","nodes":[],"documentation":{"id":39663,"nodeType":"StructuredDocumentation","src":"78754:105:36","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"78873:8:36","parameters":{"id":39670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39665,"mutability":"mutable","name":"left","nameLocation":"78890:4:36","nodeType":"VariableDeclaration","scope":39672,"src":"78882:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":39664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78882:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":39667,"mutability":"mutable","name":"right","nameLocation":"78904:5:36","nodeType":"VariableDeclaration","scope":39672,"src":"78896:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":39666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78896:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":39669,"mutability":"mutable","name":"error","nameLocation":"78927:5:36","nodeType":"VariableDeclaration","scope":39672,"src":"78911:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39668,"name":"string","nodeType":"ElementaryTypeName","src":"78911:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78881:52:36"},"returnParameters":{"id":39671,"nodeType":"ParameterList","parameters":[],"src":"78947:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39678,"nodeType":"FunctionDefinition","src":"79005:51:36","nodes":[],"documentation":{"id":39673,"nodeType":"StructuredDocumentation","src":"78954:46:36","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"79014:11:36","parameters":{"id":39676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39675,"mutability":"mutable","name":"condition","nameLocation":"79031:9:36","nodeType":"VariableDeclaration","scope":39678,"src":"79026:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39674,"name":"bool","nodeType":"ElementaryTypeName","src":"79026:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"79025:16:36"},"returnParameters":{"id":39677,"nodeType":"ParameterList","parameters":[],"src":"79055:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39686,"nodeType":"FunctionDefinition","src":"79170:74:36","nodes":[],"documentation":{"id":39679,"nodeType":"StructuredDocumentation","src":"79062:103:36","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"79179:11:36","parameters":{"id":39684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39681,"mutability":"mutable","name":"condition","nameLocation":"79196:9:36","nodeType":"VariableDeclaration","scope":39686,"src":"79191:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39680,"name":"bool","nodeType":"ElementaryTypeName","src":"79191:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":39683,"mutability":"mutable","name":"error","nameLocation":"79223:5:36","nodeType":"VariableDeclaration","scope":39686,"src":"79207:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39682,"name":"string","nodeType":"ElementaryTypeName","src":"79207:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79190:39:36"},"returnParameters":{"id":39685,"nodeType":"ParameterList","parameters":[],"src":"79243:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39696,"nodeType":"FunctionDefinition","src":"79405:86:36","nodes":[],"documentation":{"id":39687,"nodeType":"StructuredDocumentation","src":"79250:150:36","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"79414:15:36","parameters":{"id":39694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39689,"mutability":"mutable","name":"left","nameLocation":"79438:4:36","nodeType":"VariableDeclaration","scope":39696,"src":"79430:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39688,"name":"uint256","nodeType":"ElementaryTypeName","src":"79430:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39691,"mutability":"mutable","name":"right","nameLocation":"79452:5:36","nodeType":"VariableDeclaration","scope":39696,"src":"79444:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39690,"name":"uint256","nodeType":"ElementaryTypeName","src":"79444:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39693,"mutability":"mutable","name":"decimals","nameLocation":"79467:8:36","nodeType":"VariableDeclaration","scope":39696,"src":"79459:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39692,"name":"uint256","nodeType":"ElementaryTypeName","src":"79459:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79429:47:36"},"returnParameters":{"id":39695,"nodeType":"ParameterList","parameters":[],"src":"79490:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39708,"nodeType":"FunctionDefinition","src":"79706:109:36","nodes":[],"documentation":{"id":39697,"nodeType":"StructuredDocumentation","src":"79497:204:36","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"79715:15:36","parameters":{"id":39706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39699,"mutability":"mutable","name":"left","nameLocation":"79739:4:36","nodeType":"VariableDeclaration","scope":39708,"src":"79731:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39698,"name":"uint256","nodeType":"ElementaryTypeName","src":"79731:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39701,"mutability":"mutable","name":"right","nameLocation":"79753:5:36","nodeType":"VariableDeclaration","scope":39708,"src":"79745:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39700,"name":"uint256","nodeType":"ElementaryTypeName","src":"79745:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39703,"mutability":"mutable","name":"decimals","nameLocation":"79768:8:36","nodeType":"VariableDeclaration","scope":39708,"src":"79760:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39702,"name":"uint256","nodeType":"ElementaryTypeName","src":"79760:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39705,"mutability":"mutable","name":"error","nameLocation":"79794:5:36","nodeType":"VariableDeclaration","scope":39708,"src":"79778:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39704,"name":"string","nodeType":"ElementaryTypeName","src":"79778:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79730:70:36"},"returnParameters":{"id":39707,"nodeType":"ParameterList","parameters":[],"src":"79814:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39718,"nodeType":"FunctionDefinition","src":"79975:84:36","nodes":[],"documentation":{"id":39709,"nodeType":"StructuredDocumentation","src":"79821:149:36","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"79984:15:36","parameters":{"id":39716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39711,"mutability":"mutable","name":"left","nameLocation":"80007:4:36","nodeType":"VariableDeclaration","scope":39718,"src":"80000:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39710,"name":"int256","nodeType":"ElementaryTypeName","src":"80000:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39713,"mutability":"mutable","name":"right","nameLocation":"80020:5:36","nodeType":"VariableDeclaration","scope":39718,"src":"80013:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39712,"name":"int256","nodeType":"ElementaryTypeName","src":"80013:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39715,"mutability":"mutable","name":"decimals","nameLocation":"80035:8:36","nodeType":"VariableDeclaration","scope":39718,"src":"80027:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39714,"name":"uint256","nodeType":"ElementaryTypeName","src":"80027:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79999:45:36"},"returnParameters":{"id":39717,"nodeType":"ParameterList","parameters":[],"src":"80058:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39730,"nodeType":"FunctionDefinition","src":"80273:107:36","nodes":[],"documentation":{"id":39719,"nodeType":"StructuredDocumentation","src":"80065:203:36","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"80282:15:36","parameters":{"id":39728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39721,"mutability":"mutable","name":"left","nameLocation":"80305:4:36","nodeType":"VariableDeclaration","scope":39730,"src":"80298:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39720,"name":"int256","nodeType":"ElementaryTypeName","src":"80298:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39723,"mutability":"mutable","name":"right","nameLocation":"80318:5:36","nodeType":"VariableDeclaration","scope":39730,"src":"80311:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39722,"name":"int256","nodeType":"ElementaryTypeName","src":"80311:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39725,"mutability":"mutable","name":"decimals","nameLocation":"80333:8:36","nodeType":"VariableDeclaration","scope":39730,"src":"80325:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39724,"name":"uint256","nodeType":"ElementaryTypeName","src":"80325:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39727,"mutability":"mutable","name":"error","nameLocation":"80359:5:36","nodeType":"VariableDeclaration","scope":39730,"src":"80343:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39726,"name":"string","nodeType":"ElementaryTypeName","src":"80343:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80297:68:36"},"returnParameters":{"id":39729,"nodeType":"ParameterList","parameters":[],"src":"80379:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39738,"nodeType":"FunctionDefinition","src":"80484:61:36","nodes":[],"documentation":{"id":39731,"nodeType":"StructuredDocumentation","src":"80386:93:36","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"80493:8:36","parameters":{"id":39736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39733,"mutability":"mutable","name":"left","nameLocation":"80510:4:36","nodeType":"VariableDeclaration","scope":39738,"src":"80502:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39732,"name":"uint256","nodeType":"ElementaryTypeName","src":"80502:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39735,"mutability":"mutable","name":"right","nameLocation":"80524:5:36","nodeType":"VariableDeclaration","scope":39738,"src":"80516:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39734,"name":"uint256","nodeType":"ElementaryTypeName","src":"80516:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80501:29:36"},"returnParameters":{"id":39737,"nodeType":"ParameterList","parameters":[],"src":"80544:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39748,"nodeType":"FunctionDefinition","src":"80711:84:36","nodes":[],"documentation":{"id":39739,"nodeType":"StructuredDocumentation","src":"80551:155:36","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"80720:8:36","parameters":{"id":39746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39741,"mutability":"mutable","name":"left","nameLocation":"80737:4:36","nodeType":"VariableDeclaration","scope":39748,"src":"80729:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39740,"name":"uint256","nodeType":"ElementaryTypeName","src":"80729:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39743,"mutability":"mutable","name":"right","nameLocation":"80751:5:36","nodeType":"VariableDeclaration","scope":39748,"src":"80743:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39742,"name":"uint256","nodeType":"ElementaryTypeName","src":"80743:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39745,"mutability":"mutable","name":"error","nameLocation":"80774:5:36","nodeType":"VariableDeclaration","scope":39748,"src":"80758:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39744,"name":"string","nodeType":"ElementaryTypeName","src":"80758:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80728:52:36"},"returnParameters":{"id":39747,"nodeType":"ParameterList","parameters":[],"src":"80794:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39756,"nodeType":"FunctionDefinition","src":"80898:59:36","nodes":[],"documentation":{"id":39749,"nodeType":"StructuredDocumentation","src":"80801:92:36","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"80907:8:36","parameters":{"id":39754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39751,"mutability":"mutable","name":"left","nameLocation":"80923:4:36","nodeType":"VariableDeclaration","scope":39756,"src":"80916:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39750,"name":"int256","nodeType":"ElementaryTypeName","src":"80916:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39753,"mutability":"mutable","name":"right","nameLocation":"80936:5:36","nodeType":"VariableDeclaration","scope":39756,"src":"80929:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39752,"name":"int256","nodeType":"ElementaryTypeName","src":"80929:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"80915:27:36"},"returnParameters":{"id":39755,"nodeType":"ParameterList","parameters":[],"src":"80956:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39766,"nodeType":"FunctionDefinition","src":"81122:82:36","nodes":[],"documentation":{"id":39757,"nodeType":"StructuredDocumentation","src":"80963:154:36","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"81131:8:36","parameters":{"id":39764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39759,"mutability":"mutable","name":"left","nameLocation":"81147:4:36","nodeType":"VariableDeclaration","scope":39766,"src":"81140:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39758,"name":"int256","nodeType":"ElementaryTypeName","src":"81140:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39761,"mutability":"mutable","name":"right","nameLocation":"81160:5:36","nodeType":"VariableDeclaration","scope":39766,"src":"81153:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39760,"name":"int256","nodeType":"ElementaryTypeName","src":"81153:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39763,"mutability":"mutable","name":"error","nameLocation":"81183:5:36","nodeType":"VariableDeclaration","scope":39766,"src":"81167:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39762,"name":"string","nodeType":"ElementaryTypeName","src":"81167:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81139:50:36"},"returnParameters":{"id":39765,"nodeType":"ParameterList","parameters":[],"src":"81203:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39776,"nodeType":"FunctionDefinition","src":"81353:86:36","nodes":[],"documentation":{"id":39767,"nodeType":"StructuredDocumentation","src":"81210:138:36","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"81362:15:36","parameters":{"id":39774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39769,"mutability":"mutable","name":"left","nameLocation":"81386:4:36","nodeType":"VariableDeclaration","scope":39776,"src":"81378:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39768,"name":"uint256","nodeType":"ElementaryTypeName","src":"81378:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39771,"mutability":"mutable","name":"right","nameLocation":"81400:5:36","nodeType":"VariableDeclaration","scope":39776,"src":"81392:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39770,"name":"uint256","nodeType":"ElementaryTypeName","src":"81392:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39773,"mutability":"mutable","name":"decimals","nameLocation":"81415:8:36","nodeType":"VariableDeclaration","scope":39776,"src":"81407:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39772,"name":"uint256","nodeType":"ElementaryTypeName","src":"81407:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81377:47:36"},"returnParameters":{"id":39775,"nodeType":"ParameterList","parameters":[],"src":"81438:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39788,"nodeType":"FunctionDefinition","src":"81642:109:36","nodes":[],"documentation":{"id":39777,"nodeType":"StructuredDocumentation","src":"81445:192:36","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"81651:15:36","parameters":{"id":39786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39779,"mutability":"mutable","name":"left","nameLocation":"81675:4:36","nodeType":"VariableDeclaration","scope":39788,"src":"81667:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39778,"name":"uint256","nodeType":"ElementaryTypeName","src":"81667:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39781,"mutability":"mutable","name":"right","nameLocation":"81689:5:36","nodeType":"VariableDeclaration","scope":39788,"src":"81681:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39780,"name":"uint256","nodeType":"ElementaryTypeName","src":"81681:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39783,"mutability":"mutable","name":"decimals","nameLocation":"81704:8:36","nodeType":"VariableDeclaration","scope":39788,"src":"81696:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39782,"name":"uint256","nodeType":"ElementaryTypeName","src":"81696:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39785,"mutability":"mutable","name":"error","nameLocation":"81730:5:36","nodeType":"VariableDeclaration","scope":39788,"src":"81714:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39784,"name":"string","nodeType":"ElementaryTypeName","src":"81714:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81666:70:36"},"returnParameters":{"id":39787,"nodeType":"ParameterList","parameters":[],"src":"81750:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39798,"nodeType":"FunctionDefinition","src":"81899:84:36","nodes":[],"documentation":{"id":39789,"nodeType":"StructuredDocumentation","src":"81757:137:36","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"81908:15:36","parameters":{"id":39796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39791,"mutability":"mutable","name":"left","nameLocation":"81931:4:36","nodeType":"VariableDeclaration","scope":39798,"src":"81924:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39790,"name":"int256","nodeType":"ElementaryTypeName","src":"81924:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39793,"mutability":"mutable","name":"right","nameLocation":"81944:5:36","nodeType":"VariableDeclaration","scope":39798,"src":"81937:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39792,"name":"int256","nodeType":"ElementaryTypeName","src":"81937:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39795,"mutability":"mutable","name":"decimals","nameLocation":"81959:8:36","nodeType":"VariableDeclaration","scope":39798,"src":"81951:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39794,"name":"uint256","nodeType":"ElementaryTypeName","src":"81951:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81923:45:36"},"returnParameters":{"id":39797,"nodeType":"ParameterList","parameters":[],"src":"81982:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39810,"nodeType":"FunctionDefinition","src":"82185:107:36","nodes":[],"documentation":{"id":39799,"nodeType":"StructuredDocumentation","src":"81989:191:36","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"82194:15:36","parameters":{"id":39808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39801,"mutability":"mutable","name":"left","nameLocation":"82217:4:36","nodeType":"VariableDeclaration","scope":39810,"src":"82210:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39800,"name":"int256","nodeType":"ElementaryTypeName","src":"82210:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39803,"mutability":"mutable","name":"right","nameLocation":"82230:5:36","nodeType":"VariableDeclaration","scope":39810,"src":"82223:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39802,"name":"int256","nodeType":"ElementaryTypeName","src":"82223:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39805,"mutability":"mutable","name":"decimals","nameLocation":"82245:8:36","nodeType":"VariableDeclaration","scope":39810,"src":"82237:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39804,"name":"uint256","nodeType":"ElementaryTypeName","src":"82237:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39807,"mutability":"mutable","name":"error","nameLocation":"82271:5:36","nodeType":"VariableDeclaration","scope":39810,"src":"82255:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39806,"name":"string","nodeType":"ElementaryTypeName","src":"82255:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82209:68:36"},"returnParameters":{"id":39809,"nodeType":"ParameterList","parameters":[],"src":"82291:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39818,"nodeType":"FunctionDefinition","src":"82384:61:36","nodes":[],"documentation":{"id":39811,"nodeType":"StructuredDocumentation","src":"82298:81:36","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"82393:8:36","parameters":{"id":39816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39813,"mutability":"mutable","name":"left","nameLocation":"82410:4:36","nodeType":"VariableDeclaration","scope":39818,"src":"82402:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39812,"name":"uint256","nodeType":"ElementaryTypeName","src":"82402:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39815,"mutability":"mutable","name":"right","nameLocation":"82424:5:36","nodeType":"VariableDeclaration","scope":39818,"src":"82416:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39814,"name":"uint256","nodeType":"ElementaryTypeName","src":"82416:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82401:29:36"},"returnParameters":{"id":39817,"nodeType":"ParameterList","parameters":[],"src":"82444:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39828,"nodeType":"FunctionDefinition","src":"82599:84:36","nodes":[],"documentation":{"id":39819,"nodeType":"StructuredDocumentation","src":"82451:143:36","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"82608:8:36","parameters":{"id":39826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39821,"mutability":"mutable","name":"left","nameLocation":"82625:4:36","nodeType":"VariableDeclaration","scope":39828,"src":"82617:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39820,"name":"uint256","nodeType":"ElementaryTypeName","src":"82617:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39823,"mutability":"mutable","name":"right","nameLocation":"82639:5:36","nodeType":"VariableDeclaration","scope":39828,"src":"82631:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39822,"name":"uint256","nodeType":"ElementaryTypeName","src":"82631:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39825,"mutability":"mutable","name":"error","nameLocation":"82662:5:36","nodeType":"VariableDeclaration","scope":39828,"src":"82646:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39824,"name":"string","nodeType":"ElementaryTypeName","src":"82646:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82616:52:36"},"returnParameters":{"id":39827,"nodeType":"ParameterList","parameters":[],"src":"82682:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39836,"nodeType":"FunctionDefinition","src":"82774:59:36","nodes":[],"documentation":{"id":39829,"nodeType":"StructuredDocumentation","src":"82689:80:36","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"82783:8:36","parameters":{"id":39834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39831,"mutability":"mutable","name":"left","nameLocation":"82799:4:36","nodeType":"VariableDeclaration","scope":39836,"src":"82792:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39830,"name":"int256","nodeType":"ElementaryTypeName","src":"82792:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39833,"mutability":"mutable","name":"right","nameLocation":"82812:5:36","nodeType":"VariableDeclaration","scope":39836,"src":"82805:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39832,"name":"int256","nodeType":"ElementaryTypeName","src":"82805:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"82791:27:36"},"returnParameters":{"id":39835,"nodeType":"ParameterList","parameters":[],"src":"82832:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39846,"nodeType":"FunctionDefinition","src":"82986:82:36","nodes":[],"documentation":{"id":39837,"nodeType":"StructuredDocumentation","src":"82839:142:36","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"82995:8:36","parameters":{"id":39844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39839,"mutability":"mutable","name":"left","nameLocation":"83011:4:36","nodeType":"VariableDeclaration","scope":39846,"src":"83004:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39838,"name":"int256","nodeType":"ElementaryTypeName","src":"83004:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39841,"mutability":"mutable","name":"right","nameLocation":"83024:5:36","nodeType":"VariableDeclaration","scope":39846,"src":"83017:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39840,"name":"int256","nodeType":"ElementaryTypeName","src":"83017:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39843,"mutability":"mutable","name":"error","nameLocation":"83047:5:36","nodeType":"VariableDeclaration","scope":39846,"src":"83031:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39842,"name":"string","nodeType":"ElementaryTypeName","src":"83031:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83003:50:36"},"returnParameters":{"id":39845,"nodeType":"ParameterList","parameters":[],"src":"83067:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39856,"nodeType":"FunctionDefinition","src":"83226:86:36","nodes":[],"documentation":{"id":39847,"nodeType":"StructuredDocumentation","src":"83074:147:36","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"83235:15:36","parameters":{"id":39854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39849,"mutability":"mutable","name":"left","nameLocation":"83259:4:36","nodeType":"VariableDeclaration","scope":39856,"src":"83251:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39848,"name":"uint256","nodeType":"ElementaryTypeName","src":"83251:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39851,"mutability":"mutable","name":"right","nameLocation":"83273:5:36","nodeType":"VariableDeclaration","scope":39856,"src":"83265:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39850,"name":"uint256","nodeType":"ElementaryTypeName","src":"83265:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39853,"mutability":"mutable","name":"decimals","nameLocation":"83288:8:36","nodeType":"VariableDeclaration","scope":39856,"src":"83280:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39852,"name":"uint256","nodeType":"ElementaryTypeName","src":"83280:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83250:47:36"},"returnParameters":{"id":39855,"nodeType":"ParameterList","parameters":[],"src":"83311:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39868,"nodeType":"FunctionDefinition","src":"83524:109:36","nodes":[],"documentation":{"id":39857,"nodeType":"StructuredDocumentation","src":"83318:201:36","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"83533:15:36","parameters":{"id":39866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39859,"mutability":"mutable","name":"left","nameLocation":"83557:4:36","nodeType":"VariableDeclaration","scope":39868,"src":"83549:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39858,"name":"uint256","nodeType":"ElementaryTypeName","src":"83549:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39861,"mutability":"mutable","name":"right","nameLocation":"83571:5:36","nodeType":"VariableDeclaration","scope":39868,"src":"83563:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39860,"name":"uint256","nodeType":"ElementaryTypeName","src":"83563:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39863,"mutability":"mutable","name":"decimals","nameLocation":"83586:8:36","nodeType":"VariableDeclaration","scope":39868,"src":"83578:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39862,"name":"uint256","nodeType":"ElementaryTypeName","src":"83578:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39865,"mutability":"mutable","name":"error","nameLocation":"83612:5:36","nodeType":"VariableDeclaration","scope":39868,"src":"83596:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39864,"name":"string","nodeType":"ElementaryTypeName","src":"83596:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83548:70:36"},"returnParameters":{"id":39867,"nodeType":"ParameterList","parameters":[],"src":"83632:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39878,"nodeType":"FunctionDefinition","src":"83790:84:36","nodes":[],"documentation":{"id":39869,"nodeType":"StructuredDocumentation","src":"83639:146:36","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"83799:15:36","parameters":{"id":39876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39871,"mutability":"mutable","name":"left","nameLocation":"83822:4:36","nodeType":"VariableDeclaration","scope":39878,"src":"83815:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39870,"name":"int256","nodeType":"ElementaryTypeName","src":"83815:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39873,"mutability":"mutable","name":"right","nameLocation":"83835:5:36","nodeType":"VariableDeclaration","scope":39878,"src":"83828:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39872,"name":"int256","nodeType":"ElementaryTypeName","src":"83828:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39875,"mutability":"mutable","name":"decimals","nameLocation":"83850:8:36","nodeType":"VariableDeclaration","scope":39878,"src":"83842:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39874,"name":"uint256","nodeType":"ElementaryTypeName","src":"83842:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83814:45:36"},"returnParameters":{"id":39877,"nodeType":"ParameterList","parameters":[],"src":"83873:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39890,"nodeType":"FunctionDefinition","src":"84085:107:36","nodes":[],"documentation":{"id":39879,"nodeType":"StructuredDocumentation","src":"83880:200:36","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"84094:15:36","parameters":{"id":39888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39881,"mutability":"mutable","name":"left","nameLocation":"84117:4:36","nodeType":"VariableDeclaration","scope":39890,"src":"84110:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39880,"name":"int256","nodeType":"ElementaryTypeName","src":"84110:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39883,"mutability":"mutable","name":"right","nameLocation":"84130:5:36","nodeType":"VariableDeclaration","scope":39890,"src":"84123:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39882,"name":"int256","nodeType":"ElementaryTypeName","src":"84123:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39885,"mutability":"mutable","name":"decimals","nameLocation":"84145:8:36","nodeType":"VariableDeclaration","scope":39890,"src":"84137:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39884,"name":"uint256","nodeType":"ElementaryTypeName","src":"84137:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39887,"mutability":"mutable","name":"error","nameLocation":"84171:5:36","nodeType":"VariableDeclaration","scope":39890,"src":"84155:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39886,"name":"string","nodeType":"ElementaryTypeName","src":"84155:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84109:68:36"},"returnParameters":{"id":39889,"nodeType":"ParameterList","parameters":[],"src":"84191:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39898,"nodeType":"FunctionDefinition","src":"84293:61:36","nodes":[],"documentation":{"id":39891,"nodeType":"StructuredDocumentation","src":"84198:90:36","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"84302:8:36","parameters":{"id":39896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39893,"mutability":"mutable","name":"left","nameLocation":"84319:4:36","nodeType":"VariableDeclaration","scope":39898,"src":"84311:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39892,"name":"uint256","nodeType":"ElementaryTypeName","src":"84311:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39895,"mutability":"mutable","name":"right","nameLocation":"84333:5:36","nodeType":"VariableDeclaration","scope":39898,"src":"84325:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39894,"name":"uint256","nodeType":"ElementaryTypeName","src":"84325:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84310:29:36"},"returnParameters":{"id":39897,"nodeType":"ParameterList","parameters":[],"src":"84353:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39908,"nodeType":"FunctionDefinition","src":"84517:84:36","nodes":[],"documentation":{"id":39899,"nodeType":"StructuredDocumentation","src":"84360:152:36","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"84526:8:36","parameters":{"id":39906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39901,"mutability":"mutable","name":"left","nameLocation":"84543:4:36","nodeType":"VariableDeclaration","scope":39908,"src":"84535:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39900,"name":"uint256","nodeType":"ElementaryTypeName","src":"84535:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39903,"mutability":"mutable","name":"right","nameLocation":"84557:5:36","nodeType":"VariableDeclaration","scope":39908,"src":"84549:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39902,"name":"uint256","nodeType":"ElementaryTypeName","src":"84549:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39905,"mutability":"mutable","name":"error","nameLocation":"84580:5:36","nodeType":"VariableDeclaration","scope":39908,"src":"84564:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39904,"name":"string","nodeType":"ElementaryTypeName","src":"84564:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84534:52:36"},"returnParameters":{"id":39907,"nodeType":"ParameterList","parameters":[],"src":"84600:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39916,"nodeType":"FunctionDefinition","src":"84701:59:36","nodes":[],"documentation":{"id":39909,"nodeType":"StructuredDocumentation","src":"84607:89:36","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"84710:8:36","parameters":{"id":39914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39911,"mutability":"mutable","name":"left","nameLocation":"84726:4:36","nodeType":"VariableDeclaration","scope":39916,"src":"84719:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39910,"name":"int256","nodeType":"ElementaryTypeName","src":"84719:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39913,"mutability":"mutable","name":"right","nameLocation":"84739:5:36","nodeType":"VariableDeclaration","scope":39916,"src":"84732:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39912,"name":"int256","nodeType":"ElementaryTypeName","src":"84732:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"84718:27:36"},"returnParameters":{"id":39915,"nodeType":"ParameterList","parameters":[],"src":"84759:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39926,"nodeType":"FunctionDefinition","src":"84922:82:36","nodes":[],"documentation":{"id":39917,"nodeType":"StructuredDocumentation","src":"84766:151:36","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"84931:8:36","parameters":{"id":39924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39919,"mutability":"mutable","name":"left","nameLocation":"84947:4:36","nodeType":"VariableDeclaration","scope":39926,"src":"84940:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39918,"name":"int256","nodeType":"ElementaryTypeName","src":"84940:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39921,"mutability":"mutable","name":"right","nameLocation":"84960:5:36","nodeType":"VariableDeclaration","scope":39926,"src":"84953:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39920,"name":"int256","nodeType":"ElementaryTypeName","src":"84953:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39923,"mutability":"mutable","name":"error","nameLocation":"84983:5:36","nodeType":"VariableDeclaration","scope":39926,"src":"84967:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39922,"name":"string","nodeType":"ElementaryTypeName","src":"84967:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84939:50:36"},"returnParameters":{"id":39925,"nodeType":"ParameterList","parameters":[],"src":"85003:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39936,"nodeType":"FunctionDefinition","src":"85150:86:36","nodes":[],"documentation":{"id":39927,"nodeType":"StructuredDocumentation","src":"85010:135:36","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"85159:15:36","parameters":{"id":39934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39929,"mutability":"mutable","name":"left","nameLocation":"85183:4:36","nodeType":"VariableDeclaration","scope":39936,"src":"85175:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39928,"name":"uint256","nodeType":"ElementaryTypeName","src":"85175:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39931,"mutability":"mutable","name":"right","nameLocation":"85197:5:36","nodeType":"VariableDeclaration","scope":39936,"src":"85189:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39930,"name":"uint256","nodeType":"ElementaryTypeName","src":"85189:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39933,"mutability":"mutable","name":"decimals","nameLocation":"85212:8:36","nodeType":"VariableDeclaration","scope":39936,"src":"85204:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39932,"name":"uint256","nodeType":"ElementaryTypeName","src":"85204:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85174:47:36"},"returnParameters":{"id":39935,"nodeType":"ParameterList","parameters":[],"src":"85235:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39948,"nodeType":"FunctionDefinition","src":"85436:109:36","nodes":[],"documentation":{"id":39937,"nodeType":"StructuredDocumentation","src":"85242:189:36","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"85445:15:36","parameters":{"id":39946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39939,"mutability":"mutable","name":"left","nameLocation":"85469:4:36","nodeType":"VariableDeclaration","scope":39948,"src":"85461:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39938,"name":"uint256","nodeType":"ElementaryTypeName","src":"85461:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39941,"mutability":"mutable","name":"right","nameLocation":"85483:5:36","nodeType":"VariableDeclaration","scope":39948,"src":"85475:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39940,"name":"uint256","nodeType":"ElementaryTypeName","src":"85475:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39943,"mutability":"mutable","name":"decimals","nameLocation":"85498:8:36","nodeType":"VariableDeclaration","scope":39948,"src":"85490:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39942,"name":"uint256","nodeType":"ElementaryTypeName","src":"85490:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39945,"mutability":"mutable","name":"error","nameLocation":"85524:5:36","nodeType":"VariableDeclaration","scope":39948,"src":"85508:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39944,"name":"string","nodeType":"ElementaryTypeName","src":"85508:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85460:70:36"},"returnParameters":{"id":39947,"nodeType":"ParameterList","parameters":[],"src":"85544:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39958,"nodeType":"FunctionDefinition","src":"85690:84:36","nodes":[],"documentation":{"id":39949,"nodeType":"StructuredDocumentation","src":"85551:134:36","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"85699:15:36","parameters":{"id":39956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39951,"mutability":"mutable","name":"left","nameLocation":"85722:4:36","nodeType":"VariableDeclaration","scope":39958,"src":"85715:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39950,"name":"int256","nodeType":"ElementaryTypeName","src":"85715:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39953,"mutability":"mutable","name":"right","nameLocation":"85735:5:36","nodeType":"VariableDeclaration","scope":39958,"src":"85728:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39952,"name":"int256","nodeType":"ElementaryTypeName","src":"85728:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39955,"mutability":"mutable","name":"decimals","nameLocation":"85750:8:36","nodeType":"VariableDeclaration","scope":39958,"src":"85742:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39954,"name":"uint256","nodeType":"ElementaryTypeName","src":"85742:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85714:45:36"},"returnParameters":{"id":39957,"nodeType":"ParameterList","parameters":[],"src":"85773:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39970,"nodeType":"FunctionDefinition","src":"85973:107:36","nodes":[],"documentation":{"id":39959,"nodeType":"StructuredDocumentation","src":"85780:188:36","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"85982:15:36","parameters":{"id":39968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39961,"mutability":"mutable","name":"left","nameLocation":"86005:4:36","nodeType":"VariableDeclaration","scope":39970,"src":"85998:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39960,"name":"int256","nodeType":"ElementaryTypeName","src":"85998:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39963,"mutability":"mutable","name":"right","nameLocation":"86018:5:36","nodeType":"VariableDeclaration","scope":39970,"src":"86011:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39962,"name":"int256","nodeType":"ElementaryTypeName","src":"86011:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39965,"mutability":"mutable","name":"decimals","nameLocation":"86033:8:36","nodeType":"VariableDeclaration","scope":39970,"src":"86025:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39964,"name":"uint256","nodeType":"ElementaryTypeName","src":"86025:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39967,"mutability":"mutable","name":"error","nameLocation":"86059:5:36","nodeType":"VariableDeclaration","scope":39970,"src":"86043:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39966,"name":"string","nodeType":"ElementaryTypeName","src":"86043:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85997:68:36"},"returnParameters":{"id":39969,"nodeType":"ParameterList","parameters":[],"src":"86079:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39978,"nodeType":"FunctionDefinition","src":"86169:61:36","nodes":[],"documentation":{"id":39971,"nodeType":"StructuredDocumentation","src":"86086:78:36","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"86178:8:36","parameters":{"id":39976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39973,"mutability":"mutable","name":"left","nameLocation":"86195:4:36","nodeType":"VariableDeclaration","scope":39978,"src":"86187:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39972,"name":"uint256","nodeType":"ElementaryTypeName","src":"86187:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39975,"mutability":"mutable","name":"right","nameLocation":"86209:5:36","nodeType":"VariableDeclaration","scope":39978,"src":"86201:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39974,"name":"uint256","nodeType":"ElementaryTypeName","src":"86201:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86186:29:36"},"returnParameters":{"id":39977,"nodeType":"ParameterList","parameters":[],"src":"86229:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39988,"nodeType":"FunctionDefinition","src":"86381:84:36","nodes":[],"documentation":{"id":39979,"nodeType":"StructuredDocumentation","src":"86236:140:36","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"86390:8:36","parameters":{"id":39986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39981,"mutability":"mutable","name":"left","nameLocation":"86407:4:36","nodeType":"VariableDeclaration","scope":39988,"src":"86399:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39980,"name":"uint256","nodeType":"ElementaryTypeName","src":"86399:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39983,"mutability":"mutable","name":"right","nameLocation":"86421:5:36","nodeType":"VariableDeclaration","scope":39988,"src":"86413:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39982,"name":"uint256","nodeType":"ElementaryTypeName","src":"86413:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39985,"mutability":"mutable","name":"error","nameLocation":"86444:5:36","nodeType":"VariableDeclaration","scope":39988,"src":"86428:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":39984,"name":"string","nodeType":"ElementaryTypeName","src":"86428:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86398:52:36"},"returnParameters":{"id":39987,"nodeType":"ParameterList","parameters":[],"src":"86464:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":39996,"nodeType":"FunctionDefinition","src":"86553:59:36","nodes":[],"documentation":{"id":39989,"nodeType":"StructuredDocumentation","src":"86471:77:36","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"86562:8:36","parameters":{"id":39994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39991,"mutability":"mutable","name":"left","nameLocation":"86578:4:36","nodeType":"VariableDeclaration","scope":39996,"src":"86571:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39990,"name":"int256","nodeType":"ElementaryTypeName","src":"86571:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":39993,"mutability":"mutable","name":"right","nameLocation":"86591:5:36","nodeType":"VariableDeclaration","scope":39996,"src":"86584:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39992,"name":"int256","nodeType":"ElementaryTypeName","src":"86584:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"86570:27:36"},"returnParameters":{"id":39995,"nodeType":"ParameterList","parameters":[],"src":"86611:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40006,"nodeType":"FunctionDefinition","src":"86762:82:36","nodes":[],"documentation":{"id":39997,"nodeType":"StructuredDocumentation","src":"86618:139:36","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"86771:8:36","parameters":{"id":40004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39999,"mutability":"mutable","name":"left","nameLocation":"86787:4:36","nodeType":"VariableDeclaration","scope":40006,"src":"86780:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39998,"name":"int256","nodeType":"ElementaryTypeName","src":"86780:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":40001,"mutability":"mutable","name":"right","nameLocation":"86800:5:36","nodeType":"VariableDeclaration","scope":40006,"src":"86793:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":40000,"name":"int256","nodeType":"ElementaryTypeName","src":"86793:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":40003,"mutability":"mutable","name":"error","nameLocation":"86823:5:36","nodeType":"VariableDeclaration","scope":40006,"src":"86807:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40002,"name":"string","nodeType":"ElementaryTypeName","src":"86807:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86779:50:36"},"returnParameters":{"id":40005,"nodeType":"ParameterList","parameters":[],"src":"86843:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40016,"nodeType":"FunctionDefinition","src":"86957:89:36","nodes":[],"documentation":{"id":40007,"nodeType":"StructuredDocumentation","src":"86850:102:36","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"86966:18:36","parameters":{"id":40014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40009,"mutability":"mutable","name":"left","nameLocation":"86993:4:36","nodeType":"VariableDeclaration","scope":40016,"src":"86985:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40008,"name":"uint256","nodeType":"ElementaryTypeName","src":"86985:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40011,"mutability":"mutable","name":"right","nameLocation":"87007:5:36","nodeType":"VariableDeclaration","scope":40016,"src":"86999:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40010,"name":"uint256","nodeType":"ElementaryTypeName","src":"86999:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40013,"mutability":"mutable","name":"decimals","nameLocation":"87022:8:36","nodeType":"VariableDeclaration","scope":40016,"src":"87014:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40012,"name":"uint256","nodeType":"ElementaryTypeName","src":"87014:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86984:47:36"},"returnParameters":{"id":40015,"nodeType":"ParameterList","parameters":[],"src":"87045:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40028,"nodeType":"FunctionDefinition","src":"87221:112:36","nodes":[],"documentation":{"id":40017,"nodeType":"StructuredDocumentation","src":"87052:164:36","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"87230:18:36","parameters":{"id":40026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40019,"mutability":"mutable","name":"left","nameLocation":"87257:4:36","nodeType":"VariableDeclaration","scope":40028,"src":"87249:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40018,"name":"uint256","nodeType":"ElementaryTypeName","src":"87249:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40021,"mutability":"mutable","name":"right","nameLocation":"87271:5:36","nodeType":"VariableDeclaration","scope":40028,"src":"87263:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40020,"name":"uint256","nodeType":"ElementaryTypeName","src":"87263:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40023,"mutability":"mutable","name":"decimals","nameLocation":"87286:8:36","nodeType":"VariableDeclaration","scope":40028,"src":"87278:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40022,"name":"uint256","nodeType":"ElementaryTypeName","src":"87278:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40025,"mutability":"mutable","name":"error","nameLocation":"87312:5:36","nodeType":"VariableDeclaration","scope":40028,"src":"87296:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40024,"name":"string","nodeType":"ElementaryTypeName","src":"87296:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87248:70:36"},"returnParameters":{"id":40027,"nodeType":"ParameterList","parameters":[],"src":"87332:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40038,"nodeType":"FunctionDefinition","src":"87445:87:36","nodes":[],"documentation":{"id":40029,"nodeType":"StructuredDocumentation","src":"87339:101:36","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"87454:18:36","parameters":{"id":40036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40031,"mutability":"mutable","name":"left","nameLocation":"87480:4:36","nodeType":"VariableDeclaration","scope":40038,"src":"87473:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":40030,"name":"int256","nodeType":"ElementaryTypeName","src":"87473:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":40033,"mutability":"mutable","name":"right","nameLocation":"87493:5:36","nodeType":"VariableDeclaration","scope":40038,"src":"87486:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":40032,"name":"int256","nodeType":"ElementaryTypeName","src":"87486:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":40035,"mutability":"mutable","name":"decimals","nameLocation":"87508:8:36","nodeType":"VariableDeclaration","scope":40038,"src":"87500:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40034,"name":"uint256","nodeType":"ElementaryTypeName","src":"87500:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87472:45:36"},"returnParameters":{"id":40037,"nodeType":"ParameterList","parameters":[],"src":"87531:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40050,"nodeType":"FunctionDefinition","src":"87706:110:36","nodes":[],"documentation":{"id":40039,"nodeType":"StructuredDocumentation","src":"87538:163:36","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"87715:18:36","parameters":{"id":40048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40041,"mutability":"mutable","name":"left","nameLocation":"87741:4:36","nodeType":"VariableDeclaration","scope":40050,"src":"87734:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":40040,"name":"int256","nodeType":"ElementaryTypeName","src":"87734:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":40043,"mutability":"mutable","name":"right","nameLocation":"87754:5:36","nodeType":"VariableDeclaration","scope":40050,"src":"87747:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":40042,"name":"int256","nodeType":"ElementaryTypeName","src":"87747:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":40045,"mutability":"mutable","name":"decimals","nameLocation":"87769:8:36","nodeType":"VariableDeclaration","scope":40050,"src":"87761:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40044,"name":"uint256","nodeType":"ElementaryTypeName","src":"87761:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40047,"mutability":"mutable","name":"error","nameLocation":"87795:5:36","nodeType":"VariableDeclaration","scope":40050,"src":"87779:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40046,"name":"string","nodeType":"ElementaryTypeName","src":"87779:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87733:68:36"},"returnParameters":{"id":40049,"nodeType":"ParameterList","parameters":[],"src":"87815:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40058,"nodeType":"FunctionDefinition","src":"87876:58:36","nodes":[],"documentation":{"id":40051,"nodeType":"StructuredDocumentation","src":"87822:49:36","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"87885:11:36","parameters":{"id":40056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40053,"mutability":"mutable","name":"left","nameLocation":"87902:4:36","nodeType":"VariableDeclaration","scope":40058,"src":"87897:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40052,"name":"bool","nodeType":"ElementaryTypeName","src":"87897:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":40055,"mutability":"mutable","name":"right","nameLocation":"87913:5:36","nodeType":"VariableDeclaration","scope":40058,"src":"87908:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40054,"name":"bool","nodeType":"ElementaryTypeName","src":"87908:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"87896:23:36"},"returnParameters":{"id":40057,"nodeType":"ParameterList","parameters":[],"src":"87933:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40068,"nodeType":"FunctionDefinition","src":"88051:81:36","nodes":[],"documentation":{"id":40059,"nodeType":"StructuredDocumentation","src":"87940:106:36","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"88060:11:36","parameters":{"id":40066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40061,"mutability":"mutable","name":"left","nameLocation":"88077:4:36","nodeType":"VariableDeclaration","scope":40068,"src":"88072:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40060,"name":"bool","nodeType":"ElementaryTypeName","src":"88072:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":40063,"mutability":"mutable","name":"right","nameLocation":"88088:5:36","nodeType":"VariableDeclaration","scope":40068,"src":"88083:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40062,"name":"bool","nodeType":"ElementaryTypeName","src":"88083:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":40065,"mutability":"mutable","name":"error","nameLocation":"88111:5:36","nodeType":"VariableDeclaration","scope":40068,"src":"88095:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40064,"name":"string","nodeType":"ElementaryTypeName","src":"88095:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88071:46:36"},"returnParameters":{"id":40067,"nodeType":"ParameterList","parameters":[],"src":"88131:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40076,"nodeType":"FunctionDefinition","src":"88194:80:36","nodes":[],"documentation":{"id":40069,"nodeType":"StructuredDocumentation","src":"88138:51:36","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"88203:11:36","parameters":{"id":40074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40071,"mutability":"mutable","name":"left","nameLocation":"88231:4:36","nodeType":"VariableDeclaration","scope":40076,"src":"88215:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40070,"name":"string","nodeType":"ElementaryTypeName","src":"88215:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40073,"mutability":"mutable","name":"right","nameLocation":"88253:5:36","nodeType":"VariableDeclaration","scope":40076,"src":"88237:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40072,"name":"string","nodeType":"ElementaryTypeName","src":"88237:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88214:45:36"},"returnParameters":{"id":40075,"nodeType":"ParameterList","parameters":[],"src":"88273:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40086,"nodeType":"FunctionDefinition","src":"88393:103:36","nodes":[],"documentation":{"id":40077,"nodeType":"StructuredDocumentation","src":"88280:108:36","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"88402:11:36","parameters":{"id":40084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40079,"mutability":"mutable","name":"left","nameLocation":"88430:4:36","nodeType":"VariableDeclaration","scope":40086,"src":"88414:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40078,"name":"string","nodeType":"ElementaryTypeName","src":"88414:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40081,"mutability":"mutable","name":"right","nameLocation":"88452:5:36","nodeType":"VariableDeclaration","scope":40086,"src":"88436:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40080,"name":"string","nodeType":"ElementaryTypeName","src":"88436:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40083,"mutability":"mutable","name":"error","nameLocation":"88475:5:36","nodeType":"VariableDeclaration","scope":40086,"src":"88459:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40082,"name":"string","nodeType":"ElementaryTypeName","src":"88459:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88413:68:36"},"returnParameters":{"id":40085,"nodeType":"ParameterList","parameters":[],"src":"88495:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40094,"nodeType":"FunctionDefinition","src":"88557:78:36","nodes":[],"documentation":{"id":40087,"nodeType":"StructuredDocumentation","src":"88502:50:36","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"88566:11:36","parameters":{"id":40092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40089,"mutability":"mutable","name":"left","nameLocation":"88593:4:36","nodeType":"VariableDeclaration","scope":40094,"src":"88578:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40088,"name":"bytes","nodeType":"ElementaryTypeName","src":"88578:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":40091,"mutability":"mutable","name":"right","nameLocation":"88614:5:36","nodeType":"VariableDeclaration","scope":40094,"src":"88599:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40090,"name":"bytes","nodeType":"ElementaryTypeName","src":"88599:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88577:43:36"},"returnParameters":{"id":40093,"nodeType":"ParameterList","parameters":[],"src":"88634:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40104,"nodeType":"FunctionDefinition","src":"88753:101:36","nodes":[],"documentation":{"id":40095,"nodeType":"StructuredDocumentation","src":"88641:107:36","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"88762:11:36","parameters":{"id":40102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40097,"mutability":"mutable","name":"left","nameLocation":"88789:4:36","nodeType":"VariableDeclaration","scope":40104,"src":"88774:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40096,"name":"bytes","nodeType":"ElementaryTypeName","src":"88774:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":40099,"mutability":"mutable","name":"right","nameLocation":"88810:5:36","nodeType":"VariableDeclaration","scope":40104,"src":"88795:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40098,"name":"bytes","nodeType":"ElementaryTypeName","src":"88795:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":40101,"mutability":"mutable","name":"error","nameLocation":"88833:5:36","nodeType":"VariableDeclaration","scope":40104,"src":"88817:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40100,"name":"string","nodeType":"ElementaryTypeName","src":"88817:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88773:66:36"},"returnParameters":{"id":40103,"nodeType":"ParameterList","parameters":[],"src":"88853:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40114,"nodeType":"FunctionDefinition","src":"88924:80:36","nodes":[],"documentation":{"id":40105,"nodeType":"StructuredDocumentation","src":"88860:59:36","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"88933:11:36","parameters":{"id":40112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40108,"mutability":"mutable","name":"left","nameLocation":"88961:4:36","nodeType":"VariableDeclaration","scope":40114,"src":"88945:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":40106,"name":"bool","nodeType":"ElementaryTypeName","src":"88945:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":40107,"nodeType":"ArrayTypeName","src":"88945:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":40111,"mutability":"mutable","name":"right","nameLocation":"88983:5:36","nodeType":"VariableDeclaration","scope":40114,"src":"88967:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":40109,"name":"bool","nodeType":"ElementaryTypeName","src":"88967:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":40110,"nodeType":"ArrayTypeName","src":"88967:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"88944:45:36"},"returnParameters":{"id":40113,"nodeType":"ParameterList","parameters":[],"src":"89003:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40126,"nodeType":"FunctionDefinition","src":"89131:103:36","nodes":[],"documentation":{"id":40115,"nodeType":"StructuredDocumentation","src":"89010:116:36","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"89140:11:36","parameters":{"id":40124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40118,"mutability":"mutable","name":"left","nameLocation":"89168:4:36","nodeType":"VariableDeclaration","scope":40126,"src":"89152:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":40116,"name":"bool","nodeType":"ElementaryTypeName","src":"89152:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":40117,"nodeType":"ArrayTypeName","src":"89152:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":40121,"mutability":"mutable","name":"right","nameLocation":"89190:5:36","nodeType":"VariableDeclaration","scope":40126,"src":"89174:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":40119,"name":"bool","nodeType":"ElementaryTypeName","src":"89174:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":40120,"nodeType":"ArrayTypeName","src":"89174:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":40123,"mutability":"mutable","name":"error","nameLocation":"89213:5:36","nodeType":"VariableDeclaration","scope":40126,"src":"89197:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40122,"name":"string","nodeType":"ElementaryTypeName","src":"89197:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89151:68:36"},"returnParameters":{"id":40125,"nodeType":"ParameterList","parameters":[],"src":"89233:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40136,"nodeType":"FunctionDefinition","src":"89307:86:36","nodes":[],"documentation":{"id":40127,"nodeType":"StructuredDocumentation","src":"89240:62:36","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"89316:11:36","parameters":{"id":40134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40130,"mutability":"mutable","name":"left","nameLocation":"89347:4:36","nodeType":"VariableDeclaration","scope":40136,"src":"89328:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":40128,"name":"uint256","nodeType":"ElementaryTypeName","src":"89328:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40129,"nodeType":"ArrayTypeName","src":"89328:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":40133,"mutability":"mutable","name":"right","nameLocation":"89372:5:36","nodeType":"VariableDeclaration","scope":40136,"src":"89353:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":40131,"name":"uint256","nodeType":"ElementaryTypeName","src":"89353:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40132,"nodeType":"ArrayTypeName","src":"89353:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"89327:51:36"},"returnParameters":{"id":40135,"nodeType":"ParameterList","parameters":[],"src":"89392:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40148,"nodeType":"FunctionDefinition","src":"89523:109:36","nodes":[],"documentation":{"id":40137,"nodeType":"StructuredDocumentation","src":"89399:119:36","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"89532:11:36","parameters":{"id":40146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40140,"mutability":"mutable","name":"left","nameLocation":"89563:4:36","nodeType":"VariableDeclaration","scope":40148,"src":"89544:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":40138,"name":"uint256","nodeType":"ElementaryTypeName","src":"89544:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40139,"nodeType":"ArrayTypeName","src":"89544:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":40143,"mutability":"mutable","name":"right","nameLocation":"89588:5:36","nodeType":"VariableDeclaration","scope":40148,"src":"89569:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":40141,"name":"uint256","nodeType":"ElementaryTypeName","src":"89569:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40142,"nodeType":"ArrayTypeName","src":"89569:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":40145,"mutability":"mutable","name":"error","nameLocation":"89611:5:36","nodeType":"VariableDeclaration","scope":40148,"src":"89595:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40144,"name":"string","nodeType":"ElementaryTypeName","src":"89595:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89543:74:36"},"returnParameters":{"id":40147,"nodeType":"ParameterList","parameters":[],"src":"89631:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40158,"nodeType":"FunctionDefinition","src":"89704:84:36","nodes":[],"documentation":{"id":40149,"nodeType":"StructuredDocumentation","src":"89638:61:36","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"89713:11:36","parameters":{"id":40156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40152,"mutability":"mutable","name":"left","nameLocation":"89743:4:36","nodeType":"VariableDeclaration","scope":40158,"src":"89725:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":40150,"name":"int256","nodeType":"ElementaryTypeName","src":"89725:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":40151,"nodeType":"ArrayTypeName","src":"89725:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":40155,"mutability":"mutable","name":"right","nameLocation":"89767:5:36","nodeType":"VariableDeclaration","scope":40158,"src":"89749:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":40153,"name":"int256","nodeType":"ElementaryTypeName","src":"89749:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":40154,"nodeType":"ArrayTypeName","src":"89749:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"89724:49:36"},"returnParameters":{"id":40157,"nodeType":"ParameterList","parameters":[],"src":"89787:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40170,"nodeType":"FunctionDefinition","src":"89917:107:36","nodes":[],"documentation":{"id":40159,"nodeType":"StructuredDocumentation","src":"89794:118:36","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"89926:11:36","parameters":{"id":40168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40162,"mutability":"mutable","name":"left","nameLocation":"89956:4:36","nodeType":"VariableDeclaration","scope":40170,"src":"89938:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":40160,"name":"int256","nodeType":"ElementaryTypeName","src":"89938:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":40161,"nodeType":"ArrayTypeName","src":"89938:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":40165,"mutability":"mutable","name":"right","nameLocation":"89980:5:36","nodeType":"VariableDeclaration","scope":40170,"src":"89962:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":40163,"name":"int256","nodeType":"ElementaryTypeName","src":"89962:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":40164,"nodeType":"ArrayTypeName","src":"89962:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":40167,"mutability":"mutable","name":"error","nameLocation":"90003:5:36","nodeType":"VariableDeclaration","scope":40170,"src":"89987:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40166,"name":"string","nodeType":"ElementaryTypeName","src":"89987:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89937:72:36"},"returnParameters":{"id":40169,"nodeType":"ParameterList","parameters":[],"src":"90023:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40178,"nodeType":"FunctionDefinition","src":"90087:64:36","nodes":[],"documentation":{"id":40171,"nodeType":"StructuredDocumentation","src":"90030:52:36","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"90096:11:36","parameters":{"id":40176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40173,"mutability":"mutable","name":"left","nameLocation":"90116:4:36","nodeType":"VariableDeclaration","scope":40178,"src":"90108:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40172,"name":"uint256","nodeType":"ElementaryTypeName","src":"90108:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40175,"mutability":"mutable","name":"right","nameLocation":"90130:5:36","nodeType":"VariableDeclaration","scope":40178,"src":"90122:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40174,"name":"uint256","nodeType":"ElementaryTypeName","src":"90122:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90107:29:36"},"returnParameters":{"id":40177,"nodeType":"ParameterList","parameters":[],"src":"90150:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40188,"nodeType":"FunctionDefinition","src":"90224:86:36","nodes":[],"documentation":{"id":40179,"nodeType":"StructuredDocumentation","src":"90157:62:36","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"90233:11:36","parameters":{"id":40186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40182,"mutability":"mutable","name":"left","nameLocation":"90264:4:36","nodeType":"VariableDeclaration","scope":40188,"src":"90245:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":40180,"name":"address","nodeType":"ElementaryTypeName","src":"90245:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":40181,"nodeType":"ArrayTypeName","src":"90245:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":40185,"mutability":"mutable","name":"right","nameLocation":"90289:5:36","nodeType":"VariableDeclaration","scope":40188,"src":"90270:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":40183,"name":"address","nodeType":"ElementaryTypeName","src":"90270:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":40184,"nodeType":"ArrayTypeName","src":"90270:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"90244:51:36"},"returnParameters":{"id":40187,"nodeType":"ParameterList","parameters":[],"src":"90309:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40200,"nodeType":"FunctionDefinition","src":"90440:109:36","nodes":[],"documentation":{"id":40189,"nodeType":"StructuredDocumentation","src":"90316:119:36","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"90449:11:36","parameters":{"id":40198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40192,"mutability":"mutable","name":"left","nameLocation":"90480:4:36","nodeType":"VariableDeclaration","scope":40200,"src":"90461:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":40190,"name":"address","nodeType":"ElementaryTypeName","src":"90461:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":40191,"nodeType":"ArrayTypeName","src":"90461:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":40195,"mutability":"mutable","name":"right","nameLocation":"90505:5:36","nodeType":"VariableDeclaration","scope":40200,"src":"90486:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":40193,"name":"address","nodeType":"ElementaryTypeName","src":"90486:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":40194,"nodeType":"ArrayTypeName","src":"90486:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":40197,"mutability":"mutable","name":"error","nameLocation":"90528:5:36","nodeType":"VariableDeclaration","scope":40200,"src":"90512:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40196,"name":"string","nodeType":"ElementaryTypeName","src":"90512:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90460:74:36"},"returnParameters":{"id":40199,"nodeType":"ParameterList","parameters":[],"src":"90548:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40210,"nodeType":"FunctionDefinition","src":"90622:86:36","nodes":[],"documentation":{"id":40201,"nodeType":"StructuredDocumentation","src":"90555:62:36","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"90631:11:36","parameters":{"id":40208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40204,"mutability":"mutable","name":"left","nameLocation":"90662:4:36","nodeType":"VariableDeclaration","scope":40210,"src":"90643:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":40202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90643:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":40203,"nodeType":"ArrayTypeName","src":"90643:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":40207,"mutability":"mutable","name":"right","nameLocation":"90687:5:36","nodeType":"VariableDeclaration","scope":40210,"src":"90668:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":40205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90668:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":40206,"nodeType":"ArrayTypeName","src":"90668:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"90642:51:36"},"returnParameters":{"id":40209,"nodeType":"ParameterList","parameters":[],"src":"90707:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40222,"nodeType":"FunctionDefinition","src":"90838:109:36","nodes":[],"documentation":{"id":40211,"nodeType":"StructuredDocumentation","src":"90714:119:36","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"90847:11:36","parameters":{"id":40220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40214,"mutability":"mutable","name":"left","nameLocation":"90878:4:36","nodeType":"VariableDeclaration","scope":40222,"src":"90859:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":40212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90859:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":40213,"nodeType":"ArrayTypeName","src":"90859:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":40217,"mutability":"mutable","name":"right","nameLocation":"90903:5:36","nodeType":"VariableDeclaration","scope":40222,"src":"90884:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":40215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90884:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":40216,"nodeType":"ArrayTypeName","src":"90884:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":40219,"mutability":"mutable","name":"error","nameLocation":"90926:5:36","nodeType":"VariableDeclaration","scope":40222,"src":"90910:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40218,"name":"string","nodeType":"ElementaryTypeName","src":"90910:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90858:74:36"},"returnParameters":{"id":40221,"nodeType":"ParameterList","parameters":[],"src":"90946:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40232,"nodeType":"FunctionDefinition","src":"91019:84:36","nodes":[],"documentation":{"id":40223,"nodeType":"StructuredDocumentation","src":"90953:61:36","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"91028:11:36","parameters":{"id":40230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40226,"mutability":"mutable","name":"left","nameLocation":"91058:4:36","nodeType":"VariableDeclaration","scope":40232,"src":"91040:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":40224,"name":"string","nodeType":"ElementaryTypeName","src":"91040:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":40225,"nodeType":"ArrayTypeName","src":"91040:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":40229,"mutability":"mutable","name":"right","nameLocation":"91082:5:36","nodeType":"VariableDeclaration","scope":40232,"src":"91064:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":40227,"name":"string","nodeType":"ElementaryTypeName","src":"91064:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":40228,"nodeType":"ArrayTypeName","src":"91064:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"91039:49:36"},"returnParameters":{"id":40231,"nodeType":"ParameterList","parameters":[],"src":"91102:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40244,"nodeType":"FunctionDefinition","src":"91232:107:36","nodes":[],"documentation":{"id":40233,"nodeType":"StructuredDocumentation","src":"91109:118:36","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"91241:11:36","parameters":{"id":40242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40236,"mutability":"mutable","name":"left","nameLocation":"91271:4:36","nodeType":"VariableDeclaration","scope":40244,"src":"91253:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":40234,"name":"string","nodeType":"ElementaryTypeName","src":"91253:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":40235,"nodeType":"ArrayTypeName","src":"91253:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":40239,"mutability":"mutable","name":"right","nameLocation":"91295:5:36","nodeType":"VariableDeclaration","scope":40244,"src":"91277:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":40237,"name":"string","nodeType":"ElementaryTypeName","src":"91277:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":40238,"nodeType":"ArrayTypeName","src":"91277:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":40241,"mutability":"mutable","name":"error","nameLocation":"91318:5:36","nodeType":"VariableDeclaration","scope":40244,"src":"91302:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40240,"name":"string","nodeType":"ElementaryTypeName","src":"91302:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91252:72:36"},"returnParameters":{"id":40243,"nodeType":"ParameterList","parameters":[],"src":"91338:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40254,"nodeType":"FunctionDefinition","src":"91410:82:36","nodes":[],"documentation":{"id":40245,"nodeType":"StructuredDocumentation","src":"91345:60:36","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"91419:11:36","parameters":{"id":40252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40248,"mutability":"mutable","name":"left","nameLocation":"91448:4:36","nodeType":"VariableDeclaration","scope":40254,"src":"91431:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":40246,"name":"bytes","nodeType":"ElementaryTypeName","src":"91431:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":40247,"nodeType":"ArrayTypeName","src":"91431:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":40251,"mutability":"mutable","name":"right","nameLocation":"91471:5:36","nodeType":"VariableDeclaration","scope":40254,"src":"91454:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":40249,"name":"bytes","nodeType":"ElementaryTypeName","src":"91454:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":40250,"nodeType":"ArrayTypeName","src":"91454:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"91430:47:36"},"returnParameters":{"id":40253,"nodeType":"ParameterList","parameters":[],"src":"91491:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40266,"nodeType":"FunctionDefinition","src":"91620:105:36","nodes":[],"documentation":{"id":40255,"nodeType":"StructuredDocumentation","src":"91498:117:36","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"91629:11:36","parameters":{"id":40264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40258,"mutability":"mutable","name":"left","nameLocation":"91658:4:36","nodeType":"VariableDeclaration","scope":40266,"src":"91641:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":40256,"name":"bytes","nodeType":"ElementaryTypeName","src":"91641:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":40257,"nodeType":"ArrayTypeName","src":"91641:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":40261,"mutability":"mutable","name":"right","nameLocation":"91681:5:36","nodeType":"VariableDeclaration","scope":40266,"src":"91664:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":40259,"name":"bytes","nodeType":"ElementaryTypeName","src":"91664:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":40260,"nodeType":"ArrayTypeName","src":"91664:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":40263,"mutability":"mutable","name":"error","nameLocation":"91704:5:36","nodeType":"VariableDeclaration","scope":40266,"src":"91688:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40262,"name":"string","nodeType":"ElementaryTypeName","src":"91688:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91640:70:36"},"returnParameters":{"id":40265,"nodeType":"ParameterList","parameters":[],"src":"91724:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40276,"nodeType":"FunctionDefinition","src":"91845:87:36","nodes":[],"documentation":{"id":40267,"nodeType":"StructuredDocumentation","src":"91731:109:36","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"91854:11:36","parameters":{"id":40274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40269,"mutability":"mutable","name":"left","nameLocation":"91874:4:36","nodeType":"VariableDeclaration","scope":40276,"src":"91866:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40268,"name":"uint256","nodeType":"ElementaryTypeName","src":"91866:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40271,"mutability":"mutable","name":"right","nameLocation":"91888:5:36","nodeType":"VariableDeclaration","scope":40276,"src":"91880:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40270,"name":"uint256","nodeType":"ElementaryTypeName","src":"91880:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40273,"mutability":"mutable","name":"error","nameLocation":"91911:5:36","nodeType":"VariableDeclaration","scope":40276,"src":"91895:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40272,"name":"string","nodeType":"ElementaryTypeName","src":"91895:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91865:52:36"},"returnParameters":{"id":40275,"nodeType":"ParameterList","parameters":[],"src":"91931:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40284,"nodeType":"FunctionDefinition","src":"91994:62:36","nodes":[],"documentation":{"id":40277,"nodeType":"StructuredDocumentation","src":"91938:51:36","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"92003:11:36","parameters":{"id":40282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40279,"mutability":"mutable","name":"left","nameLocation":"92022:4:36","nodeType":"VariableDeclaration","scope":40284,"src":"92015:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":40278,"name":"int256","nodeType":"ElementaryTypeName","src":"92015:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":40281,"mutability":"mutable","name":"right","nameLocation":"92035:5:36","nodeType":"VariableDeclaration","scope":40284,"src":"92028:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":40280,"name":"int256","nodeType":"ElementaryTypeName","src":"92028:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"92014:27:36"},"returnParameters":{"id":40283,"nodeType":"ParameterList","parameters":[],"src":"92055:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40294,"nodeType":"FunctionDefinition","src":"92175:85:36","nodes":[],"documentation":{"id":40285,"nodeType":"StructuredDocumentation","src":"92062:108:36","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"92184:11:36","parameters":{"id":40292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40287,"mutability":"mutable","name":"left","nameLocation":"92203:4:36","nodeType":"VariableDeclaration","scope":40294,"src":"92196:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":40286,"name":"int256","nodeType":"ElementaryTypeName","src":"92196:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":40289,"mutability":"mutable","name":"right","nameLocation":"92216:5:36","nodeType":"VariableDeclaration","scope":40294,"src":"92209:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":40288,"name":"int256","nodeType":"ElementaryTypeName","src":"92209:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":40291,"mutability":"mutable","name":"error","nameLocation":"92239:5:36","nodeType":"VariableDeclaration","scope":40294,"src":"92223:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40290,"name":"string","nodeType":"ElementaryTypeName","src":"92223:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92195:50:36"},"returnParameters":{"id":40293,"nodeType":"ParameterList","parameters":[],"src":"92259:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40302,"nodeType":"FunctionDefinition","src":"92323:64:36","nodes":[],"documentation":{"id":40295,"nodeType":"StructuredDocumentation","src":"92266:52:36","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"92332:11:36","parameters":{"id":40300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40297,"mutability":"mutable","name":"left","nameLocation":"92352:4:36","nodeType":"VariableDeclaration","scope":40302,"src":"92344:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40296,"name":"address","nodeType":"ElementaryTypeName","src":"92344:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":40299,"mutability":"mutable","name":"right","nameLocation":"92366:5:36","nodeType":"VariableDeclaration","scope":40302,"src":"92358:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40298,"name":"address","nodeType":"ElementaryTypeName","src":"92358:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92343:29:36"},"returnParameters":{"id":40301,"nodeType":"ParameterList","parameters":[],"src":"92386:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40312,"nodeType":"FunctionDefinition","src":"92507:87:36","nodes":[],"documentation":{"id":40303,"nodeType":"StructuredDocumentation","src":"92393:109:36","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"92516:11:36","parameters":{"id":40310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40305,"mutability":"mutable","name":"left","nameLocation":"92536:4:36","nodeType":"VariableDeclaration","scope":40312,"src":"92528:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40304,"name":"address","nodeType":"ElementaryTypeName","src":"92528:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":40307,"mutability":"mutable","name":"right","nameLocation":"92550:5:36","nodeType":"VariableDeclaration","scope":40312,"src":"92542:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40306,"name":"address","nodeType":"ElementaryTypeName","src":"92542:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":40309,"mutability":"mutable","name":"error","nameLocation":"92573:5:36","nodeType":"VariableDeclaration","scope":40312,"src":"92557:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40308,"name":"string","nodeType":"ElementaryTypeName","src":"92557:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92527:52:36"},"returnParameters":{"id":40311,"nodeType":"ParameterList","parameters":[],"src":"92593:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40320,"nodeType":"FunctionDefinition","src":"92657:64:36","nodes":[],"documentation":{"id":40313,"nodeType":"StructuredDocumentation","src":"92600:52:36","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"92666:11:36","parameters":{"id":40318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40315,"mutability":"mutable","name":"left","nameLocation":"92686:4:36","nodeType":"VariableDeclaration","scope":40320,"src":"92678:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92678:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":40317,"mutability":"mutable","name":"right","nameLocation":"92700:5:36","nodeType":"VariableDeclaration","scope":40320,"src":"92692:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92692:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"92677:29:36"},"returnParameters":{"id":40319,"nodeType":"ParameterList","parameters":[],"src":"92720:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40330,"nodeType":"FunctionDefinition","src":"92841:87:36","nodes":[],"documentation":{"id":40321,"nodeType":"StructuredDocumentation","src":"92727:109:36","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"92850:11:36","parameters":{"id":40328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40323,"mutability":"mutable","name":"left","nameLocation":"92870:4:36","nodeType":"VariableDeclaration","scope":40330,"src":"92862:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92862:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":40325,"mutability":"mutable","name":"right","nameLocation":"92884:5:36","nodeType":"VariableDeclaration","scope":40330,"src":"92876:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92876:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":40327,"mutability":"mutable","name":"error","nameLocation":"92907:5:36","nodeType":"VariableDeclaration","scope":40330,"src":"92891:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40326,"name":"string","nodeType":"ElementaryTypeName","src":"92891:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92861:52:36"},"returnParameters":{"id":40329,"nodeType":"ParameterList","parameters":[],"src":"92927:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40336,"nodeType":"FunctionDefinition","src":"92984:50:36","nodes":[],"documentation":{"id":40331,"nodeType":"StructuredDocumentation","src":"92934:45:36","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"92993:10:36","parameters":{"id":40334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40333,"mutability":"mutable","name":"condition","nameLocation":"93009:9:36","nodeType":"VariableDeclaration","scope":40336,"src":"93004:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40332,"name":"bool","nodeType":"ElementaryTypeName","src":"93004:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"93003:16:36"},"returnParameters":{"id":40335,"nodeType":"ParameterList","parameters":[],"src":"93033:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40344,"nodeType":"FunctionDefinition","src":"93147:73:36","nodes":[],"documentation":{"id":40337,"nodeType":"StructuredDocumentation","src":"93040:102:36","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"93156:10:36","parameters":{"id":40342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40339,"mutability":"mutable","name":"condition","nameLocation":"93172:9:36","nodeType":"VariableDeclaration","scope":40344,"src":"93167:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40338,"name":"bool","nodeType":"ElementaryTypeName","src":"93167:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":40341,"mutability":"mutable","name":"error","nameLocation":"93199:5:36","nodeType":"VariableDeclaration","scope":40344,"src":"93183:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40340,"name":"string","nodeType":"ElementaryTypeName","src":"93183:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93166:39:36"},"returnParameters":{"id":40343,"nodeType":"ParameterList","parameters":[],"src":"93219:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40350,"nodeType":"FunctionDefinition","src":"93315:46:36","nodes":[],"documentation":{"id":40345,"nodeType":"StructuredDocumentation","src":"93226:84:36","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"93324:6:36","parameters":{"id":40348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40347,"mutability":"mutable","name":"condition","nameLocation":"93336:9:36","nodeType":"VariableDeclaration","scope":40350,"src":"93331:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40346,"name":"bool","nodeType":"ElementaryTypeName","src":"93331:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"93330:16:36"},"returnParameters":{"id":40349,"nodeType":"ParameterList","parameters":[],"src":"93360:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40354,"nodeType":"FunctionDefinition","src":"93451:40:36","nodes":[],"documentation":{"id":40351,"nodeType":"StructuredDocumentation","src":"93367:79:36","text":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"functionSelector":"285b366a","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"93460:14:36","parameters":{"id":40352,"nodeType":"ParameterList","parameters":[],"src":"93474:2:36"},"returnParameters":{"id":40353,"nodeType":"ParameterList","parameters":[],"src":"93490:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40361,"nodeType":"FunctionDefinition","src":"93617:80:36","nodes":[],"documentation":{"id":40355,"nodeType":"StructuredDocumentation","src":"93497:115:36","text":"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters."},"functionSelector":"d8591eeb","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"93626:14:36","parameters":{"id":40359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40358,"mutability":"mutable","name":"potentialRevert","nameLocation":"93666:15:36","nodeType":"VariableDeclaration","scope":40361,"src":"93641:40:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$36988_calldata_ptr","typeString":"struct VmSafe.PotentialRevert"},"typeName":{"id":40357,"nodeType":"UserDefinedTypeName","pathNode":{"id":40356,"name":"PotentialRevert","nameLocations":["93641:15:36"],"nodeType":"IdentifierPath","referencedDeclaration":36988,"src":"93641:15:36"},"referencedDeclaration":36988,"src":"93641:15:36","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$36988_storage_ptr","typeString":"struct VmSafe.PotentialRevert"}},"visibility":"internal"}],"src":"93640:42:36"},"returnParameters":{"id":40360,"nodeType":"ParameterList","parameters":[],"src":"93696:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40369,"nodeType":"FunctionDefinition","src":"93834:83:36","nodes":[],"documentation":{"id":40362,"nodeType":"StructuredDocumentation","src":"93703:126:36","text":"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters."},"functionSelector":"8a4592cc","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"93843:14:36","parameters":{"id":40367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40366,"mutability":"mutable","name":"potentialReverts","nameLocation":"93885:16:36","nodeType":"VariableDeclaration","scope":40369,"src":"93858:43:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PotentialRevert_$36988_calldata_ptr_$dyn_calldata_ptr","typeString":"struct VmSafe.PotentialRevert[]"},"typeName":{"baseType":{"id":40364,"nodeType":"UserDefinedTypeName","pathNode":{"id":40363,"name":"PotentialRevert","nameLocations":["93858:15:36"],"nodeType":"IdentifierPath","referencedDeclaration":36988,"src":"93858:15:36"},"referencedDeclaration":36988,"src":"93858:15:36","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$36988_storage_ptr","typeString":"struct VmSafe.PotentialRevert"}},"id":40365,"nodeType":"ArrayTypeName","src":"93858:17:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PotentialRevert_$36988_storage_$dyn_storage_ptr","typeString":"struct VmSafe.PotentialRevert[]"}},"visibility":"internal"}],"src":"93857:45:36"},"returnParameters":{"id":40368,"nodeType":"ParameterList","parameters":[],"src":"93916:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40375,"nodeType":"FunctionDefinition","src":"93979:56:36","nodes":[],"documentation":{"id":40370,"nodeType":"StructuredDocumentation","src":"93923:51:36","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"93988:10:36","parameters":{"id":40373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40372,"mutability":"mutable","name":"char","nameLocation":"94015:4:36","nodeType":"VariableDeclaration","scope":40375,"src":"93999:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40371,"name":"string","nodeType":"ElementaryTypeName","src":"93999:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93998:22:36"},"returnParameters":{"id":40374,"nodeType":"ParameterList","parameters":[],"src":"94034:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40383,"nodeType":"FunctionDefinition","src":"94109:68:36","nodes":[],"documentation":{"id":40376,"nodeType":"StructuredDocumentation","src":"94041:63:36","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"94118:10:36","parameters":{"id":40381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40378,"mutability":"mutable","name":"char","nameLocation":"94145:4:36","nodeType":"VariableDeclaration","scope":40383,"src":"94129:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40377,"name":"string","nodeType":"ElementaryTypeName","src":"94129:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40380,"mutability":"mutable","name":"value","nameLocation":"94156:5:36","nodeType":"VariableDeclaration","scope":40383,"src":"94151:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40379,"name":"bool","nodeType":"ElementaryTypeName","src":"94151:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"94128:34:36"},"returnParameters":{"id":40382,"nodeType":"ParameterList","parameters":[],"src":"94176:0:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40391,"nodeType":"FunctionDefinition","src":"94423:85:36","nodes":[],"documentation":{"id":40384,"nodeType":"StructuredDocumentation","src":"94183:235:36","text":"Returns true if the current Foundry version is greater than or equal to the given version.\n The given version string must be in the format `major.minor.patch`.\n This is equivalent to `foundryVersionCmp(version) >= 0`."},"functionSelector":"6248be1f","implemented":false,"kind":"function","modifiers":[],"name":"foundryVersionAtLeast","nameLocation":"94432:21:36","parameters":{"id":40387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40386,"mutability":"mutable","name":"version","nameLocation":"94470:7:36","nodeType":"VariableDeclaration","scope":40391,"src":"94454:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40385,"name":"string","nodeType":"ElementaryTypeName","src":"94454:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94453:25:36"},"returnParameters":{"id":40390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40391,"src":"94502:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40388,"name":"bool","nodeType":"ElementaryTypeName","src":"94502:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"94501:6:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40399,"nodeType":"FunctionDefinition","src":"95115:83:36","nodes":[],"documentation":{"id":40392,"nodeType":"StructuredDocumentation","src":"94514:596:36","text":"Compares the current Foundry version with the given version string.\n The given version string must be in the format `major.minor.patch`.\n Returns:\n -1 if current Foundry version is less than the given version\n 0 if current Foundry version equals the given version\n 1 if current Foundry version is greater than the given version\n This result can then be used with a comparison operator against `0`.\n For example, to check if the current Foundry version is greater than or equal to `1.0.0`:\n `if (foundryVersionCmp(\"1.0.0\") >= 0) { ... }`"},"functionSelector":"ca7b0a09","implemented":false,"kind":"function","modifiers":[],"name":"foundryVersionCmp","nameLocation":"95124:17:36","parameters":{"id":40395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40394,"mutability":"mutable","name":"version","nameLocation":"95158:7:36","nodeType":"VariableDeclaration","scope":40399,"src":"95142:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40393,"name":"string","nodeType":"ElementaryTypeName","src":"95142:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95141:25:36"},"returnParameters":{"id":40398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40399,"src":"95190:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":40396,"name":"int256","nodeType":"ElementaryTypeName","src":"95190:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"95189:8:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40408,"nodeType":"FunctionDefinition","src":"95254:89:36","nodes":[],"documentation":{"id":40400,"nodeType":"StructuredDocumentation","src":"95204:45:36","text":"Returns a Chain struct for specific alias"},"functionSelector":"4cc1c2bb","implemented":false,"kind":"function","modifiers":[],"name":"getChain","nameLocation":"95263:8:36","parameters":{"id":40403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40402,"mutability":"mutable","name":"chainAlias","nameLocation":"95288:10:36","nodeType":"VariableDeclaration","scope":40408,"src":"95272:26:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40401,"name":"string","nodeType":"ElementaryTypeName","src":"95272:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95271:28:36"},"returnParameters":{"id":40407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40406,"mutability":"mutable","name":"chain","nameLocation":"95336:5:36","nodeType":"VariableDeclaration","scope":40408,"src":"95323:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$36878_memory_ptr","typeString":"struct VmSafe.Chain"},"typeName":{"id":40405,"nodeType":"UserDefinedTypeName","pathNode":{"id":40404,"name":"Chain","nameLocations":["95323:5:36"],"nodeType":"IdentifierPath","referencedDeclaration":36878,"src":"95323:5:36"},"referencedDeclaration":36878,"src":"95323:5:36","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$36878_storage_ptr","typeString":"struct VmSafe.Chain"}},"visibility":"internal"}],"src":"95322:20:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40417,"nodeType":"FunctionDefinition","src":"95401:78:36","nodes":[],"documentation":{"id":40409,"nodeType":"StructuredDocumentation","src":"95349:47:36","text":"Returns a Chain struct for specific chainId"},"functionSelector":"b6791ad4","implemented":false,"kind":"function","modifiers":[],"name":"getChain","nameLocation":"95410:8:36","parameters":{"id":40412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40411,"mutability":"mutable","name":"chainId","nameLocation":"95427:7:36","nodeType":"VariableDeclaration","scope":40417,"src":"95419:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40410,"name":"uint256","nodeType":"ElementaryTypeName","src":"95419:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95418:17:36"},"returnParameters":{"id":40416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40415,"mutability":"mutable","name":"chain","nameLocation":"95472:5:36","nodeType":"VariableDeclaration","scope":40417,"src":"95459:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$36878_memory_ptr","typeString":"struct VmSafe.Chain"},"typeName":{"id":40414,"nodeType":"UserDefinedTypeName","pathNode":{"id":40413,"name":"Chain","nameLocations":["95459:5:36"],"nodeType":"IdentifierPath","referencedDeclaration":36878,"src":"95459:5:36"},"referencedDeclaration":36878,"src":"95459:5:36","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$36878_storage_ptr","typeString":"struct VmSafe.Chain"}},"visibility":"internal"}],"src":"95458:20:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40423,"nodeType":"FunctionDefinition","src":"95914:75:36","nodes":[],"documentation":{"id":40418,"nodeType":"StructuredDocumentation","src":"95485:424:36","text":"Returns the Foundry version.\n Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile>\n Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug\n Note: Build timestamps may vary slightly across platforms due to separate CI jobs.\n For reliable version comparisons, use UNIX format (e.g., >= 1700000000)\n to compare timestamps while ignoring minor time differences."},"functionSelector":"ea991bb5","implemented":false,"kind":"function","modifiers":[],"name":"getFoundryVersion","nameLocation":"95923:17:36","parameters":{"id":40419,"nodeType":"ParameterList","parameters":[],"src":"95940:2:36"},"returnParameters":{"id":40422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40421,"mutability":"mutable","name":"version","nameLocation":"95980:7:36","nodeType":"VariableDeclaration","scope":40423,"src":"95966:21:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":40420,"name":"string","nodeType":"ElementaryTypeName","src":"95966:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95965:23:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40431,"nodeType":"FunctionDefinition","src":"96044:85:36","nodes":[],"documentation":{"id":40424,"nodeType":"StructuredDocumentation","src":"95995:44:36","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"96053:6:36","parameters":{"id":40427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40426,"mutability":"mutable","name":"rpcAlias","nameLocation":"96076:8:36","nodeType":"VariableDeclaration","scope":40431,"src":"96060:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40425,"name":"string","nodeType":"ElementaryTypeName","src":"96060:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"96059:26:36"},"returnParameters":{"id":40430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40429,"mutability":"mutable","name":"json","nameLocation":"96123:4:36","nodeType":"VariableDeclaration","scope":40431,"src":"96109:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":40428,"name":"string","nodeType":"ElementaryTypeName","src":"96109:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"96108:20:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40439,"nodeType":"FunctionDefinition","src":"96194:67:36","nodes":[],"documentation":{"id":40432,"nodeType":"StructuredDocumentation","src":"96135:54:36","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"96203:13:36","parameters":{"id":40433,"nodeType":"ParameterList","parameters":[],"src":"96216:2:36"},"returnParameters":{"id":40438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40437,"mutability":"mutable","name":"urls","nameLocation":"96255:4:36","nodeType":"VariableDeclaration","scope":40439,"src":"96242:17:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$36795_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":40435,"nodeType":"UserDefinedTypeName","pathNode":{"id":40434,"name":"Rpc","nameLocations":["96242:3:36"],"nodeType":"IdentifierPath","referencedDeclaration":36795,"src":"96242:3:36"},"referencedDeclaration":36795,"src":"96242:3:36","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$36795_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":40436,"nodeType":"ArrayTypeName","src":"96242:5:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$36795_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"96241:19:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40448,"nodeType":"FunctionDefinition","src":"96332:67:36","nodes":[],"documentation":{"id":40440,"nodeType":"StructuredDocumentation","src":"96267:60:36","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"96341:7:36","parameters":{"id":40441,"nodeType":"ParameterList","parameters":[],"src":"96348:2:36"},"returnParameters":{"id":40447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40446,"mutability":"mutable","name":"urls","nameLocation":"96393:4:36","nodeType":"VariableDeclaration","scope":40448,"src":"96374:23:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":40442,"name":"string","nodeType":"ElementaryTypeName","src":"96374:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":40444,"length":{"hexValue":"32","id":40443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"96381:1:36","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"96374:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":40445,"nodeType":"ArrayTypeName","src":"96374:11:36","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"96373:25:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40454,"nodeType":"FunctionDefinition","src":"96480:42:36","nodes":[],"documentation":{"id":40449,"nodeType":"StructuredDocumentation","src":"96405:70:36","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"96489:5:36","parameters":{"id":40452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40451,"mutability":"mutable","name":"duration","nameLocation":"96503:8:36","nodeType":"VariableDeclaration","scope":40454,"src":"96495:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40450,"name":"uint256","nodeType":"ElementaryTypeName","src":"96495:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96494:18:36"},"returnParameters":{"id":40453,"nodeType":"ParameterList","parameters":[],"src":"96521:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40464,"nodeType":"FunctionDefinition","src":"96607:95:36","nodes":[],"documentation":{"id":40455,"nodeType":"StructuredDocumentation","src":"96559:43:36","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"96616:13:36","parameters":{"id":40460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40457,"mutability":"mutable","name":"toml","nameLocation":"96646:4:36","nodeType":"VariableDeclaration","scope":40464,"src":"96630:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40456,"name":"string","nodeType":"ElementaryTypeName","src":"96630:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40459,"mutability":"mutable","name":"key","nameLocation":"96668:3:36","nodeType":"VariableDeclaration","scope":40464,"src":"96652:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40458,"name":"string","nodeType":"ElementaryTypeName","src":"96652:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"96629:43:36"},"returnParameters":{"id":40463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40464,"src":"96696:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40461,"name":"bool","nodeType":"ElementaryTypeName","src":"96696:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"96695:6:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40474,"nodeType":"FunctionDefinition","src":"96783:101:36","nodes":[],"documentation":{"id":40465,"nodeType":"StructuredDocumentation","src":"96708:70:36","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"96792:16:36","parameters":{"id":40470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40467,"mutability":"mutable","name":"toml","nameLocation":"96825:4:36","nodeType":"VariableDeclaration","scope":40474,"src":"96809:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40466,"name":"string","nodeType":"ElementaryTypeName","src":"96809:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40469,"mutability":"mutable","name":"key","nameLocation":"96847:3:36","nodeType":"VariableDeclaration","scope":40474,"src":"96831:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40468,"name":"string","nodeType":"ElementaryTypeName","src":"96831:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"96808:43:36"},"returnParameters":{"id":40473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40474,"src":"96875:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40471,"name":"address","nodeType":"ElementaryTypeName","src":"96875:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96874:9:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40485,"nodeType":"FunctionDefinition","src":"96967:139:36","nodes":[],"documentation":{"id":40475,"nodeType":"StructuredDocumentation","src":"96890:72:36","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"96976:21:36","parameters":{"id":40480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40477,"mutability":"mutable","name":"toml","nameLocation":"97014:4:36","nodeType":"VariableDeclaration","scope":40485,"src":"96998:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40476,"name":"string","nodeType":"ElementaryTypeName","src":"96998:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40479,"mutability":"mutable","name":"key","nameLocation":"97036:3:36","nodeType":"VariableDeclaration","scope":40485,"src":"97020:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40478,"name":"string","nodeType":"ElementaryTypeName","src":"97020:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"96997:43:36"},"returnParameters":{"id":40484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40485,"src":"97088:16:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":40481,"name":"address","nodeType":"ElementaryTypeName","src":"97088:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":40482,"nodeType":"ArrayTypeName","src":"97088:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"97087:18:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40495,"nodeType":"FunctionDefinition","src":"97184:95:36","nodes":[],"documentation":{"id":40486,"nodeType":"StructuredDocumentation","src":"97112:67:36","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"97193:13:36","parameters":{"id":40491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40488,"mutability":"mutable","name":"toml","nameLocation":"97223:4:36","nodeType":"VariableDeclaration","scope":40495,"src":"97207:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40487,"name":"string","nodeType":"ElementaryTypeName","src":"97207:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40490,"mutability":"mutable","name":"key","nameLocation":"97245:3:36","nodeType":"VariableDeclaration","scope":40495,"src":"97229:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40489,"name":"string","nodeType":"ElementaryTypeName","src":"97229:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"97206:43:36"},"returnParameters":{"id":40494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40495,"src":"97273:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40492,"name":"bool","nodeType":"ElementaryTypeName","src":"97273:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"97272:6:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40506,"nodeType":"FunctionDefinition","src":"97359:109:36","nodes":[],"documentation":{"id":40496,"nodeType":"StructuredDocumentation","src":"97285:69:36","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"97368:18:36","parameters":{"id":40501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40498,"mutability":"mutable","name":"toml","nameLocation":"97403:4:36","nodeType":"VariableDeclaration","scope":40506,"src":"97387:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40497,"name":"string","nodeType":"ElementaryTypeName","src":"97387:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40500,"mutability":"mutable","name":"key","nameLocation":"97425:3:36","nodeType":"VariableDeclaration","scope":40506,"src":"97409:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40499,"name":"string","nodeType":"ElementaryTypeName","src":"97409:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"97386:43:36"},"returnParameters":{"id":40505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40506,"src":"97453:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":40502,"name":"bool","nodeType":"ElementaryTypeName","src":"97453:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":40503,"nodeType":"ArrayTypeName","src":"97453:6:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"97452:15:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40516,"nodeType":"FunctionDefinition","src":"97547:104:36","nodes":[],"documentation":{"id":40507,"nodeType":"StructuredDocumentation","src":"97474:68:36","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"97556:14:36","parameters":{"id":40512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40509,"mutability":"mutable","name":"toml","nameLocation":"97587:4:36","nodeType":"VariableDeclaration","scope":40516,"src":"97571:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40508,"name":"string","nodeType":"ElementaryTypeName","src":"97571:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40511,"mutability":"mutable","name":"key","nameLocation":"97609:3:36","nodeType":"VariableDeclaration","scope":40516,"src":"97593:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40510,"name":"string","nodeType":"ElementaryTypeName","src":"97593:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"97570:43:36"},"returnParameters":{"id":40515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40516,"src":"97637:12:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":40513,"name":"bytes","nodeType":"ElementaryTypeName","src":"97637:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"97636:14:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40526,"nodeType":"FunctionDefinition","src":"97732:101:36","nodes":[],"documentation":{"id":40517,"nodeType":"StructuredDocumentation","src":"97657:70:36","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"97741:16:36","parameters":{"id":40522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40519,"mutability":"mutable","name":"toml","nameLocation":"97774:4:36","nodeType":"VariableDeclaration","scope":40526,"src":"97758:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40518,"name":"string","nodeType":"ElementaryTypeName","src":"97758:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40521,"mutability":"mutable","name":"key","nameLocation":"97796:3:36","nodeType":"VariableDeclaration","scope":40526,"src":"97780:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40520,"name":"string","nodeType":"ElementaryTypeName","src":"97780:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"97757:43:36"},"returnParameters":{"id":40525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40526,"src":"97824:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"97824:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"97823:9:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40537,"nodeType":"FunctionDefinition","src":"97916:139:36","nodes":[],"documentation":{"id":40527,"nodeType":"StructuredDocumentation","src":"97839:72:36","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"97925:21:36","parameters":{"id":40532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40529,"mutability":"mutable","name":"toml","nameLocation":"97963:4:36","nodeType":"VariableDeclaration","scope":40537,"src":"97947:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40528,"name":"string","nodeType":"ElementaryTypeName","src":"97947:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40531,"mutability":"mutable","name":"key","nameLocation":"97985:3:36","nodeType":"VariableDeclaration","scope":40537,"src":"97969:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40530,"name":"string","nodeType":"ElementaryTypeName","src":"97969:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"97946:43:36"},"returnParameters":{"id":40536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40537,"src":"98037:16:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":40533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"98037:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":40534,"nodeType":"ArrayTypeName","src":"98037:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"98036:18:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40548,"nodeType":"FunctionDefinition","src":"98136:111:36","nodes":[],"documentation":{"id":40538,"nodeType":"StructuredDocumentation","src":"98061:70:36","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"98145:19:36","parameters":{"id":40543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40540,"mutability":"mutable","name":"toml","nameLocation":"98181:4:36","nodeType":"VariableDeclaration","scope":40548,"src":"98165:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40539,"name":"string","nodeType":"ElementaryTypeName","src":"98165:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40542,"mutability":"mutable","name":"key","nameLocation":"98203:3:36","nodeType":"VariableDeclaration","scope":40548,"src":"98187:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40541,"name":"string","nodeType":"ElementaryTypeName","src":"98187:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"98164:43:36"},"returnParameters":{"id":40547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40548,"src":"98231:14:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":40544,"name":"bytes","nodeType":"ElementaryTypeName","src":"98231:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":40545,"nodeType":"ArrayTypeName","src":"98231:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"98230:16:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40558,"nodeType":"FunctionDefinition","src":"98327:96:36","nodes":[],"documentation":{"id":40549,"nodeType":"StructuredDocumentation","src":"98253:69:36","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"98336:12:36","parameters":{"id":40554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40551,"mutability":"mutable","name":"toml","nameLocation":"98365:4:36","nodeType":"VariableDeclaration","scope":40558,"src":"98349:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40550,"name":"string","nodeType":"ElementaryTypeName","src":"98349:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40553,"mutability":"mutable","name":"key","nameLocation":"98387:3:36","nodeType":"VariableDeclaration","scope":40558,"src":"98371:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40552,"name":"string","nodeType":"ElementaryTypeName","src":"98371:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"98348:43:36"},"returnParameters":{"id":40557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40558,"src":"98415:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":40555,"name":"int256","nodeType":"ElementaryTypeName","src":"98415:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"98414:8:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40569,"nodeType":"FunctionDefinition","src":"98505:110:36","nodes":[],"documentation":{"id":40559,"nodeType":"StructuredDocumentation","src":"98429:71:36","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"98514:17:36","parameters":{"id":40564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40561,"mutability":"mutable","name":"toml","nameLocation":"98548:4:36","nodeType":"VariableDeclaration","scope":40569,"src":"98532:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40560,"name":"string","nodeType":"ElementaryTypeName","src":"98532:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40563,"mutability":"mutable","name":"key","nameLocation":"98570:3:36","nodeType":"VariableDeclaration","scope":40569,"src":"98554:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40562,"name":"string","nodeType":"ElementaryTypeName","src":"98554:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"98531:43:36"},"returnParameters":{"id":40568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40569,"src":"98598:15:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":40565,"name":"int256","nodeType":"ElementaryTypeName","src":"98598:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":40566,"nodeType":"ArrayTypeName","src":"98598:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"98597:17:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40580,"nodeType":"FunctionDefinition","src":"98679:111:36","nodes":[],"documentation":{"id":40570,"nodeType":"StructuredDocumentation","src":"98621:53:36","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"98688:13:36","parameters":{"id":40575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40572,"mutability":"mutable","name":"toml","nameLocation":"98718:4:36","nodeType":"VariableDeclaration","scope":40580,"src":"98702:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40571,"name":"string","nodeType":"ElementaryTypeName","src":"98702:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40574,"mutability":"mutable","name":"key","nameLocation":"98740:3:36","nodeType":"VariableDeclaration","scope":40580,"src":"98724:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40573,"name":"string","nodeType":"ElementaryTypeName","src":"98724:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"98701:43:36"},"returnParameters":{"id":40579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40578,"mutability":"mutable","name":"keys","nameLocation":"98784:4:36","nodeType":"VariableDeclaration","scope":40580,"src":"98768:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":40576,"name":"string","nodeType":"ElementaryTypeName","src":"98768:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":40577,"nodeType":"ArrayTypeName","src":"98768:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"98767:22:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40590,"nodeType":"FunctionDefinition","src":"98870:106:36","nodes":[],"documentation":{"id":40581,"nodeType":"StructuredDocumentation","src":"98796:69:36","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"98879:15:36","parameters":{"id":40586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40583,"mutability":"mutable","name":"toml","nameLocation":"98911:4:36","nodeType":"VariableDeclaration","scope":40590,"src":"98895:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40582,"name":"string","nodeType":"ElementaryTypeName","src":"98895:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40585,"mutability":"mutable","name":"key","nameLocation":"98933:3:36","nodeType":"VariableDeclaration","scope":40590,"src":"98917:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40584,"name":"string","nodeType":"ElementaryTypeName","src":"98917:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"98894:43:36"},"returnParameters":{"id":40589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40590,"src":"98961:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":40587,"name":"string","nodeType":"ElementaryTypeName","src":"98961:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"98960:15:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40601,"nodeType":"FunctionDefinition","src":"99058:113:36","nodes":[],"documentation":{"id":40591,"nodeType":"StructuredDocumentation","src":"98982:71:36","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"99067:20:36","parameters":{"id":40596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40593,"mutability":"mutable","name":"toml","nameLocation":"99104:4:36","nodeType":"VariableDeclaration","scope":40601,"src":"99088:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40592,"name":"string","nodeType":"ElementaryTypeName","src":"99088:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40595,"mutability":"mutable","name":"key","nameLocation":"99126:3:36","nodeType":"VariableDeclaration","scope":40601,"src":"99110:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40594,"name":"string","nodeType":"ElementaryTypeName","src":"99110:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"99087:43:36"},"returnParameters":{"id":40600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40601,"src":"99154:15:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":40597,"name":"string","nodeType":"ElementaryTypeName","src":"99154:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":40598,"nodeType":"ArrayTypeName","src":"99154:8:36","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"99153:17:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40613,"nodeType":"FunctionDefinition","src":"99288:165:36","nodes":[],"documentation":{"id":40602,"nodeType":"StructuredDocumentation","src":"99177:106:36","text":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"49be3743","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlTypeArray","nameLocation":"99297:18:36","parameters":{"id":40609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40604,"mutability":"mutable","name":"toml","nameLocation":"99332:4:36","nodeType":"VariableDeclaration","scope":40613,"src":"99316:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40603,"name":"string","nodeType":"ElementaryTypeName","src":"99316:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40606,"mutability":"mutable","name":"key","nameLocation":"99354:3:36","nodeType":"VariableDeclaration","scope":40613,"src":"99338:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40605,"name":"string","nodeType":"ElementaryTypeName","src":"99338:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40608,"mutability":"mutable","name":"typeDescription","nameLocation":"99375:15:36","nodeType":"VariableDeclaration","scope":40613,"src":"99359:31:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40607,"name":"string","nodeType":"ElementaryTypeName","src":"99359:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"99315:76:36"},"returnParameters":{"id":40612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40613,"src":"99439:12:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":40610,"name":"bytes","nodeType":"ElementaryTypeName","src":"99439:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"99438:14:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40623,"nodeType":"FunctionDefinition","src":"99555:139:36","nodes":[],"documentation":{"id":40614,"nodeType":"StructuredDocumentation","src":"99459:91:36","text":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"47fa5e11","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"99564:13:36","parameters":{"id":40619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40616,"mutability":"mutable","name":"toml","nameLocation":"99594:4:36","nodeType":"VariableDeclaration","scope":40623,"src":"99578:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40615,"name":"string","nodeType":"ElementaryTypeName","src":"99578:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40618,"mutability":"mutable","name":"typeDescription","nameLocation":"99616:15:36","nodeType":"VariableDeclaration","scope":40623,"src":"99600:31:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40617,"name":"string","nodeType":"ElementaryTypeName","src":"99600:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"99577:55:36"},"returnParameters":{"id":40622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40623,"src":"99680:12:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":40620,"name":"bytes","nodeType":"ElementaryTypeName","src":"99680:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"99679:14:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40635,"nodeType":"FunctionDefinition","src":"99805:160:36","nodes":[],"documentation":{"id":40624,"nodeType":"StructuredDocumentation","src":"99700:100:36","text":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"f9fa5cdb","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"99814:13:36","parameters":{"id":40631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40626,"mutability":"mutable","name":"toml","nameLocation":"99844:4:36","nodeType":"VariableDeclaration","scope":40635,"src":"99828:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40625,"name":"string","nodeType":"ElementaryTypeName","src":"99828:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40628,"mutability":"mutable","name":"key","nameLocation":"99866:3:36","nodeType":"VariableDeclaration","scope":40635,"src":"99850:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40627,"name":"string","nodeType":"ElementaryTypeName","src":"99850:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40630,"mutability":"mutable","name":"typeDescription","nameLocation":"99887:15:36","nodeType":"VariableDeclaration","scope":40635,"src":"99871:31:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40629,"name":"string","nodeType":"ElementaryTypeName","src":"99871:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"99827:76:36"},"returnParameters":{"id":40634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40635,"src":"99951:12:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":40632,"name":"bytes","nodeType":"ElementaryTypeName","src":"99951:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"99950:14:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40645,"nodeType":"FunctionDefinition","src":"100046:98:36","nodes":[],"documentation":{"id":40636,"nodeType":"StructuredDocumentation","src":"99971:70:36","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"100055:13:36","parameters":{"id":40641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40638,"mutability":"mutable","name":"toml","nameLocation":"100085:4:36","nodeType":"VariableDeclaration","scope":40645,"src":"100069:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40637,"name":"string","nodeType":"ElementaryTypeName","src":"100069:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40640,"mutability":"mutable","name":"key","nameLocation":"100107:3:36","nodeType":"VariableDeclaration","scope":40645,"src":"100091:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40639,"name":"string","nodeType":"ElementaryTypeName","src":"100091:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"100068:43:36"},"returnParameters":{"id":40644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40645,"src":"100135:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40642,"name":"uint256","nodeType":"ElementaryTypeName","src":"100135:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100134:9:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40656,"nodeType":"FunctionDefinition","src":"100227:112:36","nodes":[],"documentation":{"id":40646,"nodeType":"StructuredDocumentation","src":"100150:72:36","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"100236:18:36","parameters":{"id":40651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40648,"mutability":"mutable","name":"toml","nameLocation":"100271:4:36","nodeType":"VariableDeclaration","scope":40656,"src":"100255:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40647,"name":"string","nodeType":"ElementaryTypeName","src":"100255:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40650,"mutability":"mutable","name":"key","nameLocation":"100293:3:36","nodeType":"VariableDeclaration","scope":40656,"src":"100277:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40649,"name":"string","nodeType":"ElementaryTypeName","src":"100277:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"100254:43:36"},"returnParameters":{"id":40655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40656,"src":"100321:16:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":40652,"name":"uint256","nodeType":"ElementaryTypeName","src":"100321:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40653,"nodeType":"ArrayTypeName","src":"100321:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"100320:18:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40664,"nodeType":"FunctionDefinition","src":"100379:93:36","nodes":[],"documentation":{"id":40657,"nodeType":"StructuredDocumentation","src":"100345:29:36","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"100388:9:36","parameters":{"id":40660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40659,"mutability":"mutable","name":"toml","nameLocation":"100414:4:36","nodeType":"VariableDeclaration","scope":40664,"src":"100398:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40658,"name":"string","nodeType":"ElementaryTypeName","src":"100398:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"100397:22:36"},"returnParameters":{"id":40663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40662,"mutability":"mutable","name":"abiEncodedData","nameLocation":"100456:14:36","nodeType":"VariableDeclaration","scope":40664,"src":"100443:27:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":40661,"name":"bytes","nodeType":"ElementaryTypeName","src":"100443:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"100442:29:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40674,"nodeType":"FunctionDefinition","src":"100521:114:36","nodes":[],"documentation":{"id":40665,"nodeType":"StructuredDocumentation","src":"100478:38:36","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"100530:9:36","parameters":{"id":40670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40667,"mutability":"mutable","name":"toml","nameLocation":"100556:4:36","nodeType":"VariableDeclaration","scope":40674,"src":"100540:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40666,"name":"string","nodeType":"ElementaryTypeName","src":"100540:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40669,"mutability":"mutable","name":"key","nameLocation":"100578:3:36","nodeType":"VariableDeclaration","scope":40674,"src":"100562:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40668,"name":"string","nodeType":"ElementaryTypeName","src":"100562:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"100539:43:36"},"returnParameters":{"id":40673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40672,"mutability":"mutable","name":"abiEncodedData","nameLocation":"100619:14:36","nodeType":"VariableDeclaration","scope":40674,"src":"100606:27:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":40671,"name":"bytes","nodeType":"ElementaryTypeName","src":"100606:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"100605:29:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40682,"nodeType":"FunctionDefinition","src":"100728:72:36","nodes":[],"documentation":{"id":40675,"nodeType":"StructuredDocumentation","src":"100641:82:36","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"100737:9:36","parameters":{"id":40680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40677,"mutability":"mutable","name":"json","nameLocation":"100763:4:36","nodeType":"VariableDeclaration","scope":40682,"src":"100747:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40676,"name":"string","nodeType":"ElementaryTypeName","src":"100747:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40679,"mutability":"mutable","name":"path","nameLocation":"100785:4:36","nodeType":"VariableDeclaration","scope":40682,"src":"100769:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40678,"name":"string","nodeType":"ElementaryTypeName","src":"100769:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"100746:44:36"},"returnParameters":{"id":40681,"nodeType":"ParameterList","parameters":[],"src":"100799:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40692,"nodeType":"FunctionDefinition","src":"101069:98:36","nodes":[],"documentation":{"id":40683,"nodeType":"StructuredDocumentation","src":"100806:258:36","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"101078:9:36","parameters":{"id":40690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40685,"mutability":"mutable","name":"json","nameLocation":"101104:4:36","nodeType":"VariableDeclaration","scope":40692,"src":"101088:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40684,"name":"string","nodeType":"ElementaryTypeName","src":"101088:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40687,"mutability":"mutable","name":"path","nameLocation":"101126:4:36","nodeType":"VariableDeclaration","scope":40692,"src":"101110:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40686,"name":"string","nodeType":"ElementaryTypeName","src":"101110:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40689,"mutability":"mutable","name":"valueKey","nameLocation":"101148:8:36","nodeType":"VariableDeclaration","scope":40692,"src":"101132:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40688,"name":"string","nodeType":"ElementaryTypeName","src":"101132:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"101087:70:36"},"returnParameters":{"id":40691,"nodeType":"ParameterList","parameters":[],"src":"101166:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40704,"nodeType":"FunctionDefinition","src":"101306:141:36","nodes":[],"documentation":{"id":40693,"nodeType":"StructuredDocumentation","src":"101209:92:36","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"101315:21:36","parameters":{"id":40700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40695,"mutability":"mutable","name":"salt","nameLocation":"101345:4:36","nodeType":"VariableDeclaration","scope":40704,"src":"101337:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"101337:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":40697,"mutability":"mutable","name":"initCodeHash","nameLocation":"101359:12:36","nodeType":"VariableDeclaration","scope":40704,"src":"101351:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"101351:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":40699,"mutability":"mutable","name":"deployer","nameLocation":"101381:8:36","nodeType":"VariableDeclaration","scope":40704,"src":"101373:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40698,"name":"address","nodeType":"ElementaryTypeName","src":"101373:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"101336:54:36"},"returnParameters":{"id":40703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40704,"src":"101438:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40701,"name":"address","nodeType":"ElementaryTypeName","src":"101438:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"101437:9:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40714,"nodeType":"FunctionDefinition","src":"101552:99:36","nodes":[],"documentation":{"id":40705,"nodeType":"StructuredDocumentation","src":"101453:94:36","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"101561:21:36","parameters":{"id":40710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40707,"mutability":"mutable","name":"salt","nameLocation":"101591:4:36","nodeType":"VariableDeclaration","scope":40714,"src":"101583:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"101583:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":40709,"mutability":"mutable","name":"initCodeHash","nameLocation":"101605:12:36","nodeType":"VariableDeclaration","scope":40714,"src":"101597:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"101597:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"101582:36:36"},"returnParameters":{"id":40713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40714,"src":"101642:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40711,"name":"address","nodeType":"ElementaryTypeName","src":"101642:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"101641:9:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40724,"nodeType":"FunctionDefinition","src":"101756:95:36","nodes":[],"documentation":{"id":40715,"nodeType":"StructuredDocumentation","src":"101657:94:36","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"101765:20:36","parameters":{"id":40720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40717,"mutability":"mutable","name":"deployer","nameLocation":"101794:8:36","nodeType":"VariableDeclaration","scope":40724,"src":"101786:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40716,"name":"address","nodeType":"ElementaryTypeName","src":"101786:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":40719,"mutability":"mutable","name":"nonce","nameLocation":"101812:5:36","nodeType":"VariableDeclaration","scope":40724,"src":"101804:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40718,"name":"uint256","nodeType":"ElementaryTypeName","src":"101804:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101785:33:36"},"returnParameters":{"id":40723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40724,"src":"101842:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40721,"name":"address","nodeType":"ElementaryTypeName","src":"101842:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"101841:9:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40732,"nodeType":"FunctionDefinition","src":"101944:56:36","nodes":[],"documentation":{"id":40725,"nodeType":"StructuredDocumentation","src":"101857:82:36","text":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"functionSelector":"203dac0d","implemented":false,"kind":"function","modifiers":[],"name":"copyStorage","nameLocation":"101953:11:36","parameters":{"id":40730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40727,"mutability":"mutable","name":"from","nameLocation":"101973:4:36","nodeType":"VariableDeclaration","scope":40732,"src":"101965:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40726,"name":"address","nodeType":"ElementaryTypeName","src":"101965:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":40729,"mutability":"mutable","name":"to","nameLocation":"101987:2:36","nodeType":"VariableDeclaration","scope":40732,"src":"101979:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40728,"name":"address","nodeType":"ElementaryTypeName","src":"101979:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"101964:26:36"},"returnParameters":{"id":40731,"nodeType":"ParameterList","parameters":[],"src":"101999:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40742,"nodeType":"FunctionDefinition","src":"102595:160:36","nodes":[],"documentation":{"id":40733,"nodeType":"StructuredDocumentation","src":"102006:584:36","text":"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data.\n Supports 2 different inputs:\n 1. Name of the type (i.e. \"PermitSingle\"):\n * requires previous binding generation with `forge bind-json`.\n * bindings will be retrieved from the path configured in `foundry.toml`.\n 2. String representation of the type (i.e. \"Foo(Bar bar) Bar(uint256 baz)\").\n * Note: the cheatcode will use the canonical type even if the input is malformated\n with the wrong order of elements or with extra whitespaces."},"functionSelector":"aedeaebc","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashStruct","nameLocation":"102604:16:36","parameters":{"id":40738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40735,"mutability":"mutable","name":"typeNameOrDefinition","nameLocation":"102637:20:36","nodeType":"VariableDeclaration","scope":40742,"src":"102621:36:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40734,"name":"string","nodeType":"ElementaryTypeName","src":"102621:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40737,"mutability":"mutable","name":"abiEncodedData","nameLocation":"102674:14:36","nodeType":"VariableDeclaration","scope":40742,"src":"102659:29:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40736,"name":"bytes","nodeType":"ElementaryTypeName","src":"102659:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"102620:69:36"},"returnParameters":{"id":40741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40740,"mutability":"mutable","name":"typeHash","nameLocation":"102745:8:36","nodeType":"VariableDeclaration","scope":40742,"src":"102737:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"102737:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"102736:18:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40754,"nodeType":"FunctionDefinition","src":"103175:178:36","nodes":[],"documentation":{"id":40743,"nodeType":"StructuredDocumentation","src":"102761:409:36","text":"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data.\n Requires previous binding generation with `forge bind-json`.\n Params:\n * `bindingsPath`: path where the output of `forge bind-json` is stored.\n * `typeName`: Name of the type (i.e. \"PermitSingle\").\n * `abiEncodedData`: ABI-encoded data for the struct that is being hashed."},"functionSelector":"6d06c57c","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashStruct","nameLocation":"103184:16:36","parameters":{"id":40750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40745,"mutability":"mutable","name":"bindingsPath","nameLocation":"103217:12:36","nodeType":"VariableDeclaration","scope":40754,"src":"103201:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40744,"name":"string","nodeType":"ElementaryTypeName","src":"103201:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40747,"mutability":"mutable","name":"typeName","nameLocation":"103247:8:36","nodeType":"VariableDeclaration","scope":40754,"src":"103231:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40746,"name":"string","nodeType":"ElementaryTypeName","src":"103231:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40749,"mutability":"mutable","name":"abiEncodedData","nameLocation":"103272:14:36","nodeType":"VariableDeclaration","scope":40754,"src":"103257:29:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40748,"name":"bytes","nodeType":"ElementaryTypeName","src":"103257:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"103200:87:36"},"returnParameters":{"id":40753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40752,"mutability":"mutable","name":"typeHash","nameLocation":"103343:8:36","nodeType":"VariableDeclaration","scope":40754,"src":"103335:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"103335:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"103334:18:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40762,"nodeType":"FunctionDefinition","src":"103918:103:36","nodes":[],"documentation":{"id":40755,"nodeType":"StructuredDocumentation","src":"103359:554:36","text":"Generates the hash of the canonical EIP-712 type representation.\n Supports 2 different inputs:\n 1. Name of the type (i.e. \"Transaction\"):\n * requires previous binding generation with `forge bind-json`.\n * bindings will be retrieved from the path configured in `foundry.toml`.\n 2. String representation of the type (i.e. \"Foo(Bar bar) Bar(uint256 baz)\").\n * Note: the cheatcode will output the canonical type even if the input is malformated\n with the wrong order of elements or with extra whitespaces."},"functionSelector":"6792e9e2","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashType","nameLocation":"103927:14:36","parameters":{"id":40758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40757,"mutability":"mutable","name":"typeNameOrDefinition","nameLocation":"103958:20:36","nodeType":"VariableDeclaration","scope":40762,"src":"103942:36:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40756,"name":"string","nodeType":"ElementaryTypeName","src":"103942:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"103941:38:36"},"returnParameters":{"id":40761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40760,"mutability":"mutable","name":"typeHash","nameLocation":"104011:8:36","nodeType":"VariableDeclaration","scope":40762,"src":"104003:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"104003:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"104002:18:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40772,"nodeType":"FunctionDefinition","src":"104326:145:36","nodes":[],"documentation":{"id":40763,"nodeType":"StructuredDocumentation","src":"104027:294:36","text":"Generates the hash of the canonical EIP-712 type representation.\n Requires previous binding generation with `forge bind-json`.\n Params:\n * `bindingsPath`: path where the output of `forge bind-json` is stored.\n * `typeName`: Name of the type (i.e. \"Transaction\")."},"functionSelector":"18fb6406","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashType","nameLocation":"104335:14:36","parameters":{"id":40768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40765,"mutability":"mutable","name":"bindingsPath","nameLocation":"104366:12:36","nodeType":"VariableDeclaration","scope":40772,"src":"104350:28:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40764,"name":"string","nodeType":"ElementaryTypeName","src":"104350:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40767,"mutability":"mutable","name":"typeName","nameLocation":"104396:8:36","nodeType":"VariableDeclaration","scope":40772,"src":"104380:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40766,"name":"string","nodeType":"ElementaryTypeName","src":"104380:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"104349:56:36"},"returnParameters":{"id":40771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40770,"mutability":"mutable","name":"typeHash","nameLocation":"104461:8:36","nodeType":"VariableDeclaration","scope":40772,"src":"104453:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40769,"name":"bytes32","nodeType":"ElementaryTypeName","src":"104453:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"104452:18:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40780,"nodeType":"FunctionDefinition","src":"104579:94:36","nodes":[],"documentation":{"id":40773,"nodeType":"StructuredDocumentation","src":"104477:97:36","text":"Generates a ready-to-sign digest of human-readable typed data following the EIP-712 standard."},"functionSelector":"ea25e615","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashTypedData","nameLocation":"104588:19:36","parameters":{"id":40776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40775,"mutability":"mutable","name":"jsonData","nameLocation":"104624:8:36","nodeType":"VariableDeclaration","scope":40780,"src":"104608:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40774,"name":"string","nodeType":"ElementaryTypeName","src":"104608:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"104607:26:36"},"returnParameters":{"id":40779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40778,"mutability":"mutable","name":"digest","nameLocation":"104665:6:36","nodeType":"VariableDeclaration","scope":40780,"src":"104657:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"104657:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"104656:16:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40788,"nodeType":"FunctionDefinition","src":"104729:75:36","nodes":[],"documentation":{"id":40781,"nodeType":"StructuredDocumentation","src":"104679:45:36","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"104738:11:36","parameters":{"id":40784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40783,"mutability":"mutable","name":"name","nameLocation":"104766:4:36","nodeType":"VariableDeclaration","scope":40788,"src":"104750:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40782,"name":"string","nodeType":"ElementaryTypeName","src":"104750:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"104749:22:36"},"returnParameters":{"id":40787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40788,"src":"104795:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"104795:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"104794:9:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40796,"nodeType":"FunctionDefinition","src":"104860:86:36","nodes":[],"documentation":{"id":40789,"nodeType":"StructuredDocumentation","src":"104810:45:36","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"104869:8:36","parameters":{"id":40792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40791,"mutability":"mutable","name":"account","nameLocation":"104886:7:36","nodeType":"VariableDeclaration","scope":40796,"src":"104878:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40790,"name":"address","nodeType":"ElementaryTypeName","src":"104878:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"104877:17:36"},"returnParameters":{"id":40795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40794,"mutability":"mutable","name":"currentLabel","nameLocation":"104932:12:36","nodeType":"VariableDeclaration","scope":40796,"src":"104918:26:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":40793,"name":"string","nodeType":"ElementaryTypeName","src":"104918:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"104917:28:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40804,"nodeType":"FunctionDefinition","src":"104994:67:36","nodes":[],"documentation":{"id":40797,"nodeType":"StructuredDocumentation","src":"104952:37:36","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"105003:5:36","parameters":{"id":40802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40799,"mutability":"mutable","name":"account","nameLocation":"105017:7:36","nodeType":"VariableDeclaration","scope":40804,"src":"105009:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40798,"name":"address","nodeType":"ElementaryTypeName","src":"105009:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":40801,"mutability":"mutable","name":"newLabel","nameLocation":"105042:8:36","nodeType":"VariableDeclaration","scope":40804,"src":"105026:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40800,"name":"string","nodeType":"ElementaryTypeName","src":"105026:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"105008:43:36"},"returnParameters":{"id":40803,"nodeType":"ParameterList","parameters":[],"src":"105060:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40808,"nodeType":"FunctionDefinition","src":"105216:38:36","nodes":[],"documentation":{"id":40805,"nodeType":"StructuredDocumentation","src":"105067:144:36","text":"Pauses collection of call traces. Useful in cases when you want to skip tracing of\n complex calls which are not useful for debugging."},"functionSelector":"c94d1f90","implemented":false,"kind":"function","modifiers":[],"name":"pauseTracing","nameLocation":"105225:12:36","parameters":{"id":40806,"nodeType":"ParameterList","parameters":[],"src":"105237:2:36"},"returnParameters":{"id":40807,"nodeType":"ParameterList","parameters":[],"src":"105253:0:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40814,"nodeType":"FunctionDefinition","src":"105296:57:36","nodes":[],"documentation":{"id":40809,"nodeType":"StructuredDocumentation","src":"105260:31:36","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"105305:13:36","parameters":{"id":40810,"nodeType":"ParameterList","parameters":[],"src":"105318:2:36"},"returnParameters":{"id":40813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40814,"src":"105344:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40811,"name":"address","nodeType":"ElementaryTypeName","src":"105344:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"105343:9:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40820,"nodeType":"FunctionDefinition","src":"105392:51:36","nodes":[],"documentation":{"id":40815,"nodeType":"StructuredDocumentation","src":"105359:28:36","text":"Returns a random `bool`."},"functionSelector":"cdc126bd","implemented":false,"kind":"function","modifiers":[],"name":"randomBool","nameLocation":"105401:10:36","parameters":{"id":40816,"nodeType":"ParameterList","parameters":[],"src":"105411:2:36"},"returnParameters":{"id":40819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40820,"src":"105437:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40817,"name":"bool","nodeType":"ElementaryTypeName","src":"105437:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"105436:6:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40828,"nodeType":"FunctionDefinition","src":"105512:71:36","nodes":[],"documentation":{"id":40821,"nodeType":"StructuredDocumentation","src":"105449:58:36","text":"Returns a random byte array value of the given length."},"functionSelector":"6c5d32a9","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes","nameLocation":"105521:11:36","parameters":{"id":40824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40823,"mutability":"mutable","name":"len","nameLocation":"105541:3:36","nodeType":"VariableDeclaration","scope":40828,"src":"105533:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40822,"name":"uint256","nodeType":"ElementaryTypeName","src":"105533:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105532:13:36"},"returnParameters":{"id":40827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40828,"src":"105569:12:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":40825,"name":"bytes","nodeType":"ElementaryTypeName","src":"105569:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"105568:14:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40834,"nodeType":"FunctionDefinition","src":"105649:55:36","nodes":[],"documentation":{"id":40829,"nodeType":"StructuredDocumentation","src":"105589:55:36","text":"Returns a random fixed-size byte array of length 4."},"functionSelector":"9b7cd579","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes4","nameLocation":"105658:12:36","parameters":{"id":40830,"nodeType":"ParameterList","parameters":[],"src":"105670:2:36"},"returnParameters":{"id":40833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40834,"src":"105696:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40831,"name":"bytes4","nodeType":"ElementaryTypeName","src":"105696:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"105695:8:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40840,"nodeType":"FunctionDefinition","src":"105770:55:36","nodes":[],"documentation":{"id":40835,"nodeType":"StructuredDocumentation","src":"105710:55:36","text":"Returns a random fixed-size byte array of length 8."},"functionSelector":"0497b0a5","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes8","nameLocation":"105779:12:36","parameters":{"id":40836,"nodeType":"ParameterList","parameters":[],"src":"105791:2:36"},"returnParameters":{"id":40839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40840,"src":"105817:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":40837,"name":"bytes8","nodeType":"ElementaryTypeName","src":"105817:6:36","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"105816:8:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40846,"nodeType":"FunctionDefinition","src":"105872:52:36","nodes":[],"documentation":{"id":40841,"nodeType":"StructuredDocumentation","src":"105831:36:36","text":"Returns a random `int256` value."},"functionSelector":"111f1202","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"105881:9:36","parameters":{"id":40842,"nodeType":"ParameterList","parameters":[],"src":"105890:2:36"},"returnParameters":{"id":40845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40846,"src":"105916:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":40843,"name":"int256","nodeType":"ElementaryTypeName","src":"105916:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"105915:8:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40854,"nodeType":"FunctionDefinition","src":"105985:64:36","nodes":[],"documentation":{"id":40847,"nodeType":"StructuredDocumentation","src":"105930:50:36","text":"Returns a random `int256` value of given bits."},"functionSelector":"12845966","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"105994:9:36","parameters":{"id":40850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40849,"mutability":"mutable","name":"bits","nameLocation":"106012:4:36","nodeType":"VariableDeclaration","scope":40854,"src":"106004:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40848,"name":"uint256","nodeType":"ElementaryTypeName","src":"106004:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106003:14:36"},"returnParameters":{"id":40853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40854,"src":"106041:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":40851,"name":"int256","nodeType":"ElementaryTypeName","src":"106041:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"106040:8:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40860,"nodeType":"FunctionDefinition","src":"106095:54:36","nodes":[],"documentation":{"id":40855,"nodeType":"StructuredDocumentation","src":"106055:35:36","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"106104:10:36","parameters":{"id":40856,"nodeType":"ParameterList","parameters":[],"src":"106114:2:36"},"returnParameters":{"id":40859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40860,"src":"106140:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40857,"name":"uint256","nodeType":"ElementaryTypeName","src":"106140:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106139:9:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40870,"nodeType":"FunctionDefinition","src":"106233:78:36","nodes":[],"documentation":{"id":40861,"nodeType":"StructuredDocumentation","src":"106155:73:36","text":"Returns random uint256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"106242:10:36","parameters":{"id":40866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40863,"mutability":"mutable","name":"min","nameLocation":"106261:3:36","nodeType":"VariableDeclaration","scope":40870,"src":"106253:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40862,"name":"uint256","nodeType":"ElementaryTypeName","src":"106253:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40865,"mutability":"mutable","name":"max","nameLocation":"106274:3:36","nodeType":"VariableDeclaration","scope":40870,"src":"106266:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40864,"name":"uint256","nodeType":"ElementaryTypeName","src":"106266:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106252:26:36"},"returnParameters":{"id":40869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40870,"src":"106302:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40867,"name":"uint256","nodeType":"ElementaryTypeName","src":"106302:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106301:9:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40878,"nodeType":"FunctionDefinition","src":"106373:66:36","nodes":[],"documentation":{"id":40871,"nodeType":"StructuredDocumentation","src":"106317:51:36","text":"Returns a random `uint256` value of given bits."},"functionSelector":"cf81e69c","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"106382:10:36","parameters":{"id":40874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40873,"mutability":"mutable","name":"bits","nameLocation":"106401:4:36","nodeType":"VariableDeclaration","scope":40878,"src":"106393:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40872,"name":"uint256","nodeType":"ElementaryTypeName","src":"106393:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106392:14:36"},"returnParameters":{"id":40877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40878,"src":"106430:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40875,"name":"uint256","nodeType":"ElementaryTypeName","src":"106430:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106429:9:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40882,"nodeType":"FunctionDefinition","src":"106489:39:36","nodes":[],"documentation":{"id":40879,"nodeType":"StructuredDocumentation","src":"106445:39:36","text":"Unpauses collection of call traces."},"functionSelector":"72a09ccb","implemented":false,"kind":"function","modifiers":[],"name":"resumeTracing","nameLocation":"106498:13:36","parameters":{"id":40880,"nodeType":"ParameterList","parameters":[],"src":"106511:2:36"},"returnParameters":{"id":40881,"nodeType":"ParameterList","parameters":[],"src":"106527:0:36"},"scope":40955,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40888,"nodeType":"FunctionDefinition","src":"106611:54:36","nodes":[],"documentation":{"id":40883,"nodeType":"StructuredDocumentation","src":"106534:72:36","text":"Utility cheatcode to set arbitrary storage for given target address."},"functionSelector":"e1631837","implemented":false,"kind":"function","modifiers":[],"name":"setArbitraryStorage","nameLocation":"106620:19:36","parameters":{"id":40886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40885,"mutability":"mutable","name":"target","nameLocation":"106648:6:36","nodeType":"VariableDeclaration","scope":40888,"src":"106640:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40884,"name":"address","nodeType":"ElementaryTypeName","src":"106640:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"106639:16:36"},"returnParameters":{"id":40887,"nodeType":"ParameterList","parameters":[],"src":"106664:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40896,"nodeType":"FunctionDefinition","src":"106818:70:36","nodes":[],"documentation":{"id":40889,"nodeType":"StructuredDocumentation","src":"106671:142:36","text":"Utility cheatcode to set arbitrary storage for given target address and overwrite\n any storage slots that have been previously set."},"functionSelector":"d3ec2a0b","implemented":false,"kind":"function","modifiers":[],"name":"setArbitraryStorage","nameLocation":"106827:19:36","parameters":{"id":40894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40891,"mutability":"mutable","name":"target","nameLocation":"106855:6:36","nodeType":"VariableDeclaration","scope":40896,"src":"106847:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40890,"name":"address","nodeType":"ElementaryTypeName","src":"106847:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":40893,"mutability":"mutable","name":"overwrite","nameLocation":"106868:9:36","nodeType":"VariableDeclaration","scope":40896,"src":"106863:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40892,"name":"bool","nodeType":"ElementaryTypeName","src":"106863:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"106846:32:36"},"returnParameters":{"id":40895,"nodeType":"ParameterList","parameters":[],"src":"106887:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40902,"nodeType":"FunctionDefinition","src":"106916:40:36","nodes":[],"documentation":{"id":40897,"nodeType":"StructuredDocumentation","src":"106894:17:36","text":"Set RNG seed."},"functionSelector":"c32a50f9","implemented":false,"kind":"function","modifiers":[],"name":"setSeed","nameLocation":"106925:7:36","parameters":{"id":40900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40899,"mutability":"mutable","name":"seed","nameLocation":"106941:4:36","nodeType":"VariableDeclaration","scope":40902,"src":"106933:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40898,"name":"uint256","nodeType":"ElementaryTypeName","src":"106933:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106932:14:36"},"returnParameters":{"id":40901,"nodeType":"ParameterList","parameters":[],"src":"106955:0:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40912,"nodeType":"FunctionDefinition","src":"106998:79:36","nodes":[],"documentation":{"id":40903,"nodeType":"StructuredDocumentation","src":"106962:31:36","text":"Randomly shuffles an array."},"functionSelector":"54f1469c","implemented":false,"kind":"function","modifiers":[],"name":"shuffle","nameLocation":"107007:7:36","parameters":{"id":40907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40906,"mutability":"mutable","name":"array","nameLocation":"107034:5:36","nodeType":"VariableDeclaration","scope":40912,"src":"107015:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":40904,"name":"uint256","nodeType":"ElementaryTypeName","src":"107015:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40905,"nodeType":"ArrayTypeName","src":"107015:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"107014:26:36"},"returnParameters":{"id":40911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40912,"src":"107059:16:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":40908,"name":"uint256","nodeType":"ElementaryTypeName","src":"107059:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40909,"nodeType":"ArrayTypeName","src":"107059:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"107058:18:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40922,"nodeType":"FunctionDefinition","src":"107126:76:36","nodes":[],"documentation":{"id":40913,"nodeType":"StructuredDocumentation","src":"107083:38:36","text":"Sorts an array in ascending order."},"functionSelector":"9ec8b026","implemented":false,"kind":"function","modifiers":[],"name":"sort","nameLocation":"107135:4:36","parameters":{"id":40917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40916,"mutability":"mutable","name":"array","nameLocation":"107159:5:36","nodeType":"VariableDeclaration","scope":40922,"src":"107140:24:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":40914,"name":"uint256","nodeType":"ElementaryTypeName","src":"107140:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40915,"nodeType":"ArrayTypeName","src":"107140:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"107139:26:36"},"returnParameters":{"id":40921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40922,"src":"107184:16:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":40918,"name":"uint256","nodeType":"ElementaryTypeName","src":"107184:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40919,"nodeType":"ArrayTypeName","src":"107184:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"107183:18:36"},"scope":40955,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40930,"nodeType":"FunctionDefinition","src":"107263:80:36","nodes":[],"documentation":{"id":40923,"nodeType":"StructuredDocumentation","src":"107208:50:36","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"107272:11:36","parameters":{"id":40926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40925,"mutability":"mutable","name":"data","nameLocation":"107299:4:36","nodeType":"VariableDeclaration","scope":40930,"src":"107284:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40924,"name":"bytes","nodeType":"ElementaryTypeName","src":"107284:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"107283:21:36"},"returnParameters":{"id":40929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40930,"src":"107328:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":40927,"name":"string","nodeType":"ElementaryTypeName","src":"107328:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"107327:15:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40938,"nodeType":"FunctionDefinition","src":"107405:81:36","nodes":[],"documentation":{"id":40931,"nodeType":"StructuredDocumentation","src":"107349:51:36","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"107414:11:36","parameters":{"id":40934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40933,"mutability":"mutable","name":"data","nameLocation":"107442:4:36","nodeType":"VariableDeclaration","scope":40938,"src":"107426:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40932,"name":"string","nodeType":"ElementaryTypeName","src":"107426:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"107425:22:36"},"returnParameters":{"id":40937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40938,"src":"107471:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":40935,"name":"string","nodeType":"ElementaryTypeName","src":"107471:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"107470:15:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40946,"nodeType":"FunctionDefinition","src":"107544:77:36","nodes":[],"documentation":{"id":40939,"nodeType":"StructuredDocumentation","src":"107492:47:36","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"107553:8:36","parameters":{"id":40942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40941,"mutability":"mutable","name":"data","nameLocation":"107577:4:36","nodeType":"VariableDeclaration","scope":40946,"src":"107562:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40940,"name":"bytes","nodeType":"ElementaryTypeName","src":"107562:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"107561:21:36"},"returnParameters":{"id":40945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40946,"src":"107606:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":40943,"name":"string","nodeType":"ElementaryTypeName","src":"107606:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"107605:15:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":40954,"nodeType":"FunctionDefinition","src":"107680:78:36","nodes":[],"documentation":{"id":40947,"nodeType":"StructuredDocumentation","src":"107627:48:36","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"107689:8:36","parameters":{"id":40950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40949,"mutability":"mutable","name":"data","nameLocation":"107714:4:36","nodeType":"VariableDeclaration","scope":40954,"src":"107698:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":40948,"name":"string","nodeType":"ElementaryTypeName","src":"107698:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"107697:22:36"},"returnParameters":{"id":40953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40954,"src":"107743:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":40951,"name":"string","nodeType":"ElementaryTypeName","src":"107743:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"107742:15:36"},"scope":40955,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":36744,"nodeType":"StructuredDocumentation","src":"184:225:36","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[40955],"name":"VmSafe","nameLocation":"419:6:36","scope":42027,"usedErrors":[],"usedEvents":[]},{"id":42026,"nodeType":"ContractDefinition","src":"107933:26587:36","nodes":[{"id":40966,"nodeType":"FunctionDefinition","src":"108082:63:36","nodes":[],"documentation":{"id":40959,"nodeType":"StructuredDocumentation","src":"107992:85:36","text":"Utility cheatcode to set an EIP-2930 access list for all subsequent transactions."},"functionSelector":"743e4cb7","implemented":false,"kind":"function","modifiers":[],"name":"accessList","nameLocation":"108091:10:36","parameters":{"id":40964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40963,"mutability":"mutable","name":"access","nameLocation":"108128:6:36","nodeType":"VariableDeclaration","scope":40966,"src":"108102:32:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessListItem_$36995_calldata_ptr_$dyn_calldata_ptr","typeString":"struct VmSafe.AccessListItem[]"},"typeName":{"baseType":{"id":40961,"nodeType":"UserDefinedTypeName","pathNode":{"id":40960,"name":"AccessListItem","nameLocations":["108102:14:36"],"nodeType":"IdentifierPath","referencedDeclaration":36995,"src":"108102:14:36"},"referencedDeclaration":36995,"src":"108102:14:36","typeDescriptions":{"typeIdentifier":"t_struct$_AccessListItem_$36995_storage_ptr","typeString":"struct VmSafe.AccessListItem"}},"id":40962,"nodeType":"ArrayTypeName","src":"108102:16:36","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessListItem_$36995_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccessListItem[]"}},"visibility":"internal"}],"src":"108101:34:36"},"returnParameters":{"id":40965,"nodeType":"ParameterList","parameters":[],"src":"108144:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40972,"nodeType":"FunctionDefinition","src":"108252:61:36","nodes":[],"documentation":{"id":40967,"nodeType":"StructuredDocumentation","src":"108151:96:36","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"108261:10:36","parameters":{"id":40968,"nodeType":"ParameterList","parameters":[],"src":"108271:2:36"},"returnParameters":{"id":40971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40970,"mutability":"mutable","name":"forkId","nameLocation":"108305:6:36","nodeType":"VariableDeclaration","scope":40972,"src":"108297:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40969,"name":"uint256","nodeType":"ElementaryTypeName","src":"108297:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108296:16:36"},"scope":42026,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":40978,"nodeType":"FunctionDefinition","src":"108397:51:36","nodes":[],"documentation":{"id":40973,"nodeType":"StructuredDocumentation","src":"108319:73:36","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"108406:15:36","parameters":{"id":40976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40975,"mutability":"mutable","name":"account","nameLocation":"108430:7:36","nodeType":"VariableDeclaration","scope":40978,"src":"108422:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40974,"name":"address","nodeType":"ElementaryTypeName","src":"108422:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108421:17:36"},"returnParameters":{"id":40977,"nodeType":"ParameterList","parameters":[],"src":"108447:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40984,"nodeType":"FunctionDefinition","src":"108487:54:36","nodes":[],"documentation":{"id":40979,"nodeType":"StructuredDocumentation","src":"108454:28:36","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"108496:11:36","parameters":{"id":40982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40981,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"108516:14:36","nodeType":"VariableDeclaration","scope":40984,"src":"108508:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40980,"name":"uint256","nodeType":"ElementaryTypeName","src":"108508:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108507:24:36"},"returnParameters":{"id":40983,"nodeType":"ParameterList","parameters":[],"src":"108540:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40991,"nodeType":"FunctionDefinition","src":"108708:56:36","nodes":[],"documentation":{"id":40985,"nodeType":"StructuredDocumentation","src":"108547:156:36","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"108717:10:36","parameters":{"id":40989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40988,"mutability":"mutable","name":"hashes","nameLocation":"108747:6:36","nodeType":"VariableDeclaration","scope":40991,"src":"108728:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":40986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"108728:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":40987,"nodeType":"ArrayTypeName","src":"108728:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"108727:27:36"},"returnParameters":{"id":40990,"nodeType":"ParameterList","parameters":[],"src":"108763:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40997,"nodeType":"FunctionDefinition","src":"108800:46:36","nodes":[],"documentation":{"id":40992,"nodeType":"StructuredDocumentation","src":"108770:25:36","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"108809:7:36","parameters":{"id":40995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40994,"mutability":"mutable","name":"newChainId","nameLocation":"108825:10:36","nodeType":"VariableDeclaration","scope":40997,"src":"108817:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40993,"name":"uint256","nodeType":"ElementaryTypeName","src":"108817:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108816:20:36"},"returnParameters":{"id":40996,"nodeType":"ParameterList","parameters":[],"src":"108845:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41001,"nodeType":"FunctionDefinition","src":"108885:37:36","nodes":[],"documentation":{"id":40998,"nodeType":"StructuredDocumentation","src":"108852:28:36","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"108894:16:36","parameters":{"id":40999,"nodeType":"ParameterList","parameters":[],"src":"108910:2:36"},"returnParameters":{"id":41000,"nodeType":"ParameterList","parameters":[],"src":"108921:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41009,"nodeType":"FunctionDefinition","src":"109044:63:36","nodes":[],"documentation":{"id":41002,"nodeType":"StructuredDocumentation","src":"108928:111:36","text":"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state."},"functionSelector":"533d61c9","implemented":false,"kind":"function","modifiers":[],"name":"cloneAccount","nameLocation":"109053:12:36","parameters":{"id":41007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41004,"mutability":"mutable","name":"source","nameLocation":"109074:6:36","nodeType":"VariableDeclaration","scope":41009,"src":"109066:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41003,"name":"address","nodeType":"ElementaryTypeName","src":"109066:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41006,"mutability":"mutable","name":"target","nameLocation":"109090:6:36","nodeType":"VariableDeclaration","scope":41009,"src":"109082:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41005,"name":"address","nodeType":"ElementaryTypeName","src":"109082:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"109065:32:36"},"returnParameters":{"id":41008,"nodeType":"ParameterList","parameters":[],"src":"109106:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41015,"nodeType":"FunctionDefinition","src":"109144:48:36","nodes":[],"documentation":{"id":41010,"nodeType":"StructuredDocumentation","src":"109113:26:36","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"109153:8:36","parameters":{"id":41013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41012,"mutability":"mutable","name":"newCoinbase","nameLocation":"109170:11:36","nodeType":"VariableDeclaration","scope":41015,"src":"109162:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41011,"name":"address","nodeType":"ElementaryTypeName","src":"109162:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"109161:21:36"},"returnParameters":{"id":41014,"nodeType":"ParameterList","parameters":[],"src":"109191:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41021,"nodeType":"FunctionDefinition","src":"109269:39:36","nodes":[],"documentation":{"id":41016,"nodeType":"StructuredDocumentation","src":"109198:66:36","text":"Marks the slots of an account and the account address as cold."},"functionSelector":"40ff9f21","implemented":false,"kind":"function","modifiers":[],"name":"cool","nameLocation":"109278:4:36","parameters":{"id":41019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41018,"mutability":"mutable","name":"target","nameLocation":"109291:6:36","nodeType":"VariableDeclaration","scope":41021,"src":"109283:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41017,"name":"address","nodeType":"ElementaryTypeName","src":"109283:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"109282:16:36"},"returnParameters":{"id":41020,"nodeType":"ParameterList","parameters":[],"src":"109307:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41029,"nodeType":"FunctionDefinition","src":"109405:57:36","nodes":[],"documentation":{"id":41022,"nodeType":"StructuredDocumentation","src":"109314:86:36","text":"Utility cheatcode to mark specific storage slot as cold, simulating no prior read."},"functionSelector":"8c78e654","implemented":false,"kind":"function","modifiers":[],"name":"coolSlot","nameLocation":"109414:8:36","parameters":{"id":41027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41024,"mutability":"mutable","name":"target","nameLocation":"109431:6:36","nodeType":"VariableDeclaration","scope":41029,"src":"109423:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41023,"name":"address","nodeType":"ElementaryTypeName","src":"109423:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41026,"mutability":"mutable","name":"slot","nameLocation":"109447:4:36","nodeType":"VariableDeclaration","scope":41029,"src":"109439:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":41025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"109439:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"109422:30:36"},"returnParameters":{"id":41028,"nodeType":"ParameterList","parameters":[],"src":"109461:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41037,"nodeType":"FunctionDefinition","src":"109582:82:36","nodes":[],"documentation":{"id":41030,"nodeType":"StructuredDocumentation","src":"109468:109:36","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"109591:10:36","parameters":{"id":41033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41032,"mutability":"mutable","name":"urlOrAlias","nameLocation":"109618:10:36","nodeType":"VariableDeclaration","scope":41037,"src":"109602:26:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41031,"name":"string","nodeType":"ElementaryTypeName","src":"109602:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"109601:28:36"},"returnParameters":{"id":41036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41035,"mutability":"mutable","name":"forkId","nameLocation":"109656:6:36","nodeType":"VariableDeclaration","scope":41037,"src":"109648:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41034,"name":"uint256","nodeType":"ElementaryTypeName","src":"109648:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109647:16:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41047,"nodeType":"FunctionDefinition","src":"109771:103:36","nodes":[],"documentation":{"id":41038,"nodeType":"StructuredDocumentation","src":"109670:96:36","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"109780:10:36","parameters":{"id":41043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41040,"mutability":"mutable","name":"urlOrAlias","nameLocation":"109807:10:36","nodeType":"VariableDeclaration","scope":41047,"src":"109791:26:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41039,"name":"string","nodeType":"ElementaryTypeName","src":"109791:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":41042,"mutability":"mutable","name":"blockNumber","nameLocation":"109827:11:36","nodeType":"VariableDeclaration","scope":41047,"src":"109819:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41041,"name":"uint256","nodeType":"ElementaryTypeName","src":"109819:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109790:49:36"},"returnParameters":{"id":41046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41045,"mutability":"mutable","name":"forkId","nameLocation":"109866:6:36","nodeType":"VariableDeclaration","scope":41047,"src":"109858:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41044,"name":"uint256","nodeType":"ElementaryTypeName","src":"109858:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109857:16:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41057,"nodeType":"FunctionDefinition","src":"110099:98:36","nodes":[],"documentation":{"id":41048,"nodeType":"StructuredDocumentation","src":"109880:214:36","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"110108:10:36","parameters":{"id":41053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41050,"mutability":"mutable","name":"urlOrAlias","nameLocation":"110135:10:36","nodeType":"VariableDeclaration","scope":41057,"src":"110119:26:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41049,"name":"string","nodeType":"ElementaryTypeName","src":"110119:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":41052,"mutability":"mutable","name":"txHash","nameLocation":"110155:6:36","nodeType":"VariableDeclaration","scope":41057,"src":"110147:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":41051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"110147:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"110118:44:36"},"returnParameters":{"id":41056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41055,"mutability":"mutable","name":"forkId","nameLocation":"110189:6:36","nodeType":"VariableDeclaration","scope":41057,"src":"110181:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41054,"name":"uint256","nodeType":"ElementaryTypeName","src":"110181:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"110180:16:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41065,"nodeType":"FunctionDefinition","src":"110332:88:36","nodes":[],"documentation":{"id":41058,"nodeType":"StructuredDocumentation","src":"110203:124:36","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"110341:16:36","parameters":{"id":41061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41060,"mutability":"mutable","name":"urlOrAlias","nameLocation":"110374:10:36","nodeType":"VariableDeclaration","scope":41065,"src":"110358:26:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41059,"name":"string","nodeType":"ElementaryTypeName","src":"110358:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"110357:28:36"},"returnParameters":{"id":41064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41063,"mutability":"mutable","name":"forkId","nameLocation":"110412:6:36","nodeType":"VariableDeclaration","scope":41065,"src":"110404:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41062,"name":"uint256","nodeType":"ElementaryTypeName","src":"110404:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"110403:16:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41075,"nodeType":"FunctionDefinition","src":"110544:109:36","nodes":[],"documentation":{"id":41066,"nodeType":"StructuredDocumentation","src":"110426:113:36","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"110553:16:36","parameters":{"id":41071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41068,"mutability":"mutable","name":"urlOrAlias","nameLocation":"110586:10:36","nodeType":"VariableDeclaration","scope":41075,"src":"110570:26:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41067,"name":"string","nodeType":"ElementaryTypeName","src":"110570:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":41070,"mutability":"mutable","name":"blockNumber","nameLocation":"110606:11:36","nodeType":"VariableDeclaration","scope":41075,"src":"110598:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41069,"name":"uint256","nodeType":"ElementaryTypeName","src":"110598:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"110569:49:36"},"returnParameters":{"id":41074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41073,"mutability":"mutable","name":"forkId","nameLocation":"110645:6:36","nodeType":"VariableDeclaration","scope":41075,"src":"110637:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41072,"name":"uint256","nodeType":"ElementaryTypeName","src":"110637:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"110636:16:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41085,"nodeType":"FunctionDefinition","src":"110889:104:36","nodes":[],"documentation":{"id":41076,"nodeType":"StructuredDocumentation","src":"110659:225:36","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"110898:16:36","parameters":{"id":41081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41078,"mutability":"mutable","name":"urlOrAlias","nameLocation":"110931:10:36","nodeType":"VariableDeclaration","scope":41085,"src":"110915:26:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41077,"name":"string","nodeType":"ElementaryTypeName","src":"110915:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":41080,"mutability":"mutable","name":"txHash","nameLocation":"110951:6:36","nodeType":"VariableDeclaration","scope":41085,"src":"110943:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":41079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"110943:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"110914:44:36"},"returnParameters":{"id":41084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41083,"mutability":"mutable","name":"forkId","nameLocation":"110985:6:36","nodeType":"VariableDeclaration","scope":41085,"src":"110977:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41082,"name":"uint256","nodeType":"ElementaryTypeName","src":"110977:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"110976:16:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41093,"nodeType":"FunctionDefinition","src":"111033:60:36","nodes":[],"documentation":{"id":41086,"nodeType":"StructuredDocumentation","src":"110999:29:36","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"111042:4:36","parameters":{"id":41091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41088,"mutability":"mutable","name":"account","nameLocation":"111055:7:36","nodeType":"VariableDeclaration","scope":41093,"src":"111047:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41087,"name":"address","nodeType":"ElementaryTypeName","src":"111047:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41090,"mutability":"mutable","name":"newBalance","nameLocation":"111072:10:36","nodeType":"VariableDeclaration","scope":41093,"src":"111064:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41089,"name":"uint256","nodeType":"ElementaryTypeName","src":"111064:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"111046:37:36"},"returnParameters":{"id":41092,"nodeType":"ParameterList","parameters":[],"src":"111092:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41101,"nodeType":"FunctionDefinition","src":"111331:81:36","nodes":[],"documentation":{"id":41094,"nodeType":"StructuredDocumentation","src":"111099:227:36","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"08d6b37a","implemented":false,"kind":"function","modifiers":[],"name":"deleteStateSnapshot","nameLocation":"111340:19:36","parameters":{"id":41097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41096,"mutability":"mutable","name":"snapshotId","nameLocation":"111368:10:36","nodeType":"VariableDeclaration","scope":41101,"src":"111360:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41095,"name":"uint256","nodeType":"ElementaryTypeName","src":"111360:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"111359:20:36"},"returnParameters":{"id":41100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41099,"mutability":"mutable","name":"success","nameLocation":"111403:7:36","nodeType":"VariableDeclaration","scope":41101,"src":"111398:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41098,"name":"bool","nodeType":"ElementaryTypeName","src":"111398:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"111397:14:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41105,"nodeType":"FunctionDefinition","src":"111484:41:36","nodes":[],"documentation":{"id":41102,"nodeType":"StructuredDocumentation","src":"111418:61:36","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"e0933c74","implemented":false,"kind":"function","modifiers":[],"name":"deleteStateSnapshots","nameLocation":"111493:20:36","parameters":{"id":41103,"nodeType":"ParameterList","parameters":[],"src":"111513:2:36"},"returnParameters":{"id":41104,"nodeType":"ParameterList","parameters":[],"src":"111524:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41111,"nodeType":"FunctionDefinition","src":"111701:52:36","nodes":[],"documentation":{"id":41106,"nodeType":"StructuredDocumentation","src":"111531:165:36","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"111710:10:36","parameters":{"id":41109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41108,"mutability":"mutable","name":"newDifficulty","nameLocation":"111729:13:36","nodeType":"VariableDeclaration","scope":41111,"src":"111721:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41107,"name":"uint256","nodeType":"ElementaryTypeName","src":"111721:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"111720:23:36"},"returnParameters":{"id":41110,"nodeType":"ParameterList","parameters":[],"src":"111752:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41117,"nodeType":"FunctionDefinition","src":"111812:61:36","nodes":[],"documentation":{"id":41112,"nodeType":"StructuredDocumentation","src":"111759:48:36","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"111821:9:36","parameters":{"id":41115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41114,"mutability":"mutable","name":"pathToStateJson","nameLocation":"111847:15:36","nodeType":"VariableDeclaration","scope":41117,"src":"111831:31:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41113,"name":"string","nodeType":"ElementaryTypeName","src":"111831:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"111830:33:36"},"returnParameters":{"id":41116,"nodeType":"ParameterList","parameters":[],"src":"111872:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41125,"nodeType":"FunctionDefinition","src":"111910:74:36","nodes":[],"documentation":{"id":41118,"nodeType":"StructuredDocumentation","src":"111879:26:36","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"111919:4:36","parameters":{"id":41123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41120,"mutability":"mutable","name":"target","nameLocation":"111932:6:36","nodeType":"VariableDeclaration","scope":41125,"src":"111924:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41119,"name":"address","nodeType":"ElementaryTypeName","src":"111924:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41122,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"111955:18:36","nodeType":"VariableDeclaration","scope":41125,"src":"111940:33:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41121,"name":"bytes","nodeType":"ElementaryTypeName","src":"111940:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111923:51:36"},"returnParameters":{"id":41124,"nodeType":"ParameterList","parameters":[],"src":"111983:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41131,"nodeType":"FunctionDefinition","src":"112020:42:36","nodes":[],"documentation":{"id":41126,"nodeType":"StructuredDocumentation","src":"111990:25:36","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"112029:3:36","parameters":{"id":41129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41128,"mutability":"mutable","name":"newBasefee","nameLocation":"112041:10:36","nodeType":"VariableDeclaration","scope":41131,"src":"112033:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41127,"name":"uint256","nodeType":"ElementaryTypeName","src":"112033:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"112032:20:36"},"returnParameters":{"id":41130,"nodeType":"ParameterList","parameters":[],"src":"112061:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41138,"nodeType":"FunctionDefinition","src":"112240:73:36","nodes":[],"documentation":{"id":41132,"nodeType":"StructuredDocumentation","src":"112068:167:36","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"112249:13:36","parameters":{"id":41133,"nodeType":"ParameterList","parameters":[],"src":"112262:2:36"},"returnParameters":{"id":41137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41136,"mutability":"mutable","name":"hashes","nameLocation":"112305:6:36","nodeType":"VariableDeclaration","scope":41138,"src":"112288:23:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":41134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"112288:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":41135,"nodeType":"ArrayTypeName","src":"112288:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"112287:25:36"},"scope":42026,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":41146,"nodeType":"FunctionDefinition","src":"112380:79:36","nodes":[],"documentation":{"id":41139,"nodeType":"StructuredDocumentation","src":"112319:56:36","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"112389:12:36","parameters":{"id":41142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41141,"mutability":"mutable","name":"account","nameLocation":"112410:7:36","nodeType":"VariableDeclaration","scope":41146,"src":"112402:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41140,"name":"address","nodeType":"ElementaryTypeName","src":"112402:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"112401:17:36"},"returnParameters":{"id":41145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41144,"mutability":"mutable","name":"persistent","nameLocation":"112447:10:36","nodeType":"VariableDeclaration","scope":41146,"src":"112442:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41143,"name":"bool","nodeType":"ElementaryTypeName","src":"112442:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"112441:17:36"},"scope":42026,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":41152,"nodeType":"FunctionDefinition","src":"112539:63:36","nodes":[],"documentation":{"id":41147,"nodeType":"StructuredDocumentation","src":"112465:69:36","text":"Load a genesis JSON file's `allocs` into the in-memory EVM state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"112548:10:36","parameters":{"id":41150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41149,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"112575:16:36","nodeType":"VariableDeclaration","scope":41152,"src":"112559:32:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41148,"name":"string","nodeType":"ElementaryTypeName","src":"112559:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"112558:34:36"},"returnParameters":{"id":41151,"nodeType":"ParameterList","parameters":[],"src":"112601:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41158,"nodeType":"FunctionDefinition","src":"112805:50:36","nodes":[],"documentation":{"id":41153,"nodeType":"StructuredDocumentation","src":"112608:192:36","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"112814:14:36","parameters":{"id":41156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41155,"mutability":"mutable","name":"account","nameLocation":"112837:7:36","nodeType":"VariableDeclaration","scope":41158,"src":"112829:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41154,"name":"address","nodeType":"ElementaryTypeName","src":"112829:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"112828:17:36"},"returnParameters":{"id":41157,"nodeType":"ParameterList","parameters":[],"src":"112854:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41166,"nodeType":"FunctionDefinition","src":"112900:69:36","nodes":[],"documentation":{"id":41159,"nodeType":"StructuredDocumentation","src":"112861:34:36","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"112909:14:36","parameters":{"id":41164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41161,"mutability":"mutable","name":"account0","nameLocation":"112932:8:36","nodeType":"VariableDeclaration","scope":41166,"src":"112924:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41160,"name":"address","nodeType":"ElementaryTypeName","src":"112924:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41163,"mutability":"mutable","name":"account1","nameLocation":"112950:8:36","nodeType":"VariableDeclaration","scope":41166,"src":"112942:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41162,"name":"address","nodeType":"ElementaryTypeName","src":"112942:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"112923:36:36"},"returnParameters":{"id":41165,"nodeType":"ParameterList","parameters":[],"src":"112968:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41176,"nodeType":"FunctionDefinition","src":"113014:87:36","nodes":[],"documentation":{"id":41167,"nodeType":"StructuredDocumentation","src":"112975:34:36","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"113023:14:36","parameters":{"id":41174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41169,"mutability":"mutable","name":"account0","nameLocation":"113046:8:36","nodeType":"VariableDeclaration","scope":41176,"src":"113038:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41168,"name":"address","nodeType":"ElementaryTypeName","src":"113038:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41171,"mutability":"mutable","name":"account1","nameLocation":"113064:8:36","nodeType":"VariableDeclaration","scope":41176,"src":"113056:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41170,"name":"address","nodeType":"ElementaryTypeName","src":"113056:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41173,"mutability":"mutable","name":"account2","nameLocation":"113082:8:36","nodeType":"VariableDeclaration","scope":41176,"src":"113074:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41172,"name":"address","nodeType":"ElementaryTypeName","src":"113074:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"113037:54:36"},"returnParameters":{"id":41175,"nodeType":"ParameterList","parameters":[],"src":"113100:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41183,"nodeType":"FunctionDefinition","src":"113146:62:36","nodes":[],"documentation":{"id":41177,"nodeType":"StructuredDocumentation","src":"113107:34:36","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"113155:14:36","parameters":{"id":41181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41180,"mutability":"mutable","name":"accounts","nameLocation":"113189:8:36","nodeType":"VariableDeclaration","scope":41183,"src":"113170:27:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":41178,"name":"address","nodeType":"ElementaryTypeName","src":"113170:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":41179,"nodeType":"ArrayTypeName","src":"113170:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"113169:29:36"},"returnParameters":{"id":41182,"nodeType":"ParameterList","parameters":[],"src":"113207:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41193,"nodeType":"FunctionDefinition","src":"113279:97:36","nodes":[],"documentation":{"id":41184,"nodeType":"StructuredDocumentation","src":"113214:60:36","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"113288:14:36","parameters":{"id":41191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41186,"mutability":"mutable","name":"callee","nameLocation":"113311:6:36","nodeType":"VariableDeclaration","scope":41193,"src":"113303:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41185,"name":"address","nodeType":"ElementaryTypeName","src":"113303:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41188,"mutability":"mutable","name":"data","nameLocation":"113334:4:36","nodeType":"VariableDeclaration","scope":41193,"src":"113319:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41187,"name":"bytes","nodeType":"ElementaryTypeName","src":"113319:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41190,"mutability":"mutable","name":"revertData","nameLocation":"113355:10:36","nodeType":"VariableDeclaration","scope":41193,"src":"113340:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41189,"name":"bytes","nodeType":"ElementaryTypeName","src":"113340:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"113302:64:36"},"returnParameters":{"id":41192,"nodeType":"ParameterList","parameters":[],"src":"113375:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41205,"nodeType":"FunctionDefinition","src":"113476:123:36","nodes":[],"documentation":{"id":41194,"nodeType":"StructuredDocumentation","src":"113382:89:36","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"113485:14:36","parameters":{"id":41203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41196,"mutability":"mutable","name":"callee","nameLocation":"113508:6:36","nodeType":"VariableDeclaration","scope":41205,"src":"113500:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41195,"name":"address","nodeType":"ElementaryTypeName","src":"113500:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41198,"mutability":"mutable","name":"msgValue","nameLocation":"113524:8:36","nodeType":"VariableDeclaration","scope":41205,"src":"113516:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41197,"name":"uint256","nodeType":"ElementaryTypeName","src":"113516:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41200,"mutability":"mutable","name":"data","nameLocation":"113549:4:36","nodeType":"VariableDeclaration","scope":41205,"src":"113534:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41199,"name":"bytes","nodeType":"ElementaryTypeName","src":"113534:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41202,"mutability":"mutable","name":"revertData","nameLocation":"113570:10:36","nodeType":"VariableDeclaration","scope":41205,"src":"113555:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41201,"name":"bytes","nodeType":"ElementaryTypeName","src":"113555:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"113499:82:36"},"returnParameters":{"id":41204,"nodeType":"ParameterList","parameters":[],"src":"113598:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41215,"nodeType":"FunctionDefinition","src":"113812:89:36","nodes":[],"documentation":{"id":41206,"nodeType":"StructuredDocumentation","src":"113605:202:36","text":"Reverts a call to an address with specified revert data.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"2dfba5df","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"113821:14:36","parameters":{"id":41213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41208,"mutability":"mutable","name":"callee","nameLocation":"113844:6:36","nodeType":"VariableDeclaration","scope":41215,"src":"113836:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41207,"name":"address","nodeType":"ElementaryTypeName","src":"113836:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41210,"mutability":"mutable","name":"data","nameLocation":"113859:4:36","nodeType":"VariableDeclaration","scope":41215,"src":"113852:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":41209,"name":"bytes4","nodeType":"ElementaryTypeName","src":"113852:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":41212,"mutability":"mutable","name":"revertData","nameLocation":"113880:10:36","nodeType":"VariableDeclaration","scope":41215,"src":"113865:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41211,"name":"bytes","nodeType":"ElementaryTypeName","src":"113865:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"113835:56:36"},"returnParameters":{"id":41214,"nodeType":"ParameterList","parameters":[],"src":"113900:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41227,"nodeType":"FunctionDefinition","src":"114143:107:36","nodes":[],"documentation":{"id":41216,"nodeType":"StructuredDocumentation","src":"113907:231:36","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"596c8f04","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"114152:14:36","parameters":{"id":41225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41218,"mutability":"mutable","name":"callee","nameLocation":"114175:6:36","nodeType":"VariableDeclaration","scope":41227,"src":"114167:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41217,"name":"address","nodeType":"ElementaryTypeName","src":"114167:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41220,"mutability":"mutable","name":"msgValue","nameLocation":"114191:8:36","nodeType":"VariableDeclaration","scope":41227,"src":"114183:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41219,"name":"uint256","nodeType":"ElementaryTypeName","src":"114183:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41222,"mutability":"mutable","name":"data","nameLocation":"114208:4:36","nodeType":"VariableDeclaration","scope":41227,"src":"114201:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":41221,"name":"bytes4","nodeType":"ElementaryTypeName","src":"114201:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":41224,"mutability":"mutable","name":"revertData","nameLocation":"114229:10:36","nodeType":"VariableDeclaration","scope":41227,"src":"114214:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41223,"name":"bytes","nodeType":"ElementaryTypeName","src":"114214:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"114166:74:36"},"returnParameters":{"id":41226,"nodeType":"ParameterList","parameters":[],"src":"114249:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41237,"nodeType":"FunctionDefinition","src":"114510:91:36","nodes":[],"documentation":{"id":41228,"nodeType":"StructuredDocumentation","src":"114256:249:36","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"114519:8:36","parameters":{"id":41235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41230,"mutability":"mutable","name":"callee","nameLocation":"114536:6:36","nodeType":"VariableDeclaration","scope":41237,"src":"114528:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41229,"name":"address","nodeType":"ElementaryTypeName","src":"114528:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41232,"mutability":"mutable","name":"data","nameLocation":"114559:4:36","nodeType":"VariableDeclaration","scope":41237,"src":"114544:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41231,"name":"bytes","nodeType":"ElementaryTypeName","src":"114544:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41234,"mutability":"mutable","name":"returnData","nameLocation":"114580:10:36","nodeType":"VariableDeclaration","scope":41237,"src":"114565:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41233,"name":"bytes","nodeType":"ElementaryTypeName","src":"114565:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"114527:64:36"},"returnParameters":{"id":41236,"nodeType":"ParameterList","parameters":[],"src":"114600:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41249,"nodeType":"FunctionDefinition","src":"114776:109:36","nodes":[],"documentation":{"id":41238,"nodeType":"StructuredDocumentation","src":"114607:164:36","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"114785:8:36","parameters":{"id":41247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41240,"mutability":"mutable","name":"callee","nameLocation":"114802:6:36","nodeType":"VariableDeclaration","scope":41249,"src":"114794:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41239,"name":"address","nodeType":"ElementaryTypeName","src":"114794:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41242,"mutability":"mutable","name":"msgValue","nameLocation":"114818:8:36","nodeType":"VariableDeclaration","scope":41249,"src":"114810:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41241,"name":"uint256","nodeType":"ElementaryTypeName","src":"114810:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41244,"mutability":"mutable","name":"data","nameLocation":"114843:4:36","nodeType":"VariableDeclaration","scope":41249,"src":"114828:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41243,"name":"bytes","nodeType":"ElementaryTypeName","src":"114828:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41246,"mutability":"mutable","name":"returnData","nameLocation":"114864:10:36","nodeType":"VariableDeclaration","scope":41249,"src":"114849:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41245,"name":"bytes","nodeType":"ElementaryTypeName","src":"114849:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"114793:82:36"},"returnParameters":{"id":41248,"nodeType":"ParameterList","parameters":[],"src":"114884:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41259,"nodeType":"FunctionDefinition","src":"115287:83:36","nodes":[],"documentation":{"id":41250,"nodeType":"StructuredDocumentation","src":"114891:391:36","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"08e0c537","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"115296:8:36","parameters":{"id":41257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41252,"mutability":"mutable","name":"callee","nameLocation":"115313:6:36","nodeType":"VariableDeclaration","scope":41259,"src":"115305:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41251,"name":"address","nodeType":"ElementaryTypeName","src":"115305:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41254,"mutability":"mutable","name":"data","nameLocation":"115328:4:36","nodeType":"VariableDeclaration","scope":41259,"src":"115321:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":41253,"name":"bytes4","nodeType":"ElementaryTypeName","src":"115321:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":41256,"mutability":"mutable","name":"returnData","nameLocation":"115349:10:36","nodeType":"VariableDeclaration","scope":41259,"src":"115334:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41255,"name":"bytes","nodeType":"ElementaryTypeName","src":"115334:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"115304:56:36"},"returnParameters":{"id":41258,"nodeType":"ParameterList","parameters":[],"src":"115369:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41271,"nodeType":"FunctionDefinition","src":"115687:101:36","nodes":[],"documentation":{"id":41260,"nodeType":"StructuredDocumentation","src":"115376:306:36","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"e7b36a3d","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"115696:8:36","parameters":{"id":41269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41262,"mutability":"mutable","name":"callee","nameLocation":"115713:6:36","nodeType":"VariableDeclaration","scope":41271,"src":"115705:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41261,"name":"address","nodeType":"ElementaryTypeName","src":"115705:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41264,"mutability":"mutable","name":"msgValue","nameLocation":"115729:8:36","nodeType":"VariableDeclaration","scope":41271,"src":"115721:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41263,"name":"uint256","nodeType":"ElementaryTypeName","src":"115721:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41266,"mutability":"mutable","name":"data","nameLocation":"115746:4:36","nodeType":"VariableDeclaration","scope":41271,"src":"115739:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":41265,"name":"bytes4","nodeType":"ElementaryTypeName","src":"115739:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":41268,"mutability":"mutable","name":"returnData","nameLocation":"115767:10:36","nodeType":"VariableDeclaration","scope":41271,"src":"115752:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41267,"name":"bytes","nodeType":"ElementaryTypeName","src":"115752:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"115704:74:36"},"returnParameters":{"id":41270,"nodeType":"ParameterList","parameters":[],"src":"115787:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41282,"nodeType":"FunctionDefinition","src":"115878:94:36","nodes":[],"documentation":{"id":41272,"nodeType":"StructuredDocumentation","src":"115794:79:36","text":"Mocks multiple calls to an address, returning specified data for each call."},"functionSelector":"5c5c3de9","implemented":false,"kind":"function","modifiers":[],"name":"mockCalls","nameLocation":"115887:9:36","parameters":{"id":41280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41274,"mutability":"mutable","name":"callee","nameLocation":"115905:6:36","nodeType":"VariableDeclaration","scope":41282,"src":"115897:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41273,"name":"address","nodeType":"ElementaryTypeName","src":"115897:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41276,"mutability":"mutable","name":"data","nameLocation":"115928:4:36","nodeType":"VariableDeclaration","scope":41282,"src":"115913:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41275,"name":"bytes","nodeType":"ElementaryTypeName","src":"115913:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41279,"mutability":"mutable","name":"returnData","nameLocation":"115951:10:36","nodeType":"VariableDeclaration","scope":41282,"src":"115934:27:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":41277,"name":"bytes","nodeType":"ElementaryTypeName","src":"115934:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":41278,"nodeType":"ArrayTypeName","src":"115934:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"115896:66:36"},"returnParameters":{"id":41281,"nodeType":"ParameterList","parameters":[],"src":"115971:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41295,"nodeType":"FunctionDefinition","src":"116090:112:36","nodes":[],"documentation":{"id":41283,"nodeType":"StructuredDocumentation","src":"115978:107:36","text":"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call."},"functionSelector":"08bcbae1","implemented":false,"kind":"function","modifiers":[],"name":"mockCalls","nameLocation":"116099:9:36","parameters":{"id":41293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41285,"mutability":"mutable","name":"callee","nameLocation":"116117:6:36","nodeType":"VariableDeclaration","scope":41295,"src":"116109:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41284,"name":"address","nodeType":"ElementaryTypeName","src":"116109:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41287,"mutability":"mutable","name":"msgValue","nameLocation":"116133:8:36","nodeType":"VariableDeclaration","scope":41295,"src":"116125:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41286,"name":"uint256","nodeType":"ElementaryTypeName","src":"116125:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41289,"mutability":"mutable","name":"data","nameLocation":"116158:4:36","nodeType":"VariableDeclaration","scope":41295,"src":"116143:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41288,"name":"bytes","nodeType":"ElementaryTypeName","src":"116143:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41292,"mutability":"mutable","name":"returnData","nameLocation":"116181:10:36","nodeType":"VariableDeclaration","scope":41295,"src":"116164:27:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":41290,"name":"bytes","nodeType":"ElementaryTypeName","src":"116164:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":41291,"nodeType":"ArrayTypeName","src":"116164:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"116108:84:36"},"returnParameters":{"id":41294,"nodeType":"ParameterList","parameters":[],"src":"116201:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41305,"nodeType":"FunctionDefinition","src":"116708:84:36","nodes":[],"documentation":{"id":41296,"nodeType":"StructuredDocumentation","src":"116208:495:36","text":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls\n `target` with the same calldata. This functionality is similar to a delegate call made to\n `target` contract from `callee`.\n Can be used to substitute a call to a function with another implementation that captures\n the primary logic of the original function but is easier to reason about.\n If calldata is not a strict match then partial match by selector is attempted."},"functionSelector":"adf84d21","implemented":false,"kind":"function","modifiers":[],"name":"mockFunction","nameLocation":"116717:12:36","parameters":{"id":41303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41298,"mutability":"mutable","name":"callee","nameLocation":"116738:6:36","nodeType":"VariableDeclaration","scope":41305,"src":"116730:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41297,"name":"address","nodeType":"ElementaryTypeName","src":"116730:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41300,"mutability":"mutable","name":"target","nameLocation":"116754:6:36","nodeType":"VariableDeclaration","scope":41305,"src":"116746:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41299,"name":"address","nodeType":"ElementaryTypeName","src":"116746:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41302,"mutability":"mutable","name":"data","nameLocation":"116777:4:36","nodeType":"VariableDeclaration","scope":41305,"src":"116762:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41301,"name":"bytes","nodeType":"ElementaryTypeName","src":"116762:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"116729:53:36"},"returnParameters":{"id":41304,"nodeType":"ParameterList","parameters":[],"src":"116791:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41309,"nodeType":"FunctionDefinition","src":"116890:33:36","nodes":[],"documentation":{"id":41306,"nodeType":"StructuredDocumentation","src":"116798:87:36","text":"Utility cheatcode to remove any EIP-2930 access list set by `accessList` cheatcode."},"functionSelector":"238ad778","implemented":false,"kind":"function","modifiers":[],"name":"noAccessList","nameLocation":"116899:12:36","parameters":{"id":41307,"nodeType":"ParameterList","parameters":[],"src":"116911:2:36"},"returnParameters":{"id":41308,"nodeType":"ParameterList","parameters":[],"src":"116922:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41315,"nodeType":"FunctionDefinition","src":"116998:43:36","nodes":[],"documentation":{"id":41310,"nodeType":"StructuredDocumentation","src":"116929:64:36","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"117007:5:36","parameters":{"id":41313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41312,"mutability":"mutable","name":"msgSender","nameLocation":"117021:9:36","nodeType":"VariableDeclaration","scope":41315,"src":"117013:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41311,"name":"address","nodeType":"ElementaryTypeName","src":"117013:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"117012:19:36"},"returnParameters":{"id":41314,"nodeType":"ParameterList","parameters":[],"src":"117040:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41323,"nodeType":"FunctionDefinition","src":"117160:61:36","nodes":[],"documentation":{"id":41316,"nodeType":"StructuredDocumentation","src":"117047:108:36","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"117169:5:36","parameters":{"id":41321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41318,"mutability":"mutable","name":"msgSender","nameLocation":"117183:9:36","nodeType":"VariableDeclaration","scope":41323,"src":"117175:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41317,"name":"address","nodeType":"ElementaryTypeName","src":"117175:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41320,"mutability":"mutable","name":"txOrigin","nameLocation":"117202:8:36","nodeType":"VariableDeclaration","scope":41323,"src":"117194:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41319,"name":"address","nodeType":"ElementaryTypeName","src":"117194:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"117174:37:36"},"returnParameters":{"id":41322,"nodeType":"ParameterList","parameters":[],"src":"117220:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41331,"nodeType":"FunctionDefinition","src":"117305:62:36","nodes":[],"documentation":{"id":41324,"nodeType":"StructuredDocumentation","src":"117227:73:36","text":"Sets the *next* delegate call's `msg.sender` to be the input address."},"functionSelector":"a7f8bf5c","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"117314:5:36","parameters":{"id":41329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41326,"mutability":"mutable","name":"msgSender","nameLocation":"117328:9:36","nodeType":"VariableDeclaration","scope":41331,"src":"117320:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41325,"name":"address","nodeType":"ElementaryTypeName","src":"117320:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41328,"mutability":"mutable","name":"delegateCall","nameLocation":"117344:12:36","nodeType":"VariableDeclaration","scope":41331,"src":"117339:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41327,"name":"bool","nodeType":"ElementaryTypeName","src":"117339:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"117319:38:36"},"returnParameters":{"id":41330,"nodeType":"ParameterList","parameters":[],"src":"117366:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41341,"nodeType":"FunctionDefinition","src":"117495:80:36","nodes":[],"documentation":{"id":41332,"nodeType":"StructuredDocumentation","src":"117373:117:36","text":"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"7d73d042","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"117504:5:36","parameters":{"id":41339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41334,"mutability":"mutable","name":"msgSender","nameLocation":"117518:9:36","nodeType":"VariableDeclaration","scope":41341,"src":"117510:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41333,"name":"address","nodeType":"ElementaryTypeName","src":"117510:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41336,"mutability":"mutable","name":"txOrigin","nameLocation":"117537:8:36","nodeType":"VariableDeclaration","scope":41341,"src":"117529:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41335,"name":"address","nodeType":"ElementaryTypeName","src":"117529:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41338,"mutability":"mutable","name":"delegateCall","nameLocation":"117552:12:36","nodeType":"VariableDeclaration","scope":41341,"src":"117547:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41337,"name":"bool","nodeType":"ElementaryTypeName","src":"117547:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"117509:56:36"},"returnParameters":{"id":41340,"nodeType":"ParameterList","parameters":[],"src":"117574:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41347,"nodeType":"FunctionDefinition","src":"117752:52:36","nodes":[],"documentation":{"id":41342,"nodeType":"StructuredDocumentation","src":"117581:166:36","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"117761:10:36","parameters":{"id":41345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41344,"mutability":"mutable","name":"newPrevrandao","nameLocation":"117780:13:36","nodeType":"VariableDeclaration","scope":41347,"src":"117772:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":41343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"117772:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"117771:23:36"},"returnParameters":{"id":41346,"nodeType":"ParameterList","parameters":[],"src":"117803:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41353,"nodeType":"FunctionDefinition","src":"117981:52:36","nodes":[],"documentation":{"id":41348,"nodeType":"StructuredDocumentation","src":"117810:166:36","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"117990:10:36","parameters":{"id":41351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41350,"mutability":"mutable","name":"newPrevrandao","nameLocation":"118009:13:36","nodeType":"VariableDeclaration","scope":41353,"src":"118001:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41349,"name":"uint256","nodeType":"ElementaryTypeName","src":"118001:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"118000:23:36"},"returnParameters":{"id":41352,"nodeType":"ParameterList","parameters":[],"src":"118032:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41364,"nodeType":"FunctionDefinition","src":"118161:101:36","nodes":[],"documentation":{"id":41354,"nodeType":"StructuredDocumentation","src":"118039:117:36","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"118170:11:36","parameters":{"id":41355,"nodeType":"ParameterList","parameters":[],"src":"118181:2:36"},"returnParameters":{"id":41363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41358,"mutability":"mutable","name":"callerMode","nameLocation":"118213:10:36","nodeType":"VariableDeclaration","scope":41364,"src":"118202:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$36751","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":41357,"nodeType":"UserDefinedTypeName","pathNode":{"id":41356,"name":"CallerMode","nameLocations":["118202:10:36"],"nodeType":"IdentifierPath","referencedDeclaration":36751,"src":"118202:10:36"},"referencedDeclaration":36751,"src":"118202:10:36","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$36751","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":41360,"mutability":"mutable","name":"msgSender","nameLocation":"118233:9:36","nodeType":"VariableDeclaration","scope":41364,"src":"118225:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41359,"name":"address","nodeType":"ElementaryTypeName","src":"118225:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41362,"mutability":"mutable","name":"txOrigin","nameLocation":"118252:8:36","nodeType":"VariableDeclaration","scope":41364,"src":"118244:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41361,"name":"address","nodeType":"ElementaryTypeName","src":"118244:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"118201:60:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41370,"nodeType":"FunctionDefinition","src":"118350:46:36","nodes":[],"documentation":{"id":41365,"nodeType":"StructuredDocumentation","src":"118268:77:36","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"118359:10:36","parameters":{"id":41368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41367,"mutability":"mutable","name":"account","nameLocation":"118378:7:36","nodeType":"VariableDeclaration","scope":41370,"src":"118370:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41366,"name":"address","nodeType":"ElementaryTypeName","src":"118370:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"118369:17:36"},"returnParameters":{"id":41369,"nodeType":"ParameterList","parameters":[],"src":"118395:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41378,"nodeType":"FunctionDefinition","src":"118744:75:36","nodes":[],"documentation":{"id":41371,"nodeType":"StructuredDocumentation","src":"118402:337:36","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`."},"functionSelector":"c2527405","implemented":false,"kind":"function","modifiers":[],"name":"revertToState","nameLocation":"118753:13:36","parameters":{"id":41374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41373,"mutability":"mutable","name":"snapshotId","nameLocation":"118775:10:36","nodeType":"VariableDeclaration","scope":41378,"src":"118767:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41372,"name":"uint256","nodeType":"ElementaryTypeName","src":"118767:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"118766:20:36"},"returnParameters":{"id":41377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41376,"mutability":"mutable","name":"success","nameLocation":"118810:7:36","nodeType":"VariableDeclaration","scope":41378,"src":"118805:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41375,"name":"bool","nodeType":"ElementaryTypeName","src":"118805:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"118804:14:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41386,"nodeType":"FunctionDefinition","src":"119102:84:36","nodes":[],"documentation":{"id":41379,"nodeType":"StructuredDocumentation","src":"118825:272:36","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"3a1985dc","implemented":false,"kind":"function","modifiers":[],"name":"revertToStateAndDelete","nameLocation":"119111:22:36","parameters":{"id":41382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41381,"mutability":"mutable","name":"snapshotId","nameLocation":"119142:10:36","nodeType":"VariableDeclaration","scope":41386,"src":"119134:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41380,"name":"uint256","nodeType":"ElementaryTypeName","src":"119134:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"119133:20:36"},"returnParameters":{"id":41385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41384,"mutability":"mutable","name":"success","nameLocation":"119177:7:36","nodeType":"VariableDeclaration","scope":41386,"src":"119172:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41383,"name":"bool","nodeType":"ElementaryTypeName","src":"119172:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"119171:14:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41392,"nodeType":"FunctionDefinition","src":"119283:52:36","nodes":[],"documentation":{"id":41387,"nodeType":"StructuredDocumentation","src":"119192:86:36","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"119292:16:36","parameters":{"id":41390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41389,"mutability":"mutable","name":"account","nameLocation":"119317:7:36","nodeType":"VariableDeclaration","scope":41392,"src":"119309:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41388,"name":"address","nodeType":"ElementaryTypeName","src":"119309:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"119308:17:36"},"returnParameters":{"id":41391,"nodeType":"ParameterList","parameters":[],"src":"119334:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41399,"nodeType":"FunctionDefinition","src":"119382:64:36","nodes":[],"documentation":{"id":41393,"nodeType":"StructuredDocumentation","src":"119341:36:36","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"119391:16:36","parameters":{"id":41397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41396,"mutability":"mutable","name":"accounts","nameLocation":"119427:8:36","nodeType":"VariableDeclaration","scope":41399,"src":"119408:27:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":41394,"name":"address","nodeType":"ElementaryTypeName","src":"119408:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":41395,"nodeType":"ArrayTypeName","src":"119408:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"119407:29:36"},"returnParameters":{"id":41398,"nodeType":"ParameterList","parameters":[],"src":"119445:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41405,"nodeType":"FunctionDefinition","src":"119481:42:36","nodes":[],"documentation":{"id":41400,"nodeType":"StructuredDocumentation","src":"119452:24:36","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"119490:4:36","parameters":{"id":41403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41402,"mutability":"mutable","name":"newHeight","nameLocation":"119503:9:36","nodeType":"VariableDeclaration","scope":41405,"src":"119495:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41401,"name":"uint256","nodeType":"ElementaryTypeName","src":"119495:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"119494:19:36"},"returnParameters":{"id":41404,"nodeType":"ParameterList","parameters":[],"src":"119522:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41411,"nodeType":"FunctionDefinition","src":"119662:48:36","nodes":[],"documentation":{"id":41406,"nodeType":"StructuredDocumentation","src":"119529:128:36","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"119671:8:36","parameters":{"id":41409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41408,"mutability":"mutable","name":"blockNumber","nameLocation":"119688:11:36","nodeType":"VariableDeclaration","scope":41411,"src":"119680:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41407,"name":"uint256","nodeType":"ElementaryTypeName","src":"119680:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"119679:21:36"},"returnParameters":{"id":41410,"nodeType":"ParameterList","parameters":[],"src":"119709:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41417,"nodeType":"FunctionDefinition","src":"119925:43:36","nodes":[],"documentation":{"id":41412,"nodeType":"StructuredDocumentation","src":"119716:204:36","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"119934:8:36","parameters":{"id":41415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41414,"mutability":"mutable","name":"txHash","nameLocation":"119951:6:36","nodeType":"VariableDeclaration","scope":41417,"src":"119943:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":41413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"119943:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"119942:16:36"},"returnParameters":{"id":41416,"nodeType":"ParameterList","parameters":[],"src":"119967:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41425,"nodeType":"FunctionDefinition","src":"120028:64:36","nodes":[],"documentation":{"id":41418,"nodeType":"StructuredDocumentation","src":"119974:49:36","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"120037:8:36","parameters":{"id":41423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41420,"mutability":"mutable","name":"forkId","nameLocation":"120054:6:36","nodeType":"VariableDeclaration","scope":41425,"src":"120046:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41419,"name":"uint256","nodeType":"ElementaryTypeName","src":"120046:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41422,"mutability":"mutable","name":"blockNumber","nameLocation":"120070:11:36","nodeType":"VariableDeclaration","scope":41425,"src":"120062:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41421,"name":"uint256","nodeType":"ElementaryTypeName","src":"120062:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"120045:37:36"},"returnParameters":{"id":41424,"nodeType":"ParameterList","parameters":[],"src":"120091:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41433,"nodeType":"FunctionDefinition","src":"120228:59:36","nodes":[],"documentation":{"id":41426,"nodeType":"StructuredDocumentation","src":"120098:125:36","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"120237:8:36","parameters":{"id":41431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41428,"mutability":"mutable","name":"forkId","nameLocation":"120254:6:36","nodeType":"VariableDeclaration","scope":41433,"src":"120246:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41427,"name":"uint256","nodeType":"ElementaryTypeName","src":"120246:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41430,"mutability":"mutable","name":"txHash","nameLocation":"120270:6:36","nodeType":"VariableDeclaration","scope":41433,"src":"120262:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":41429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"120262:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"120245:32:36"},"returnParameters":{"id":41432,"nodeType":"ParameterList","parameters":[],"src":"120286:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41439,"nodeType":"FunctionDefinition","src":"120400:45:36","nodes":[],"documentation":{"id":41434,"nodeType":"StructuredDocumentation","src":"120293:102:36","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"120409:10:36","parameters":{"id":41437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41436,"mutability":"mutable","name":"forkId","nameLocation":"120428:6:36","nodeType":"VariableDeclaration","scope":41439,"src":"120420:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41435,"name":"uint256","nodeType":"ElementaryTypeName","src":"120420:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"120419:16:36"},"returnParameters":{"id":41438,"nodeType":"ParameterList","parameters":[],"src":"120444:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41447,"nodeType":"FunctionDefinition","src":"120595:71:36","nodes":[],"documentation":{"id":41440,"nodeType":"StructuredDocumentation","src":"120451:139:36","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"120604:12:36","parameters":{"id":41445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41442,"mutability":"mutable","name":"blockNumber","nameLocation":"120625:11:36","nodeType":"VariableDeclaration","scope":41447,"src":"120617:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41441,"name":"uint256","nodeType":"ElementaryTypeName","src":"120617:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41444,"mutability":"mutable","name":"blockHash","nameLocation":"120646:9:36","nodeType":"VariableDeclaration","scope":41447,"src":"120638:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":41443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"120638:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"120616:40:36"},"returnParameters":{"id":41446,"nodeType":"ParameterList","parameters":[],"src":"120665:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41455,"nodeType":"FunctionDefinition","src":"120764:61:36","nodes":[],"documentation":{"id":41448,"nodeType":"StructuredDocumentation","src":"120672:87:36","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"120773:8:36","parameters":{"id":41453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41450,"mutability":"mutable","name":"account","nameLocation":"120790:7:36","nodeType":"VariableDeclaration","scope":41455,"src":"120782:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41449,"name":"address","nodeType":"ElementaryTypeName","src":"120782:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41452,"mutability":"mutable","name":"newNonce","nameLocation":"120806:8:36","nodeType":"VariableDeclaration","scope":41455,"src":"120799:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41451,"name":"uint64","nodeType":"ElementaryTypeName","src":"120799:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"120781:34:36"},"returnParameters":{"id":41454,"nodeType":"ParameterList","parameters":[],"src":"120824:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41463,"nodeType":"FunctionDefinition","src":"120891:67:36","nodes":[],"documentation":{"id":41456,"nodeType":"StructuredDocumentation","src":"120831:55:36","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"120900:14:36","parameters":{"id":41461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41458,"mutability":"mutable","name":"account","nameLocation":"120923:7:36","nodeType":"VariableDeclaration","scope":41463,"src":"120915:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41457,"name":"address","nodeType":"ElementaryTypeName","src":"120915:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41460,"mutability":"mutable","name":"newNonce","nameLocation":"120939:8:36","nodeType":"VariableDeclaration","scope":41463,"src":"120932:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41459,"name":"uint64","nodeType":"ElementaryTypeName","src":"120932:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"120914:34:36"},"returnParameters":{"id":41462,"nodeType":"ParameterList","parameters":[],"src":"120957:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41471,"nodeType":"FunctionDefinition","src":"121057:86:36","nodes":[],"documentation":{"id":41464,"nodeType":"StructuredDocumentation","src":"120964:88:36","text":"Snapshot capture the gas usage of the last call by name from the callee perspective."},"functionSelector":"dd9fca12","implemented":false,"kind":"function","modifiers":[],"name":"snapshotGasLastCall","nameLocation":"121066:19:36","parameters":{"id":41467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41466,"mutability":"mutable","name":"name","nameLocation":"121102:4:36","nodeType":"VariableDeclaration","scope":41471,"src":"121086:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41465,"name":"string","nodeType":"ElementaryTypeName","src":"121086:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"121085:22:36"},"returnParameters":{"id":41470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41469,"mutability":"mutable","name":"gasUsed","nameLocation":"121134:7:36","nodeType":"VariableDeclaration","scope":41471,"src":"121126:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41468,"name":"uint256","nodeType":"ElementaryTypeName","src":"121126:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"121125:17:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41481,"nodeType":"FunctionDefinition","src":"121253:109:36","nodes":[],"documentation":{"id":41472,"nodeType":"StructuredDocumentation","src":"121149:99:36","text":"Snapshot capture the gas usage of the last call by name in a group from the callee perspective."},"functionSelector":"200c6772","implemented":false,"kind":"function","modifiers":[],"name":"snapshotGasLastCall","nameLocation":"121262:19:36","parameters":{"id":41477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41474,"mutability":"mutable","name":"group","nameLocation":"121298:5:36","nodeType":"VariableDeclaration","scope":41481,"src":"121282:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41473,"name":"string","nodeType":"ElementaryTypeName","src":"121282:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":41476,"mutability":"mutable","name":"name","nameLocation":"121321:4:36","nodeType":"VariableDeclaration","scope":41481,"src":"121305:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41475,"name":"string","nodeType":"ElementaryTypeName","src":"121305:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"121281:45:36"},"returnParameters":{"id":41480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41479,"mutability":"mutable","name":"gasUsed","nameLocation":"121353:7:36","nodeType":"VariableDeclaration","scope":41481,"src":"121345:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41478,"name":"uint256","nodeType":"ElementaryTypeName","src":"121345:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"121344:17:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41487,"nodeType":"FunctionDefinition","src":"121522:63:36","nodes":[],"documentation":{"id":41482,"nodeType":"StructuredDocumentation","src":"121368:149:36","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertToState`."},"functionSelector":"9cd23835","implemented":false,"kind":"function","modifiers":[],"name":"snapshotState","nameLocation":"121531:13:36","parameters":{"id":41483,"nodeType":"ParameterList","parameters":[],"src":"121544:2:36"},"returnParameters":{"id":41486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41485,"mutability":"mutable","name":"snapshotId","nameLocation":"121573:10:36","nodeType":"VariableDeclaration","scope":41487,"src":"121565:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41484,"name":"uint256","nodeType":"ElementaryTypeName","src":"121565:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"121564:20:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41495,"nodeType":"FunctionDefinition","src":"121712:69:36","nodes":[],"documentation":{"id":41488,"nodeType":"StructuredDocumentation","src":"121591:116:36","text":"Snapshot capture an arbitrary numerical value by name.\n The group name is derived from the contract name."},"functionSelector":"51db805a","implemented":false,"kind":"function","modifiers":[],"name":"snapshotValue","nameLocation":"121721:13:36","parameters":{"id":41493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41490,"mutability":"mutable","name":"name","nameLocation":"121751:4:36","nodeType":"VariableDeclaration","scope":41495,"src":"121735:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41489,"name":"string","nodeType":"ElementaryTypeName","src":"121735:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":41492,"mutability":"mutable","name":"value","nameLocation":"121765:5:36","nodeType":"VariableDeclaration","scope":41495,"src":"121757:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41491,"name":"uint256","nodeType":"ElementaryTypeName","src":"121757:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"121734:37:36"},"returnParameters":{"id":41494,"nodeType":"ParameterList","parameters":[],"src":"121780:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41505,"nodeType":"FunctionDefinition","src":"121861:92:36","nodes":[],"documentation":{"id":41496,"nodeType":"StructuredDocumentation","src":"121787:69:36","text":"Snapshot capture an arbitrary numerical value by name in a group."},"functionSelector":"6d2b27d8","implemented":false,"kind":"function","modifiers":[],"name":"snapshotValue","nameLocation":"121870:13:36","parameters":{"id":41503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41498,"mutability":"mutable","name":"group","nameLocation":"121900:5:36","nodeType":"VariableDeclaration","scope":41505,"src":"121884:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41497,"name":"string","nodeType":"ElementaryTypeName","src":"121884:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":41500,"mutability":"mutable","name":"name","nameLocation":"121923:4:36","nodeType":"VariableDeclaration","scope":41505,"src":"121907:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41499,"name":"string","nodeType":"ElementaryTypeName","src":"121907:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":41502,"mutability":"mutable","name":"value","nameLocation":"121937:5:36","nodeType":"VariableDeclaration","scope":41505,"src":"121929:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41501,"name":"uint256","nodeType":"ElementaryTypeName","src":"121929:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"121883:60:36"},"returnParameters":{"id":41504,"nodeType":"ParameterList","parameters":[],"src":"121952:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41511,"nodeType":"FunctionDefinition","src":"122060:48:36","nodes":[],"documentation":{"id":41506,"nodeType":"StructuredDocumentation","src":"121959:96:36","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"122069:10:36","parameters":{"id":41509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41508,"mutability":"mutable","name":"msgSender","nameLocation":"122088:9:36","nodeType":"VariableDeclaration","scope":41511,"src":"122080:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41507,"name":"address","nodeType":"ElementaryTypeName","src":"122080:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"122079:19:36"},"returnParameters":{"id":41510,"nodeType":"ParameterList","parameters":[],"src":"122107:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41519,"nodeType":"FunctionDefinition","src":"122259:66:36","nodes":[],"documentation":{"id":41512,"nodeType":"StructuredDocumentation","src":"122114:140:36","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"122268:10:36","parameters":{"id":41517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41514,"mutability":"mutable","name":"msgSender","nameLocation":"122287:9:36","nodeType":"VariableDeclaration","scope":41519,"src":"122279:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41513,"name":"address","nodeType":"ElementaryTypeName","src":"122279:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41516,"mutability":"mutable","name":"txOrigin","nameLocation":"122306:8:36","nodeType":"VariableDeclaration","scope":41519,"src":"122298:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41515,"name":"address","nodeType":"ElementaryTypeName","src":"122298:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"122278:37:36"},"returnParameters":{"id":41518,"nodeType":"ParameterList","parameters":[],"src":"122324:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41527,"nodeType":"FunctionDefinition","src":"122441:67:36","nodes":[],"documentation":{"id":41520,"nodeType":"StructuredDocumentation","src":"122331:105:36","text":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"1cc0b435","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"122450:10:36","parameters":{"id":41525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41522,"mutability":"mutable","name":"msgSender","nameLocation":"122469:9:36","nodeType":"VariableDeclaration","scope":41527,"src":"122461:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41521,"name":"address","nodeType":"ElementaryTypeName","src":"122461:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41524,"mutability":"mutable","name":"delegateCall","nameLocation":"122485:12:36","nodeType":"VariableDeclaration","scope":41527,"src":"122480:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41523,"name":"bool","nodeType":"ElementaryTypeName","src":"122480:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"122460:38:36"},"returnParameters":{"id":41526,"nodeType":"ParameterList","parameters":[],"src":"122507:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41537,"nodeType":"FunctionDefinition","src":"122668:85:36","nodes":[],"documentation":{"id":41528,"nodeType":"StructuredDocumentation","src":"122514:149:36","text":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"4eb859b5","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"122677:10:36","parameters":{"id":41535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41530,"mutability":"mutable","name":"msgSender","nameLocation":"122696:9:36","nodeType":"VariableDeclaration","scope":41537,"src":"122688:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41529,"name":"address","nodeType":"ElementaryTypeName","src":"122688:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41532,"mutability":"mutable","name":"txOrigin","nameLocation":"122715:8:36","nodeType":"VariableDeclaration","scope":41537,"src":"122707:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41531,"name":"address","nodeType":"ElementaryTypeName","src":"122707:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41534,"mutability":"mutable","name":"delegateCall","nameLocation":"122730:12:36","nodeType":"VariableDeclaration","scope":41537,"src":"122725:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41533,"name":"bool","nodeType":"ElementaryTypeName","src":"122725:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"122687:56:36"},"returnParameters":{"id":41536,"nodeType":"ParameterList","parameters":[],"src":"122752:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41543,"nodeType":"FunctionDefinition","src":"122884:57:36","nodes":[],"documentation":{"id":41538,"nodeType":"StructuredDocumentation","src":"122759:120:36","text":"Start a snapshot capture of the current gas usage by name.\n The group name is derived from the contract name."},"functionSelector":"3cad9d7b","implemented":false,"kind":"function","modifiers":[],"name":"startSnapshotGas","nameLocation":"122893:16:36","parameters":{"id":41541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41540,"mutability":"mutable","name":"name","nameLocation":"122926:4:36","nodeType":"VariableDeclaration","scope":41543,"src":"122910:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41539,"name":"string","nodeType":"ElementaryTypeName","src":"122910:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"122909:22:36"},"returnParameters":{"id":41542,"nodeType":"ParameterList","parameters":[],"src":"122940:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41551,"nodeType":"FunctionDefinition","src":"123025:80:36","nodes":[],"documentation":{"id":41544,"nodeType":"StructuredDocumentation","src":"122947:73:36","text":"Start a snapshot capture of the current gas usage by name in a group."},"functionSelector":"6cd0cc53","implemented":false,"kind":"function","modifiers":[],"name":"startSnapshotGas","nameLocation":"123034:16:36","parameters":{"id":41549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41546,"mutability":"mutable","name":"group","nameLocation":"123067:5:36","nodeType":"VariableDeclaration","scope":41551,"src":"123051:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41545,"name":"string","nodeType":"ElementaryTypeName","src":"123051:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":41548,"mutability":"mutable","name":"name","nameLocation":"123090:4:36","nodeType":"VariableDeclaration","scope":41551,"src":"123074:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41547,"name":"string","nodeType":"ElementaryTypeName","src":"123074:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"123050:45:36"},"returnParameters":{"id":41550,"nodeType":"ParameterList","parameters":[],"src":"123104:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41555,"nodeType":"FunctionDefinition","src":"123180:30:36","nodes":[],"documentation":{"id":41552,"nodeType":"StructuredDocumentation","src":"123111:64:36","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"123189:9:36","parameters":{"id":41553,"nodeType":"ParameterList","parameters":[],"src":"123198:2:36"},"returnParameters":{"id":41554,"nodeType":"ParameterList","parameters":[],"src":"123209:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41561,"nodeType":"FunctionDefinition","src":"123334:62:36","nodes":[],"documentation":{"id":41556,"nodeType":"StructuredDocumentation","src":"123216:113:36","text":"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start."},"functionSelector":"f6402eda","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"123343:15:36","parameters":{"id":41557,"nodeType":"ParameterList","parameters":[],"src":"123358:2:36"},"returnParameters":{"id":41560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41559,"mutability":"mutable","name":"gasUsed","nameLocation":"123387:7:36","nodeType":"VariableDeclaration","scope":41561,"src":"123379:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41558,"name":"uint256","nodeType":"ElementaryTypeName","src":"123379:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"123378:17:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41569,"nodeType":"FunctionDefinition","src":"123568:82:36","nodes":[],"documentation":{"id":41562,"nodeType":"StructuredDocumentation","src":"123402:161:36","text":"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start.\n The group name is derived from the contract name."},"functionSelector":"773b2805","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"123577:15:36","parameters":{"id":41565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41564,"mutability":"mutable","name":"name","nameLocation":"123609:4:36","nodeType":"VariableDeclaration","scope":41569,"src":"123593:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41563,"name":"string","nodeType":"ElementaryTypeName","src":"123593:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"123592:22:36"},"returnParameters":{"id":41568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41567,"mutability":"mutable","name":"gasUsed","nameLocation":"123641:7:36","nodeType":"VariableDeclaration","scope":41569,"src":"123633:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41566,"name":"uint256","nodeType":"ElementaryTypeName","src":"123633:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"123632:17:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41579,"nodeType":"FunctionDefinition","src":"123775:105:36","nodes":[],"documentation":{"id":41570,"nodeType":"StructuredDocumentation","src":"123656:114:36","text":"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start."},"functionSelector":"0c9db707","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"123784:15:36","parameters":{"id":41575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41572,"mutability":"mutable","name":"group","nameLocation":"123816:5:36","nodeType":"VariableDeclaration","scope":41579,"src":"123800:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41571,"name":"string","nodeType":"ElementaryTypeName","src":"123800:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":41574,"mutability":"mutable","name":"name","nameLocation":"123839:4:36","nodeType":"VariableDeclaration","scope":41579,"src":"123823:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":41573,"name":"string","nodeType":"ElementaryTypeName","src":"123823:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"123799:45:36"},"returnParameters":{"id":41578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41577,"mutability":"mutable","name":"gasUsed","nameLocation":"123871:7:36","nodeType":"VariableDeclaration","scope":41579,"src":"123863:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41576,"name":"uint256","nodeType":"ElementaryTypeName","src":"123863:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"123862:17:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41589,"nodeType":"FunctionDefinition","src":"123938:69:36","nodes":[],"documentation":{"id":41580,"nodeType":"StructuredDocumentation","src":"123886:47:36","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"123947:5:36","parameters":{"id":41587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41582,"mutability":"mutable","name":"target","nameLocation":"123961:6:36","nodeType":"VariableDeclaration","scope":41589,"src":"123953:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41581,"name":"address","nodeType":"ElementaryTypeName","src":"123953:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41584,"mutability":"mutable","name":"slot","nameLocation":"123977:4:36","nodeType":"VariableDeclaration","scope":41589,"src":"123969:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":41583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"123969:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":41586,"mutability":"mutable","name":"value","nameLocation":"123991:5:36","nodeType":"VariableDeclaration","scope":41589,"src":"123983:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":41585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"123983:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"123952:45:36"},"returnParameters":{"id":41588,"nodeType":"ParameterList","parameters":[],"src":"124006:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41595,"nodeType":"FunctionDefinition","src":"124110:43:36","nodes":[],"documentation":{"id":41590,"nodeType":"StructuredDocumentation","src":"124013:92:36","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"124119:8:36","parameters":{"id":41593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41592,"mutability":"mutable","name":"txHash","nameLocation":"124136:6:36","nodeType":"VariableDeclaration","scope":41595,"src":"124128:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":41591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"124128:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"124127:16:36"},"returnParameters":{"id":41594,"nodeType":"ParameterList","parameters":[],"src":"124152:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41603,"nodeType":"FunctionDefinition","src":"124255:59:36","nodes":[],"documentation":{"id":41596,"nodeType":"StructuredDocumentation","src":"124159:91:36","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"124264:8:36","parameters":{"id":41601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41598,"mutability":"mutable","name":"forkId","nameLocation":"124281:6:36","nodeType":"VariableDeclaration","scope":41603,"src":"124273:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41597,"name":"uint256","nodeType":"ElementaryTypeName","src":"124273:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41600,"mutability":"mutable","name":"txHash","nameLocation":"124297:6:36","nodeType":"VariableDeclaration","scope":41603,"src":"124289:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":41599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"124289:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"124272:32:36"},"returnParameters":{"id":41602,"nodeType":"ParameterList","parameters":[],"src":"124313:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41609,"nodeType":"FunctionDefinition","src":"124348:50:36","nodes":[],"documentation":{"id":41604,"nodeType":"StructuredDocumentation","src":"124320:23:36","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"124357:10:36","parameters":{"id":41607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41606,"mutability":"mutable","name":"newGasPrice","nameLocation":"124376:11:36","nodeType":"VariableDeclaration","scope":41609,"src":"124368:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41605,"name":"uint256","nodeType":"ElementaryTypeName","src":"124368:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"124367:21:36"},"returnParameters":{"id":41608,"nodeType":"ParameterList","parameters":[],"src":"124397:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41617,"nodeType":"FunctionDefinition","src":"124494:57:36","nodes":[],"documentation":{"id":41610,"nodeType":"StructuredDocumentation","src":"124404:85:36","text":"Utility cheatcode to mark specific storage slot as warm, simulating a prior read."},"functionSelector":"b23184cf","implemented":false,"kind":"function","modifiers":[],"name":"warmSlot","nameLocation":"124503:8:36","parameters":{"id":41615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41612,"mutability":"mutable","name":"target","nameLocation":"124520:6:36","nodeType":"VariableDeclaration","scope":41617,"src":"124512:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41611,"name":"address","nodeType":"ElementaryTypeName","src":"124512:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41614,"mutability":"mutable","name":"slot","nameLocation":"124536:4:36","nodeType":"VariableDeclaration","scope":41617,"src":"124528:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":41613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"124528:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"124511:30:36"},"returnParameters":{"id":41616,"nodeType":"ParameterList","parameters":[],"src":"124550:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41623,"nodeType":"FunctionDefinition","src":"124589:45:36","nodes":[],"documentation":{"id":41618,"nodeType":"StructuredDocumentation","src":"124557:27:36","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"124598:4:36","parameters":{"id":41621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41620,"mutability":"mutable","name":"newTimestamp","nameLocation":"124611:12:36","nodeType":"VariableDeclaration","scope":41623,"src":"124603:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41619,"name":"uint256","nodeType":"ElementaryTypeName","src":"124603:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"124602:22:36"},"returnParameters":{"id":41622,"nodeType":"ParameterList","parameters":[],"src":"124633:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41631,"nodeType":"FunctionDefinition","src":"124759:76:36","nodes":[],"documentation":{"id":41624,"nodeType":"StructuredDocumentation","src":"124640:114:36","text":"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"124768:14:36","parameters":{"id":41627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41626,"mutability":"mutable","name":"snapshotId","nameLocation":"124791:10:36","nodeType":"VariableDeclaration","scope":41631,"src":"124783:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41625,"name":"uint256","nodeType":"ElementaryTypeName","src":"124783:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"124782:20:36"},"returnParameters":{"id":41630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41629,"mutability":"mutable","name":"success","nameLocation":"124826:7:36","nodeType":"VariableDeclaration","scope":41631,"src":"124821:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41628,"name":"bool","nodeType":"ElementaryTypeName","src":"124821:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"124820:14:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41635,"nodeType":"FunctionDefinition","src":"124962:36:36","nodes":[],"documentation":{"id":41632,"nodeType":"StructuredDocumentation","src":"124841:116:36","text":"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"124971:15:36","parameters":{"id":41633,"nodeType":"ParameterList","parameters":[],"src":"124986:2:36"},"returnParameters":{"id":41634,"nodeType":"ParameterList","parameters":[],"src":"124997:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41643,"nodeType":"FunctionDefinition","src":"125129:79:36","nodes":[],"documentation":{"id":41636,"nodeType":"StructuredDocumentation","src":"125004:120:36","text":"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"125138:17:36","parameters":{"id":41639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41638,"mutability":"mutable","name":"snapshotId","nameLocation":"125164:10:36","nodeType":"VariableDeclaration","scope":41643,"src":"125156:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41637,"name":"uint256","nodeType":"ElementaryTypeName","src":"125156:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"125155:20:36"},"returnParameters":{"id":41642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41641,"mutability":"mutable","name":"success","nameLocation":"125199:7:36","nodeType":"VariableDeclaration","scope":41643,"src":"125194:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41640,"name":"bool","nodeType":"ElementaryTypeName","src":"125194:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"125193:14:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41651,"nodeType":"FunctionDefinition","src":"125321:70:36","nodes":[],"documentation":{"id":41644,"nodeType":"StructuredDocumentation","src":"125214:102:36","text":"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"125330:8:36","parameters":{"id":41647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41646,"mutability":"mutable","name":"snapshotId","nameLocation":"125347:10:36","nodeType":"VariableDeclaration","scope":41651,"src":"125339:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41645,"name":"uint256","nodeType":"ElementaryTypeName","src":"125339:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"125338:20:36"},"returnParameters":{"id":41650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41649,"mutability":"mutable","name":"success","nameLocation":"125382:7:36","nodeType":"VariableDeclaration","scope":41651,"src":"125377:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41648,"name":"bool","nodeType":"ElementaryTypeName","src":"125377:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"125376:14:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41657,"nodeType":"FunctionDefinition","src":"125504:58:36","nodes":[],"documentation":{"id":41652,"nodeType":"StructuredDocumentation","src":"125397:102:36","text":"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"125513:8:36","parameters":{"id":41653,"nodeType":"ParameterList","parameters":[],"src":"125521:2:36"},"returnParameters":{"id":41656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41655,"mutability":"mutable","name":"snapshotId","nameLocation":"125550:10:36","nodeType":"VariableDeclaration","scope":41657,"src":"125542:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41654,"name":"uint256","nodeType":"ElementaryTypeName","src":"125542:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"125541:20:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41669,"nodeType":"FunctionDefinition","src":"125714:105:36","nodes":[],"documentation":{"id":41658,"nodeType":"StructuredDocumentation","src":"125602:107:36","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"125723:16:36","parameters":{"id":41667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41660,"mutability":"mutable","name":"callee","nameLocation":"125748:6:36","nodeType":"VariableDeclaration","scope":41669,"src":"125740:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41659,"name":"address","nodeType":"ElementaryTypeName","src":"125740:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41662,"mutability":"mutable","name":"msgValue","nameLocation":"125764:8:36","nodeType":"VariableDeclaration","scope":41669,"src":"125756:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41661,"name":"uint256","nodeType":"ElementaryTypeName","src":"125756:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41664,"mutability":"mutable","name":"minGas","nameLocation":"125781:6:36","nodeType":"VariableDeclaration","scope":41669,"src":"125774:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41663,"name":"uint64","nodeType":"ElementaryTypeName","src":"125774:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":41666,"mutability":"mutable","name":"data","nameLocation":"125804:4:36","nodeType":"VariableDeclaration","scope":41669,"src":"125789:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41665,"name":"bytes","nodeType":"ElementaryTypeName","src":"125789:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"125739:70:36"},"returnParameters":{"id":41668,"nodeType":"ParameterList","parameters":[],"src":"125818:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41683,"nodeType":"FunctionDefinition","src":"125952:127:36","nodes":[],"documentation":{"id":41670,"nodeType":"StructuredDocumentation","src":"125825:122:36","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"125961:16:36","parameters":{"id":41681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41672,"mutability":"mutable","name":"callee","nameLocation":"125986:6:36","nodeType":"VariableDeclaration","scope":41683,"src":"125978:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41671,"name":"address","nodeType":"ElementaryTypeName","src":"125978:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41674,"mutability":"mutable","name":"msgValue","nameLocation":"126002:8:36","nodeType":"VariableDeclaration","scope":41683,"src":"125994:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41673,"name":"uint256","nodeType":"ElementaryTypeName","src":"125994:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41676,"mutability":"mutable","name":"minGas","nameLocation":"126019:6:36","nodeType":"VariableDeclaration","scope":41683,"src":"126012:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41675,"name":"uint64","nodeType":"ElementaryTypeName","src":"126012:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":41678,"mutability":"mutable","name":"data","nameLocation":"126042:4:36","nodeType":"VariableDeclaration","scope":41683,"src":"126027:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41677,"name":"bytes","nodeType":"ElementaryTypeName","src":"126027:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41680,"mutability":"mutable","name":"count","nameLocation":"126055:5:36","nodeType":"VariableDeclaration","scope":41683,"src":"126048:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41679,"name":"uint64","nodeType":"ElementaryTypeName","src":"126048:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"125977:84:36"},"returnParameters":{"id":41682,"nodeType":"ParameterList","parameters":[],"src":"126078:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41691,"nodeType":"FunctionDefinition","src":"126211:66:36","nodes":[],"documentation":{"id":41684,"nodeType":"StructuredDocumentation","src":"126085:121:36","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"126220:10:36","parameters":{"id":41689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41686,"mutability":"mutable","name":"callee","nameLocation":"126239:6:36","nodeType":"VariableDeclaration","scope":41691,"src":"126231:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41685,"name":"address","nodeType":"ElementaryTypeName","src":"126231:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41688,"mutability":"mutable","name":"data","nameLocation":"126262:4:36","nodeType":"VariableDeclaration","scope":41691,"src":"126247:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41687,"name":"bytes","nodeType":"ElementaryTypeName","src":"126247:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"126230:37:36"},"returnParameters":{"id":41690,"nodeType":"ParameterList","parameters":[],"src":"126276:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41701,"nodeType":"FunctionDefinition","src":"126364:80:36","nodes":[],"documentation":{"id":41692,"nodeType":"StructuredDocumentation","src":"126283:76:36","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"126373:10:36","parameters":{"id":41699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41694,"mutability":"mutable","name":"callee","nameLocation":"126392:6:36","nodeType":"VariableDeclaration","scope":41701,"src":"126384:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41693,"name":"address","nodeType":"ElementaryTypeName","src":"126384:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41696,"mutability":"mutable","name":"data","nameLocation":"126415:4:36","nodeType":"VariableDeclaration","scope":41701,"src":"126400:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41695,"name":"bytes","nodeType":"ElementaryTypeName","src":"126400:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41698,"mutability":"mutable","name":"count","nameLocation":"126428:5:36","nodeType":"VariableDeclaration","scope":41701,"src":"126421:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41697,"name":"uint64","nodeType":"ElementaryTypeName","src":"126421:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"126383:51:36"},"returnParameters":{"id":41700,"nodeType":"ParameterList","parameters":[],"src":"126443:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41711,"nodeType":"FunctionDefinition","src":"126532:84:36","nodes":[],"documentation":{"id":41702,"nodeType":"StructuredDocumentation","src":"126450:77:36","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"126541:10:36","parameters":{"id":41709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41704,"mutability":"mutable","name":"callee","nameLocation":"126560:6:36","nodeType":"VariableDeclaration","scope":41711,"src":"126552:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41703,"name":"address","nodeType":"ElementaryTypeName","src":"126552:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41706,"mutability":"mutable","name":"msgValue","nameLocation":"126576:8:36","nodeType":"VariableDeclaration","scope":41711,"src":"126568:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41705,"name":"uint256","nodeType":"ElementaryTypeName","src":"126568:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41708,"mutability":"mutable","name":"data","nameLocation":"126601:4:36","nodeType":"VariableDeclaration","scope":41711,"src":"126586:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41707,"name":"bytes","nodeType":"ElementaryTypeName","src":"126586:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"126551:55:36"},"returnParameters":{"id":41710,"nodeType":"ParameterList","parameters":[],"src":"126615:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41723,"nodeType":"FunctionDefinition","src":"126719:98:36","nodes":[],"documentation":{"id":41712,"nodeType":"StructuredDocumentation","src":"126622:92:36","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"126728:10:36","parameters":{"id":41721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41714,"mutability":"mutable","name":"callee","nameLocation":"126747:6:36","nodeType":"VariableDeclaration","scope":41723,"src":"126739:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41713,"name":"address","nodeType":"ElementaryTypeName","src":"126739:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41716,"mutability":"mutable","name":"msgValue","nameLocation":"126763:8:36","nodeType":"VariableDeclaration","scope":41723,"src":"126755:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41715,"name":"uint256","nodeType":"ElementaryTypeName","src":"126755:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41718,"mutability":"mutable","name":"data","nameLocation":"126788:4:36","nodeType":"VariableDeclaration","scope":41723,"src":"126773:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41717,"name":"bytes","nodeType":"ElementaryTypeName","src":"126773:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41720,"mutability":"mutable","name":"count","nameLocation":"126801:5:36","nodeType":"VariableDeclaration","scope":41723,"src":"126794:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41719,"name":"uint64","nodeType":"ElementaryTypeName","src":"126794:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"126738:69:36"},"returnParameters":{"id":41722,"nodeType":"ParameterList","parameters":[],"src":"126816:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41735,"nodeType":"FunctionDefinition","src":"126910:96:36","nodes":[],"documentation":{"id":41724,"nodeType":"StructuredDocumentation","src":"126823:82:36","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"126919:10:36","parameters":{"id":41733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41726,"mutability":"mutable","name":"callee","nameLocation":"126938:6:36","nodeType":"VariableDeclaration","scope":41735,"src":"126930:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41725,"name":"address","nodeType":"ElementaryTypeName","src":"126930:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41728,"mutability":"mutable","name":"msgValue","nameLocation":"126954:8:36","nodeType":"VariableDeclaration","scope":41735,"src":"126946:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41727,"name":"uint256","nodeType":"ElementaryTypeName","src":"126946:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41730,"mutability":"mutable","name":"gas","nameLocation":"126971:3:36","nodeType":"VariableDeclaration","scope":41735,"src":"126964:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41729,"name":"uint64","nodeType":"ElementaryTypeName","src":"126964:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":41732,"mutability":"mutable","name":"data","nameLocation":"126991:4:36","nodeType":"VariableDeclaration","scope":41735,"src":"126976:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41731,"name":"bytes","nodeType":"ElementaryTypeName","src":"126976:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"126929:67:36"},"returnParameters":{"id":41734,"nodeType":"ParameterList","parameters":[],"src":"127005:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41749,"nodeType":"FunctionDefinition","src":"127115:110:36","nodes":[],"documentation":{"id":41736,"nodeType":"StructuredDocumentation","src":"127012:98:36","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"127124:10:36","parameters":{"id":41747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41738,"mutability":"mutable","name":"callee","nameLocation":"127143:6:36","nodeType":"VariableDeclaration","scope":41749,"src":"127135:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41737,"name":"address","nodeType":"ElementaryTypeName","src":"127135:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41740,"mutability":"mutable","name":"msgValue","nameLocation":"127159:8:36","nodeType":"VariableDeclaration","scope":41749,"src":"127151:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41739,"name":"uint256","nodeType":"ElementaryTypeName","src":"127151:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41742,"mutability":"mutable","name":"gas","nameLocation":"127176:3:36","nodeType":"VariableDeclaration","scope":41749,"src":"127169:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41741,"name":"uint64","nodeType":"ElementaryTypeName","src":"127169:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":41744,"mutability":"mutable","name":"data","nameLocation":"127196:4:36","nodeType":"VariableDeclaration","scope":41749,"src":"127181:19:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41743,"name":"bytes","nodeType":"ElementaryTypeName","src":"127181:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41746,"mutability":"mutable","name":"count","nameLocation":"127209:5:36","nodeType":"VariableDeclaration","scope":41749,"src":"127202:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41745,"name":"uint64","nodeType":"ElementaryTypeName","src":"127202:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"127134:81:36"},"returnParameters":{"id":41748,"nodeType":"ParameterList","parameters":[],"src":"127224:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41757,"nodeType":"FunctionDefinition","src":"127337:74:36","nodes":[],"documentation":{"id":41750,"nodeType":"StructuredDocumentation","src":"127231:101:36","text":"Expects the deployment of the specified bytecode by the specified address using the CREATE opcode"},"functionSelector":"73cdce36","implemented":false,"kind":"function","modifiers":[],"name":"expectCreate","nameLocation":"127346:12:36","parameters":{"id":41755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41752,"mutability":"mutable","name":"bytecode","nameLocation":"127374:8:36","nodeType":"VariableDeclaration","scope":41757,"src":"127359:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41751,"name":"bytes","nodeType":"ElementaryTypeName","src":"127359:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41754,"mutability":"mutable","name":"deployer","nameLocation":"127392:8:36","nodeType":"VariableDeclaration","scope":41757,"src":"127384:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41753,"name":"address","nodeType":"ElementaryTypeName","src":"127384:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"127358:43:36"},"returnParameters":{"id":41756,"nodeType":"ParameterList","parameters":[],"src":"127410:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41765,"nodeType":"FunctionDefinition","src":"127524:75:36","nodes":[],"documentation":{"id":41758,"nodeType":"StructuredDocumentation","src":"127417:102:36","text":"Expects the deployment of the specified bytecode by the specified address using the CREATE2 opcode"},"functionSelector":"ea54a472","implemented":false,"kind":"function","modifiers":[],"name":"expectCreate2","nameLocation":"127533:13:36","parameters":{"id":41763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41760,"mutability":"mutable","name":"bytecode","nameLocation":"127562:8:36","nodeType":"VariableDeclaration","scope":41765,"src":"127547:23:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41759,"name":"bytes","nodeType":"ElementaryTypeName","src":"127547:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41762,"mutability":"mutable","name":"deployer","nameLocation":"127580:8:36","nodeType":"VariableDeclaration","scope":41765,"src":"127572:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41761,"name":"address","nodeType":"ElementaryTypeName","src":"127572:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"127546:43:36"},"returnParameters":{"id":41764,"nodeType":"ParameterList","parameters":[],"src":"127598:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41779,"nodeType":"FunctionDefinition","src":"127958:134:36","nodes":[],"documentation":{"id":41766,"nodeType":"StructuredDocumentation","src":"127605:348:36","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"127967:19:36","parameters":{"id":41777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41768,"mutability":"mutable","name":"checkTopic0","nameLocation":"127992:11:36","nodeType":"VariableDeclaration","scope":41779,"src":"127987:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41767,"name":"bool","nodeType":"ElementaryTypeName","src":"127987:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41770,"mutability":"mutable","name":"checkTopic1","nameLocation":"128010:11:36","nodeType":"VariableDeclaration","scope":41779,"src":"128005:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41769,"name":"bool","nodeType":"ElementaryTypeName","src":"128005:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41772,"mutability":"mutable","name":"checkTopic2","nameLocation":"128028:11:36","nodeType":"VariableDeclaration","scope":41779,"src":"128023:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41771,"name":"bool","nodeType":"ElementaryTypeName","src":"128023:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41774,"mutability":"mutable","name":"checkTopic3","nameLocation":"128046:11:36","nodeType":"VariableDeclaration","scope":41779,"src":"128041:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41773,"name":"bool","nodeType":"ElementaryTypeName","src":"128041:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41776,"mutability":"mutable","name":"checkData","nameLocation":"128064:9:36","nodeType":"VariableDeclaration","scope":41779,"src":"128059:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41775,"name":"bool","nodeType":"ElementaryTypeName","src":"128059:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"127986:88:36"},"returnParameters":{"id":41778,"nodeType":"ParameterList","parameters":[],"src":"128091:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41795,"nodeType":"FunctionDefinition","src":"128195:197:36","nodes":[],"documentation":{"id":41780,"nodeType":"StructuredDocumentation","src":"128098:92:36","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"128204:19:36","parameters":{"id":41793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41782,"mutability":"mutable","name":"checkTopic0","nameLocation":"128238:11:36","nodeType":"VariableDeclaration","scope":41795,"src":"128233:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41781,"name":"bool","nodeType":"ElementaryTypeName","src":"128233:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41784,"mutability":"mutable","name":"checkTopic1","nameLocation":"128264:11:36","nodeType":"VariableDeclaration","scope":41795,"src":"128259:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41783,"name":"bool","nodeType":"ElementaryTypeName","src":"128259:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41786,"mutability":"mutable","name":"checkTopic2","nameLocation":"128290:11:36","nodeType":"VariableDeclaration","scope":41795,"src":"128285:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41785,"name":"bool","nodeType":"ElementaryTypeName","src":"128285:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41788,"mutability":"mutable","name":"checkTopic3","nameLocation":"128316:11:36","nodeType":"VariableDeclaration","scope":41795,"src":"128311:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41787,"name":"bool","nodeType":"ElementaryTypeName","src":"128311:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41790,"mutability":"mutable","name":"checkData","nameLocation":"128342:9:36","nodeType":"VariableDeclaration","scope":41795,"src":"128337:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41789,"name":"bool","nodeType":"ElementaryTypeName","src":"128337:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41792,"mutability":"mutable","name":"emitter","nameLocation":"128369:7:36","nodeType":"VariableDeclaration","scope":41795,"src":"128361:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41791,"name":"address","nodeType":"ElementaryTypeName","src":"128361:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"128223:159:36"},"returnParameters":{"id":41794,"nodeType":"ParameterList","parameters":[],"src":"128391:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41799,"nodeType":"FunctionDefinition","src":"128682:40:36","nodes":[],"documentation":{"id":41796,"nodeType":"StructuredDocumentation","src":"128398:279:36","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"128691:19:36","parameters":{"id":41797,"nodeType":"ParameterList","parameters":[],"src":"128710:2:36"},"returnParameters":{"id":41798,"nodeType":"ParameterList","parameters":[],"src":"128721:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41805,"nodeType":"FunctionDefinition","src":"128825:55:36","nodes":[],"documentation":{"id":41800,"nodeType":"StructuredDocumentation","src":"128728:92:36","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"128834:19:36","parameters":{"id":41803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41802,"mutability":"mutable","name":"emitter","nameLocation":"128862:7:36","nodeType":"VariableDeclaration","scope":41805,"src":"128854:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41801,"name":"address","nodeType":"ElementaryTypeName","src":"128854:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"128853:17:36"},"returnParameters":{"id":41804,"nodeType":"ParameterList","parameters":[],"src":"128879:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41817,"nodeType":"FunctionDefinition","src":"129219:99:36","nodes":[],"documentation":{"id":41806,"nodeType":"StructuredDocumentation","src":"128886:328:36","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"129228:10:36","parameters":{"id":41815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41808,"mutability":"mutable","name":"checkTopic1","nameLocation":"129244:11:36","nodeType":"VariableDeclaration","scope":41817,"src":"129239:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41807,"name":"bool","nodeType":"ElementaryTypeName","src":"129239:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41810,"mutability":"mutable","name":"checkTopic2","nameLocation":"129262:11:36","nodeType":"VariableDeclaration","scope":41817,"src":"129257:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41809,"name":"bool","nodeType":"ElementaryTypeName","src":"129257:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41812,"mutability":"mutable","name":"checkTopic3","nameLocation":"129280:11:36","nodeType":"VariableDeclaration","scope":41817,"src":"129275:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41811,"name":"bool","nodeType":"ElementaryTypeName","src":"129275:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41814,"mutability":"mutable","name":"checkData","nameLocation":"129298:9:36","nodeType":"VariableDeclaration","scope":41817,"src":"129293:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41813,"name":"bool","nodeType":"ElementaryTypeName","src":"129293:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"129238:70:36"},"returnParameters":{"id":41816,"nodeType":"ParameterList","parameters":[],"src":"129317:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41831,"nodeType":"FunctionDefinition","src":"129421:124:36","nodes":[],"documentation":{"id":41818,"nodeType":"StructuredDocumentation","src":"129324:92:36","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"129430:10:36","parameters":{"id":41829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41820,"mutability":"mutable","name":"checkTopic1","nameLocation":"129446:11:36","nodeType":"VariableDeclaration","scope":41831,"src":"129441:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41819,"name":"bool","nodeType":"ElementaryTypeName","src":"129441:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41822,"mutability":"mutable","name":"checkTopic2","nameLocation":"129464:11:36","nodeType":"VariableDeclaration","scope":41831,"src":"129459:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41821,"name":"bool","nodeType":"ElementaryTypeName","src":"129459:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41824,"mutability":"mutable","name":"checkTopic3","nameLocation":"129482:11:36","nodeType":"VariableDeclaration","scope":41831,"src":"129477:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41823,"name":"bool","nodeType":"ElementaryTypeName","src":"129477:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41826,"mutability":"mutable","name":"checkData","nameLocation":"129500:9:36","nodeType":"VariableDeclaration","scope":41831,"src":"129495:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41825,"name":"bool","nodeType":"ElementaryTypeName","src":"129495:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41828,"mutability":"mutable","name":"emitter","nameLocation":"129519:7:36","nodeType":"VariableDeclaration","scope":41831,"src":"129511:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41827,"name":"address","nodeType":"ElementaryTypeName","src":"129511:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"129440:87:36"},"returnParameters":{"id":41830,"nodeType":"ParameterList","parameters":[],"src":"129544:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41835,"nodeType":"FunctionDefinition","src":"129815:31:36","nodes":[],"documentation":{"id":41832,"nodeType":"StructuredDocumentation","src":"129551:259:36","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"129824:10:36","parameters":{"id":41833,"nodeType":"ParameterList","parameters":[],"src":"129834:2:36"},"returnParameters":{"id":41834,"nodeType":"ParameterList","parameters":[],"src":"129845:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41841,"nodeType":"FunctionDefinition","src":"129949:46:36","nodes":[],"documentation":{"id":41836,"nodeType":"StructuredDocumentation","src":"129852:92:36","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"129958:10:36","parameters":{"id":41839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41838,"mutability":"mutable","name":"emitter","nameLocation":"129977:7:36","nodeType":"VariableDeclaration","scope":41841,"src":"129969:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41837,"name":"address","nodeType":"ElementaryTypeName","src":"129969:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"129968:17:36"},"returnParameters":{"id":41840,"nodeType":"ParameterList","parameters":[],"src":"129994:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41855,"nodeType":"FunctionDefinition","src":"130065:113:36","nodes":[],"documentation":{"id":41842,"nodeType":"StructuredDocumentation","src":"130001:59:36","text":"Expect a given number of logs with the provided topics."},"functionSelector":"5e1d1c33","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"130074:10:36","parameters":{"id":41853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41844,"mutability":"mutable","name":"checkTopic1","nameLocation":"130090:11:36","nodeType":"VariableDeclaration","scope":41855,"src":"130085:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41843,"name":"bool","nodeType":"ElementaryTypeName","src":"130085:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41846,"mutability":"mutable","name":"checkTopic2","nameLocation":"130108:11:36","nodeType":"VariableDeclaration","scope":41855,"src":"130103:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41845,"name":"bool","nodeType":"ElementaryTypeName","src":"130103:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41848,"mutability":"mutable","name":"checkTopic3","nameLocation":"130126:11:36","nodeType":"VariableDeclaration","scope":41855,"src":"130121:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41847,"name":"bool","nodeType":"ElementaryTypeName","src":"130121:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41850,"mutability":"mutable","name":"checkData","nameLocation":"130144:9:36","nodeType":"VariableDeclaration","scope":41855,"src":"130139:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41849,"name":"bool","nodeType":"ElementaryTypeName","src":"130139:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41852,"mutability":"mutable","name":"count","nameLocation":"130162:5:36","nodeType":"VariableDeclaration","scope":41855,"src":"130155:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41851,"name":"uint64","nodeType":"ElementaryTypeName","src":"130155:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"130084:84:36"},"returnParameters":{"id":41854,"nodeType":"ParameterList","parameters":[],"src":"130177:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41871,"nodeType":"FunctionDefinition","src":"130272:184:36","nodes":[],"documentation":{"id":41856,"nodeType":"StructuredDocumentation","src":"130184:83:36","text":"Expect a given number of logs from a specific emitter with the provided topics."},"functionSelector":"c339d02c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"130281:10:36","parameters":{"id":41869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41858,"mutability":"mutable","name":"checkTopic1","nameLocation":"130306:11:36","nodeType":"VariableDeclaration","scope":41871,"src":"130301:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41857,"name":"bool","nodeType":"ElementaryTypeName","src":"130301:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41860,"mutability":"mutable","name":"checkTopic2","nameLocation":"130332:11:36","nodeType":"VariableDeclaration","scope":41871,"src":"130327:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41859,"name":"bool","nodeType":"ElementaryTypeName","src":"130327:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41862,"mutability":"mutable","name":"checkTopic3","nameLocation":"130358:11:36","nodeType":"VariableDeclaration","scope":41871,"src":"130353:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41861,"name":"bool","nodeType":"ElementaryTypeName","src":"130353:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41864,"mutability":"mutable","name":"checkData","nameLocation":"130384:9:36","nodeType":"VariableDeclaration","scope":41871,"src":"130379:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41863,"name":"bool","nodeType":"ElementaryTypeName","src":"130379:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":41866,"mutability":"mutable","name":"emitter","nameLocation":"130411:7:36","nodeType":"VariableDeclaration","scope":41871,"src":"130403:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41865,"name":"address","nodeType":"ElementaryTypeName","src":"130403:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41868,"mutability":"mutable","name":"count","nameLocation":"130435:5:36","nodeType":"VariableDeclaration","scope":41871,"src":"130428:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41867,"name":"uint64","nodeType":"ElementaryTypeName","src":"130428:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"130291:155:36"},"returnParameters":{"id":41870,"nodeType":"ParameterList","parameters":[],"src":"130455:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41877,"nodeType":"FunctionDefinition","src":"130540:43:36","nodes":[],"documentation":{"id":41872,"nodeType":"StructuredDocumentation","src":"130462:73:36","text":"Expect a given number of logs with all topic and data checks enabled."},"functionSelector":"4c74a335","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"130549:10:36","parameters":{"id":41875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41874,"mutability":"mutable","name":"count","nameLocation":"130567:5:36","nodeType":"VariableDeclaration","scope":41877,"src":"130560:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41873,"name":"uint64","nodeType":"ElementaryTypeName","src":"130560:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"130559:14:36"},"returnParameters":{"id":41876,"nodeType":"ParameterList","parameters":[],"src":"130582:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41885,"nodeType":"FunctionDefinition","src":"130691:60:36","nodes":[],"documentation":{"id":41878,"nodeType":"StructuredDocumentation","src":"130589:97:36","text":"Expect a given number of logs from a specific emitter with all topic and data checks enabled."},"functionSelector":"b43aece3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"130700:10:36","parameters":{"id":41883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41880,"mutability":"mutable","name":"emitter","nameLocation":"130719:7:36","nodeType":"VariableDeclaration","scope":41885,"src":"130711:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41879,"name":"address","nodeType":"ElementaryTypeName","src":"130711:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41882,"mutability":"mutable","name":"count","nameLocation":"130735:5:36","nodeType":"VariableDeclaration","scope":41885,"src":"130728:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41881,"name":"uint64","nodeType":"ElementaryTypeName","src":"130728:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"130710:31:36"},"returnParameters":{"id":41884,"nodeType":"ParameterList","parameters":[],"src":"130750:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41891,"nodeType":"FunctionDefinition","src":"130829:57:36","nodes":[],"documentation":{"id":41886,"nodeType":"StructuredDocumentation","src":"130757:67:36","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"11fb5b9c","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"130838:19:36","parameters":{"id":41889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41888,"mutability":"mutable","name":"revertData","nameLocation":"130865:10:36","nodeType":"VariableDeclaration","scope":41891,"src":"130858:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":41887,"name":"bytes4","nodeType":"ElementaryTypeName","src":"130858:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"130857:19:36"},"returnParameters":{"id":41890,"nodeType":"ParameterList","parameters":[],"src":"130885:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41899,"nodeType":"FunctionDefinition","src":"130985:75:36","nodes":[],"documentation":{"id":41892,"nodeType":"StructuredDocumentation","src":"130892:88:36","text":"Expects an error on next call to reverter address, that starts with the revert data."},"functionSelector":"51aa008a","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"130994:19:36","parameters":{"id":41897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41894,"mutability":"mutable","name":"revertData","nameLocation":"131021:10:36","nodeType":"VariableDeclaration","scope":41899,"src":"131014:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":41893,"name":"bytes4","nodeType":"ElementaryTypeName","src":"131014:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":41896,"mutability":"mutable","name":"reverter","nameLocation":"131041:8:36","nodeType":"VariableDeclaration","scope":41899,"src":"131033:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41895,"name":"address","nodeType":"ElementaryTypeName","src":"131033:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"131013:37:36"},"returnParameters":{"id":41898,"nodeType":"ParameterList","parameters":[],"src":"131059:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41903,"nodeType":"FunctionDefinition","src":"131126:33:36","nodes":[],"documentation":{"id":41900,"nodeType":"StructuredDocumentation","src":"131066:55:36","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"131135:12:36","parameters":{"id":41901,"nodeType":"ParameterList","parameters":[],"src":"131147:2:36"},"returnParameters":{"id":41902,"nodeType":"ParameterList","parameters":[],"src":"131158:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41909,"nodeType":"FunctionDefinition","src":"131241:50:36","nodes":[],"documentation":{"id":41904,"nodeType":"StructuredDocumentation","src":"131165:71:36","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"131250:12:36","parameters":{"id":41907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41906,"mutability":"mutable","name":"revertData","nameLocation":"131270:10:36","nodeType":"VariableDeclaration","scope":41909,"src":"131263:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":41905,"name":"bytes4","nodeType":"ElementaryTypeName","src":"131263:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"131262:19:36"},"returnParameters":{"id":41908,"nodeType":"ParameterList","parameters":[],"src":"131290:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41919,"nodeType":"FunctionDefinition","src":"131419:82:36","nodes":[],"documentation":{"id":41910,"nodeType":"StructuredDocumentation","src":"131297:117:36","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data."},"functionSelector":"b0762d73","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"131428:12:36","parameters":{"id":41917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41912,"mutability":"mutable","name":"revertData","nameLocation":"131448:10:36","nodeType":"VariableDeclaration","scope":41919,"src":"131441:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":41911,"name":"bytes4","nodeType":"ElementaryTypeName","src":"131441:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":41914,"mutability":"mutable","name":"reverter","nameLocation":"131468:8:36","nodeType":"VariableDeclaration","scope":41919,"src":"131460:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41913,"name":"address","nodeType":"ElementaryTypeName","src":"131460:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41916,"mutability":"mutable","name":"count","nameLocation":"131485:5:36","nodeType":"VariableDeclaration","scope":41919,"src":"131478:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41915,"name":"uint64","nodeType":"ElementaryTypeName","src":"131478:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"131440:51:36"},"returnParameters":{"id":41918,"nodeType":"ParameterList","parameters":[],"src":"131500:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41929,"nodeType":"FunctionDefinition","src":"131637:90:36","nodes":[],"documentation":{"id":41920,"nodeType":"StructuredDocumentation","src":"131507:125:36","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data."},"functionSelector":"d345fb1f","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"131646:12:36","parameters":{"id":41927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41922,"mutability":"mutable","name":"revertData","nameLocation":"131674:10:36","nodeType":"VariableDeclaration","scope":41929,"src":"131659:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41921,"name":"bytes","nodeType":"ElementaryTypeName","src":"131659:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41924,"mutability":"mutable","name":"reverter","nameLocation":"131694:8:36","nodeType":"VariableDeclaration","scope":41929,"src":"131686:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41923,"name":"address","nodeType":"ElementaryTypeName","src":"131686:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41926,"mutability":"mutable","name":"count","nameLocation":"131711:5:36","nodeType":"VariableDeclaration","scope":41929,"src":"131704:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41925,"name":"uint64","nodeType":"ElementaryTypeName","src":"131704:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"131658:59:36"},"returnParameters":{"id":41928,"nodeType":"ParameterList","parameters":[],"src":"131726:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41935,"nodeType":"FunctionDefinition","src":"131809:58:36","nodes":[],"documentation":{"id":41930,"nodeType":"StructuredDocumentation","src":"131733:71:36","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"131818:12:36","parameters":{"id":41933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41932,"mutability":"mutable","name":"revertData","nameLocation":"131846:10:36","nodeType":"VariableDeclaration","scope":41935,"src":"131831:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41931,"name":"bytes","nodeType":"ElementaryTypeName","src":"131831:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"131830:27:36"},"returnParameters":{"id":41934,"nodeType":"ParameterList","parameters":[],"src":"131866:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41941,"nodeType":"FunctionDefinition","src":"131953:49:36","nodes":[],"documentation":{"id":41936,"nodeType":"StructuredDocumentation","src":"131873:75:36","text":"Expects an error with any revert data on next call to reverter address."},"functionSelector":"d814f38a","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"131962:12:36","parameters":{"id":41939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41938,"mutability":"mutable","name":"reverter","nameLocation":"131983:8:36","nodeType":"VariableDeclaration","scope":41941,"src":"131975:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41937,"name":"address","nodeType":"ElementaryTypeName","src":"131975:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"131974:18:36"},"returnParameters":{"id":41940,"nodeType":"ParameterList","parameters":[],"src":"132001:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41949,"nodeType":"FunctionDefinition","src":"132091:68:36","nodes":[],"documentation":{"id":41942,"nodeType":"StructuredDocumentation","src":"132008:78:36","text":"Expects an error from reverter address on next call, with any revert data."},"functionSelector":"260bc5de","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"132100:12:36","parameters":{"id":41947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41944,"mutability":"mutable","name":"revertData","nameLocation":"132120:10:36","nodeType":"VariableDeclaration","scope":41949,"src":"132113:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":41943,"name":"bytes4","nodeType":"ElementaryTypeName","src":"132113:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":41946,"mutability":"mutable","name":"reverter","nameLocation":"132140:8:36","nodeType":"VariableDeclaration","scope":41949,"src":"132132:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41945,"name":"address","nodeType":"ElementaryTypeName","src":"132132:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"132112:37:36"},"returnParameters":{"id":41948,"nodeType":"ParameterList","parameters":[],"src":"132158:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41957,"nodeType":"FunctionDefinition","src":"132264:76:36","nodes":[],"documentation":{"id":41950,"nodeType":"StructuredDocumentation","src":"132165:94:36","text":"Expects an error from reverter address on next call, that exactly matches the revert data."},"functionSelector":"61ebcf12","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"132273:12:36","parameters":{"id":41955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41952,"mutability":"mutable","name":"revertData","nameLocation":"132301:10:36","nodeType":"VariableDeclaration","scope":41957,"src":"132286:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41951,"name":"bytes","nodeType":"ElementaryTypeName","src":"132286:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41954,"mutability":"mutable","name":"reverter","nameLocation":"132321:8:36","nodeType":"VariableDeclaration","scope":41957,"src":"132313:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41953,"name":"address","nodeType":"ElementaryTypeName","src":"132313:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"132285:45:36"},"returnParameters":{"id":41956,"nodeType":"ParameterList","parameters":[],"src":"132339:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41963,"nodeType":"FunctionDefinition","src":"132448:45:36","nodes":[],"documentation":{"id":41958,"nodeType":"StructuredDocumentation","src":"132346:97:36","text":"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter."},"functionSelector":"4ee38244","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"132457:12:36","parameters":{"id":41961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41960,"mutability":"mutable","name":"count","nameLocation":"132477:5:36","nodeType":"VariableDeclaration","scope":41963,"src":"132470:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41959,"name":"uint64","nodeType":"ElementaryTypeName","src":"132470:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"132469:14:36"},"returnParameters":{"id":41962,"nodeType":"ParameterList","parameters":[],"src":"132492:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41971,"nodeType":"FunctionDefinition","src":"132595:64:36","nodes":[],"documentation":{"id":41964,"nodeType":"StructuredDocumentation","src":"132499:91:36","text":"Expects a `count` number of reverts from the upcoming calls that match the revert data."},"functionSelector":"e45ca72d","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"132604:12:36","parameters":{"id":41969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41966,"mutability":"mutable","name":"revertData","nameLocation":"132624:10:36","nodeType":"VariableDeclaration","scope":41971,"src":"132617:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":41965,"name":"bytes4","nodeType":"ElementaryTypeName","src":"132617:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":41968,"mutability":"mutable","name":"count","nameLocation":"132643:5:36","nodeType":"VariableDeclaration","scope":41971,"src":"132636:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41967,"name":"uint64","nodeType":"ElementaryTypeName","src":"132636:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"132616:33:36"},"returnParameters":{"id":41970,"nodeType":"ParameterList","parameters":[],"src":"132658:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41979,"nodeType":"FunctionDefinition","src":"132769:72:36","nodes":[],"documentation":{"id":41972,"nodeType":"StructuredDocumentation","src":"132665:99:36","text":"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data."},"functionSelector":"4994c273","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"132778:12:36","parameters":{"id":41977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41974,"mutability":"mutable","name":"revertData","nameLocation":"132806:10:36","nodeType":"VariableDeclaration","scope":41979,"src":"132791:25:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41973,"name":"bytes","nodeType":"ElementaryTypeName","src":"132791:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41976,"mutability":"mutable","name":"count","nameLocation":"132825:5:36","nodeType":"VariableDeclaration","scope":41979,"src":"132818:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41975,"name":"uint64","nodeType":"ElementaryTypeName","src":"132818:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"132790:41:36"},"returnParameters":{"id":41978,"nodeType":"ParameterList","parameters":[],"src":"132840:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41987,"nodeType":"FunctionDefinition","src":"132942:63:36","nodes":[],"documentation":{"id":41980,"nodeType":"StructuredDocumentation","src":"132847:90:36","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address."},"functionSelector":"1ff5f952","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"132951:12:36","parameters":{"id":41985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41982,"mutability":"mutable","name":"reverter","nameLocation":"132972:8:36","nodeType":"VariableDeclaration","scope":41987,"src":"132964:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41981,"name":"address","nodeType":"ElementaryTypeName","src":"132964:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41984,"mutability":"mutable","name":"count","nameLocation":"132989:5:36","nodeType":"VariableDeclaration","scope":41987,"src":"132982:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41983,"name":"uint64","nodeType":"ElementaryTypeName","src":"132982:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"132963:32:36"},"returnParameters":{"id":41986,"nodeType":"ParameterList","parameters":[],"src":"133004:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41995,"nodeType":"FunctionDefinition","src":"133234:59:36","nodes":[],"documentation":{"id":41988,"nodeType":"StructuredDocumentation","src":"133011:218:36","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"133243:16:36","parameters":{"id":41993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41990,"mutability":"mutable","name":"min","nameLocation":"133267:3:36","nodeType":"VariableDeclaration","scope":41995,"src":"133260:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41989,"name":"uint64","nodeType":"ElementaryTypeName","src":"133260:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":41992,"mutability":"mutable","name":"max","nameLocation":"133279:3:36","nodeType":"VariableDeclaration","scope":41995,"src":"133272:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41991,"name":"uint64","nodeType":"ElementaryTypeName","src":"133272:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"133259:24:36"},"returnParameters":{"id":41994,"nodeType":"ParameterList","parameters":[],"src":"133292:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42003,"nodeType":"FunctionDefinition","src":"133535:63:36","nodes":[],"documentation":{"id":41996,"nodeType":"StructuredDocumentation","src":"133299:231:36","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"133544:20:36","parameters":{"id":42001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41998,"mutability":"mutable","name":"min","nameLocation":"133572:3:36","nodeType":"VariableDeclaration","scope":42003,"src":"133565:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41997,"name":"uint64","nodeType":"ElementaryTypeName","src":"133565:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":42000,"mutability":"mutable","name":"max","nameLocation":"133584:3:36","nodeType":"VariableDeclaration","scope":42003,"src":"133577:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41999,"name":"uint64","nodeType":"ElementaryTypeName","src":"133577:6:36","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"133564:24:36"},"returnParameters":{"id":42002,"nodeType":"ParameterList","parameters":[],"src":"133597:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42009,"nodeType":"FunctionDefinition","src":"133680:38:36","nodes":[],"documentation":{"id":42004,"nodeType":"StructuredDocumentation","src":"133604:71:36","text":"Marks a test as skipped. Must be called at the top level of a test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"133689:4:36","parameters":{"id":42007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42006,"mutability":"mutable","name":"skipTest","nameLocation":"133699:8:36","nodeType":"VariableDeclaration","scope":42009,"src":"133694:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":42005,"name":"bool","nodeType":"ElementaryTypeName","src":"133694:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"133693:15:36"},"returnParameters":{"id":42008,"nodeType":"ParameterList","parameters":[],"src":"133717:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42017,"nodeType":"FunctionDefinition","src":"133814:62:36","nodes":[],"documentation":{"id":42010,"nodeType":"StructuredDocumentation","src":"133724:85:36","text":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"functionSelector":"c42a80a7","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"133823:4:36","parameters":{"id":42015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42012,"mutability":"mutable","name":"skipTest","nameLocation":"133833:8:36","nodeType":"VariableDeclaration","scope":42017,"src":"133828:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":42011,"name":"bool","nodeType":"ElementaryTypeName","src":"133828:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":42014,"mutability":"mutable","name":"reason","nameLocation":"133859:6:36","nodeType":"VariableDeclaration","scope":42017,"src":"133843:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":42013,"name":"string","nodeType":"ElementaryTypeName","src":"133843:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"133827:39:36"},"returnParameters":{"id":42016,"nodeType":"ParameterList","parameters":[],"src":"133875:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42021,"nodeType":"FunctionDefinition","src":"133951:41:36","nodes":[],"documentation":{"id":42018,"nodeType":"StructuredDocumentation","src":"133882:64:36","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"133960:20:36","parameters":{"id":42019,"nodeType":"ParameterList","parameters":[],"src":"133980:2:36"},"returnParameters":{"id":42020,"nodeType":"ParameterList","parameters":[],"src":"133991:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42025,"nodeType":"FunctionDefinition","src":"134480:38:36","nodes":[],"documentation":{"id":42022,"nodeType":"StructuredDocumentation","src":"134034:441:36","text":"Causes the next contract creation (via new) to fail and return its initcode in the returndata buffer.\n This allows type-safe access to the initcode payload that would be used for contract creation.\n Example usage:\n vm.interceptInitcode();\n bytes memory initcode;\n try new MyContract(param1, param2) { assert(false); }\n catch (bytes memory interceptedInitcode) { initcode = interceptedInitcode; }"},"functionSelector":"838653c7","implemented":false,"kind":"function","modifiers":[],"name":"interceptInitcode","nameLocation":"134489:17:36","parameters":{"id":42023,"nodeType":"ParameterList","parameters":[],"src":"134506:2:36"},"returnParameters":{"id":42024,"nodeType":"ParameterList","parameters":[],"src":"134517:0:36"},"scope":42026,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":40957,"name":"VmSafe","nameLocations":["107949:6:36"],"nodeType":"IdentifierPath","referencedDeclaration":40955,"src":"107949:6:36"},"id":40958,"nodeType":"InheritanceSpecifier","src":"107949:6:36"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":40956,"nodeType":"StructuredDocumentation","src":"107762:171:36","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[42026,40955],"name":"Vm","nameLocation":"107943:2:36","scope":42027,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":36}