{"abi":[{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"burn","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clear","inputs":[{"name":"currency","type":"address","internalType":"Currency"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"collectProtocolFees","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"currency","type":"address","internalType":"Currency"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountCollected","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"donate","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"int256","internalType":"BalanceDelta"}],"stateMutability":"nonpayable"},{"type":"function","name":"extsload","inputs":[{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"extsload","inputs":[{"name":"startSlot","type":"bytes32","internalType":"bytes32"},{"name":"nSlots","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"extsload","inputs":[{"name":"slots","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"exttload","inputs":[{"name":"slots","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"exttload","inputs":[{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"sqrtPriceX96","type":"uint160","internalType":"uint160"}],"outputs":[{"name":"tick","type":"int24","internalType":"int24"}],"stateMutability":"nonpayable"},{"type":"function","name":"isOperator","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"approved","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"modifyLiquidity","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"callerDelta","type":"int256","internalType":"BalanceDelta"},{"name":"feesAccrued","type":"int256","internalType":"BalanceDelta"}],"stateMutability":"nonpayable"},{"type":"function","name":"protocolFeeController","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"protocolFeesAccrued","inputs":[{"name":"currency","type":"address","internalType":"Currency"}],"outputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"setOperator","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"setProtocolFee","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"newProtocolFee","type":"uint24","internalType":"uint24"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setProtocolFeeController","inputs":[{"name":"controller","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"settle","inputs":[],"outputs":[{"name":"paid","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"settleFor","inputs":[{"name":"recipient","type":"address","internalType":"address"}],"outputs":[{"name":"paid","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"swap","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct SwapParams","components":[{"name":"zeroForOne","type":"bool","internalType":"bool"},{"name":"amountSpecified","type":"int256","internalType":"int256"},{"name":"sqrtPriceLimitX96","type":"uint160","internalType":"uint160"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"swapDelta","type":"int256","internalType":"BalanceDelta"}],"stateMutability":"nonpayable"},{"type":"function","name":"sync","inputs":[{"name":"currency","type":"address","internalType":"Currency"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"take","inputs":[{"name":"currency","type":"address","internalType":"Currency"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transfer","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"unlock","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"updateDynamicLPFee","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"newDynamicLPFee","type":"uint24","internalType":"uint24"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Donate","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Initialize","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"currency0","type":"address","indexed":true,"internalType":"Currency"},{"name":"currency1","type":"address","indexed":true,"internalType":"Currency"},{"name":"fee","type":"uint24","indexed":false,"internalType":"uint24"},{"name":"tickSpacing","type":"int24","indexed":false,"internalType":"int24"},{"name":"hooks","type":"address","indexed":false,"internalType":"contract IHooks"},{"name":"sqrtPriceX96","type":"uint160","indexed":false,"internalType":"uint160"},{"name":"tick","type":"int24","indexed":false,"internalType":"int24"}],"anonymous":false},{"type":"event","name":"ModifyLiquidity","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"tickLower","type":"int24","indexed":false,"internalType":"int24"},{"name":"tickUpper","type":"int24","indexed":false,"internalType":"int24"},{"name":"liquidityDelta","type":"int256","indexed":false,"internalType":"int256"},{"name":"salt","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"OperatorSet","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"ProtocolFeeControllerUpdated","inputs":[{"name":"protocolFeeController","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ProtocolFeeUpdated","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"protocolFee","type":"uint24","indexed":false,"internalType":"uint24"}],"anonymous":false},{"type":"event","name":"Swap","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"amount0","type":"int128","indexed":false,"internalType":"int128"},{"name":"amount1","type":"int128","indexed":false,"internalType":"int128"},{"name":"sqrtPriceX96","type":"uint160","indexed":false,"internalType":"uint160"},{"name":"liquidity","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"tick","type":"int24","indexed":false,"internalType":"int24"},{"name":"fee","type":"uint24","indexed":false,"internalType":"uint24"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"caller","type":"address","indexed":false,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"AlreadyUnlocked","inputs":[]},{"type":"error","name":"CurrenciesOutOfOrderOrEqual","inputs":[{"name":"currency0","type":"address","internalType":"address"},{"name":"currency1","type":"address","internalType":"address"}]},{"type":"error","name":"CurrencyNotSettled","inputs":[]},{"type":"error","name":"InvalidCaller","inputs":[]},{"type":"error","name":"ManagerLocked","inputs":[]},{"type":"error","name":"MustClearExactPositiveDelta","inputs":[]},{"type":"error","name":"NonzeroNativeValue","inputs":[]},{"type":"error","name":"PoolNotInitialized","inputs":[]},{"type":"error","name":"ProtocolFeeCurrencySynced","inputs":[]},{"type":"error","name":"ProtocolFeeTooLarge","inputs":[{"name":"fee","type":"uint24","internalType":"uint24"}]},{"type":"error","name":"SwapAmountCannotBeZero","inputs":[]},{"type":"error","name":"TickSpacingTooLarge","inputs":[{"name":"tickSpacing","type":"int24","internalType":"int24"}]},{"type":"error","name":"TickSpacingTooSmall","inputs":[{"name":"tickSpacing","type":"int24","internalType":"int24"}]},{"type":"error","name":"UnauthorizedDynamicLPFeeUpdate","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowance(address,address,uint256)":"598af9e7","approve(address,uint256,uint256)":"426a8493","balanceOf(address,uint256)":"00fdd58e","burn(address,uint256,uint256)":"f5298aca","clear(address,uint256)":"80f0b44c","collectProtocolFees(address,address,uint256)":"8161b874","donate((address,address,uint24,int24,address),uint256,uint256,bytes)":"234266d7","extsload(bytes32)":"1e2eaeaf","extsload(bytes32,uint256)":"35fd631a","extsload(bytes32[])":"dbd035ff","exttload(bytes32)":"f135baaa","exttload(bytes32[])":"9bf6645f","initialize((address,address,uint24,int24,address),uint160)":"6276cbbe","isOperator(address,address)":"b6363cf2","mint(address,uint256,uint256)":"156e29f6","modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":"5a6bcfda","protocolFeeController()":"f02de3b2","protocolFeesAccrued(address)":"97e8cd4e","setOperator(address,bool)":"558a7297","setProtocolFee((address,address,uint24,int24,address),uint24)":"7e87ce7d","setProtocolFeeController(address)":"2d771389","settle()":"11da60b4","settleFor(address)":"3dd45adb","swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)":"f3cd914c","sync(address)":"a5841194","take(address,address,uint256)":"0b0d9c09","transfer(address,uint256,uint256)":"095bcdb6","transferFrom(address,address,uint256,uint256)":"fe99049a","unlock(bytes)":"48c89491","updateDynamicLPFee((address,address,uint24,int24,address),uint24)":"52759651"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyUnlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency1\",\"type\":\"address\"}],\"name\":\"CurrenciesOutOfOrderOrEqual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrencyNotSettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ManagerLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustClearExactPositiveDelta\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonzeroNativeValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeCurrencySynced\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapAmountCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacingTooLarge\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacingTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedDynamicLPFeeUpdate\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Donate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"ModifyLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"OperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"protocolFee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount0\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount1\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"collectProtocolFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"donate\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"startSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nSlots\",\"type\":\"uint256\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"modifyLiquidity\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"callerDelta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"protocolFeesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newProtocolFee\",\"type\":\"uint24\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"settleFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"swapDelta\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"take\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlock\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newDynamicLPFee\",\"type\":\"uint24\"}],\"name\":\"updateDynamicLPFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Donate(bytes32,address,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount donated in currency0\",\"amount1\":\"The amount donated in currency1\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was donated to\",\"sender\":\"The address that initiated the donate call\"}},\"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)\":{\"params\":{\"currency0\":\"The first currency of the pool by address sort order\",\"currency1\":\"The second currency of the pool by address sort order\",\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"hooks\":\"The hooks contract address for the pool, or address(0) if none\",\"id\":\"The abi encoded hash of the pool key struct for the new pool\",\"sqrtPriceX96\":\"The price of the pool on initialization\",\"tick\":\"The initial tick of the pool corresponding to the initialized price\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\"}},\"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)\":{\"params\":{\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidityDelta\":\"The amount of liquidity that was added or removed\",\"salt\":\"The extra data to make positions unique\",\"sender\":\"The address that modified the pool\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"params\":{\"amount0\":\"The delta of the currency0 balance of the pool\",\"amount1\":\"The delta of the currency1 balance of the pool\",\"fee\":\"The swap fee in hundredths of a bip\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidity\":\"The liquidity of the pool after the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of the price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,uint256)\":{\"params\":{\"id\":\"The id of the token.\",\"owner\":\"The address of the owner.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"amount\":\"The allowance of the token.\"}},\"approve(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"balanceOf(address,uint256)\":{\"params\":{\"id\":\"The id of the token.\",\"owner\":\"The address of the owner.\"},\"returns\":{\"amount\":\"The balance of the token.\"}},\"burn(address,uint256,uint256)\":{\"details\":\"The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out\",\"params\":{\"amount\":\"The amount of currency to burn\",\"from\":\"The address to burn the tokens from\",\"id\":\"The currency address to burn from ERC6909s, as a uint256\"}},\"clear(address,uint256)\":{\"details\":\"This could be used to clear a balance that is considered dust. Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared.\"},\"collectProtocolFees(address,address,uint256)\":{\"details\":\"This will revert if the contract is unlocked\",\"params\":{\"amount\":\"The amount of currency to withdraw\",\"currency\":\"The currency to withdraw\",\"recipient\":\"The address to receive the protocol fees\"},\"returns\":{\"amountCollected\":\"The amount of currency successfully withdrawn\"}},\"donate((address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"details\":\"Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds. Donors should keep this in mind when designing donation mechanisms.This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)). Read the comments in `Pool.swap()` for more information about this.\",\"params\":{\"amount0\":\"The amount of currency0 to donate\",\"amount1\":\"The amount of currency1 to donate\",\"hookData\":\"The data to pass through to the donate hooks\",\"key\":\"The key of the pool to donate to\"},\"returns\":{\"_0\":\"BalanceDelta The delta of the caller after the donate\"}},\"extsload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to sload\"},\"returns\":{\"value\":\"The value of the slot as bytes32\"}},\"extsload(bytes32,uint256)\":{\"params\":{\"nSlots\":\"Number of slots to load into return value\",\"startSlot\":\"Key of slot to start sloading from\"},\"returns\":{\"values\":\"List of loaded values.\"}},\"extsload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to SLOAD from.\"},\"returns\":{\"values\":\"List of loaded values.\"}},\"exttload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to tload\"},\"returns\":{\"value\":\"The value of the slot as bytes32\"}},\"exttload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to tload\"},\"returns\":{\"values\":\"List of loaded values\"}},\"initialize((address,address,uint24,int24,address),uint160)\":{\"details\":\"A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\",\"params\":{\"key\":\"The pool key for the pool to initialize\",\"sqrtPriceX96\":\"The initial square root price\"},\"returns\":{\"tick\":\"The initial tick of the pool\"}},\"isOperator(address,address)\":{\"params\":{\"owner\":\"The address of the owner.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"approved\":\"The approval status.\"}},\"mint(address,uint256,uint256)\":{\"details\":\"The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out\",\"params\":{\"amount\":\"The amount of currency to mint\",\"id\":\"The currency address to mint to ERC6909s, as a uint256\",\"to\":\"The address to mint the tokens to\"}},\"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"details\":\"Poke by calling with a zero liquidityDeltaNote that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued) atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme\",\"params\":{\"hookData\":\"The data to pass through to the add/removeLiquidity hooks\",\"key\":\"The pool to modify liquidity in\",\"params\":\"The parameters for modifying the liquidity\"},\"returns\":{\"callerDelta\":\"The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable\",\"feesAccrued\":\"The balance delta of the fees generated in the liquidity range. Returned for informational purposes\"}},\"protocolFeeController()\":{\"returns\":{\"_0\":\"address The current protocol fee controller address\"}},\"protocolFeesAccrued(address)\":{\"params\":{\"currency\":\"The currency to check\"},\"returns\":{\"amount\":\"The amount of protocol fees accrued in the currency\"}},\"setOperator(address,bool)\":{\"params\":{\"approved\":\"The approval status.\",\"operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"params\":{\"key\":\"The key of the pool to set a protocol fee for\",\"newProtocolFee\":\"The fee to set\"}},\"setProtocolFeeController(address)\":{\"params\":{\"controller\":\"The new protocol fee controller\"}},\"settle()\":{\"returns\":{\"paid\":\"The amount of currency settled\"}},\"settleFor(address)\":{\"params\":{\"recipient\":\"The address to credit for the payment\"},\"returns\":{\"paid\":\"The amount of currency settled\"}},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"details\":\"Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified. Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.\",\"params\":{\"hookData\":\"The data to pass through to the swap hooks\",\"key\":\"The pool to swap in\",\"params\":\"The parameters for swapping\"},\"returns\":{\"swapDelta\":\"The balance delta of the address swapping\"}},\"sync(address)\":{\"details\":\"This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped for native tokens because the amount to settle is determined by the sent value. However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle native funds, this function can be called with the native currency to then be able to settle the native currency\"},\"take(address,address,uint256)\":{\"details\":\"Will revert if the requested amount is not available, consider using `mint` insteadCan also be used as a mechanism for free flash loans\",\"params\":{\"amount\":\"The amount of currency to withdraw\",\"currency\":\"The currency to withdraw from the pool manager\",\"to\":\"The address to withdraw to\"}},\"transfer(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}},\"transferFrom(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\",\"sender\":\"The address of the sender.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}},\"unlock(bytes)\":{\"details\":\"The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`\",\"params\":{\"data\":\"Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`\"},\"returns\":{\"_0\":\"The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`\"}},\"updateDynamicLPFee((address,address,uint24,int24,address),uint24)\":{\"details\":\"A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\",\"params\":{\"key\":\"The key of the pool to update dynamic LP fees for\",\"newDynamicLPFee\":\"The new dynamic pool LP fee\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyUnlocked()\":[{\"notice\":\"Thrown when unlock is called, but the contract is already unlocked\"}],\"CurrenciesOutOfOrderOrEqual(address,address)\":[{\"notice\":\"PoolKey must have currencies where address(currency0) < address(currency1)\"}],\"CurrencyNotSettled()\":[{\"notice\":\"Thrown when a currency is not netted out after the contract is unlocked\"}],\"InvalidCaller()\":[{\"notice\":\"Thrown when collectProtocolFees or setProtocolFee is not called by the controller.\"}],\"ManagerLocked()\":[{\"notice\":\"Thrown when a function is called that requires the contract to be unlocked, but it is not\"}],\"MustClearExactPositiveDelta()\":[{\"notice\":\"Thrown when `clear` is called with an amount that is not exactly equal to the open currency delta.\"}],\"NonzeroNativeValue()\":[{\"notice\":\"Thrown when native currency is passed to a non native settlement\"}],\"PoolNotInitialized()\":[{\"notice\":\"Thrown when trying to interact with a non-initialized pool\"}],\"ProtocolFeeCurrencySynced()\":[{\"notice\":\"Thrown when collectProtocolFees is attempted on a token that is synced.\"}],\"ProtocolFeeTooLarge(uint24)\":[{\"notice\":\"Thrown when protocol fee is set too high\"}],\"SwapAmountCannotBeZero()\":[{\"notice\":\"Thrown when trying to swap amount of 0\"}],\"TickSpacingTooLarge(int24)\":[{\"notice\":\"Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow\"}],\"TickSpacingTooSmall(int24)\":[{\"notice\":\"Pools must have a positive non-zero tickSpacing passed to #initialize\"}],\"UnauthorizedDynamicLPFeeUpdate()\":[{\"notice\":\"Thrown when a call to updateDynamicLPFee is made by an address that is not the hook, or on a pool that does not have a dynamic swap fee.\"}]},\"events\":{\"Donate(bytes32,address,uint256,uint256)\":{\"notice\":\"Emitted for donations\"},\"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)\":{\"notice\":\"Emitted when a new pool is initialized\"},\"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)\":{\"notice\":\"Emitted when a liquidity position is modified\"},\"ProtocolFeeControllerUpdated(address)\":{\"notice\":\"Emitted when the protocol fee controller address is updated in setProtocolFeeController.\"},\"ProtocolFeeUpdated(bytes32,uint24)\":{\"notice\":\"Emitted when the protocol fee is updated for a pool.\"},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"notice\":\"Emitted for swaps between currency0 and currency1\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address,uint256)\":{\"notice\":\"Spender allowance of an id.\"},\"approve(address,uint256,uint256)\":{\"notice\":\"Approves an amount of an id to a spender.\"},\"balanceOf(address,uint256)\":{\"notice\":\"Owner balance of an id.\"},\"burn(address,uint256,uint256)\":{\"notice\":\"Called by the user to move value from ERC6909 balance\"},\"clear(address,uint256)\":{\"notice\":\"WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently. A call to clear will zero out a positive balance WITHOUT a corresponding transfer.\"},\"collectProtocolFees(address,address,uint256)\":{\"notice\":\"Collects the protocol fees for a given recipient and currency, returning the amount collected\"},\"donate((address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"Donate the given currency amounts to the in-range liquidity providers of a pool\"},\"extsload(bytes32)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32,uint256)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse pool state\"},\"exttload(bytes32)\":{\"notice\":\"Called by external contracts to access transient storage of the contract\"},\"exttload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse transient pool state\"},\"initialize((address,address,uint24,int24,address),uint160)\":{\"notice\":\"Initialize the state for a given pool ID\"},\"isOperator(address,address)\":{\"notice\":\"Checks if a spender is approved by an owner as an operator\"},\"mint(address,uint256,uint256)\":{\"notice\":\"Called by the user to move value into ERC6909 balance\"},\"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"Modify the liquidity for the given pool\"},\"protocolFeeController()\":{\"notice\":\"Returns the current protocol fee controller address\"},\"protocolFeesAccrued(address)\":{\"notice\":\"Given a currency address, returns the protocol fees accrued in that currency\"},\"setOperator(address,bool)\":{\"notice\":\"Sets or removes an operator for the caller.\"},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Sets the protocol fee for the given pool\"},\"setProtocolFeeController(address)\":{\"notice\":\"Sets the protocol fee controller\"},\"settle()\":{\"notice\":\"Called by the user to pay what is owed\"},\"settleFor(address)\":{\"notice\":\"Called by the user to pay on behalf of another address\"},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"Swap against the given pool\"},\"sync(address)\":{\"notice\":\"Writes the current ERC20 balance of the specified currency to transient storage This is used to checkpoint balances for the manager and derive deltas for the caller.\"},\"take(address,address,uint256)\":{\"notice\":\"Called by the user to net out some value owed to the user\"},\"transfer(address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from the caller to a receiver.\"},\"transferFrom(address,address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from a sender to a receiver.\"},\"unlock(bytes)\":{\"notice\":\"All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract.\"},\"updateDynamicLPFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Updates the pools lp fees for the a pool that has enabled dynamic lp fees.\"}},\"notice\":\"Interface for the PoolManager\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v4-core/src/interfaces/IPoolManager.sol\":\"IPoolManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/src/\",\":@eigenlayer/=lib/eigenlayer-contracts/src/contracts/\",\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\",\":zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/\"]},\"sources\":{\"lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AlreadyUnlocked"},{"inputs":[{"internalType":"address","name":"currency0","type":"address"},{"internalType":"address","name":"currency1","type":"address"}],"type":"error","name":"CurrenciesOutOfOrderOrEqual"},{"inputs":[],"type":"error","name":"CurrencyNotSettled"},{"inputs":[],"type":"error","name":"InvalidCaller"},{"inputs":[],"type":"error","name":"ManagerLocked"},{"inputs":[],"type":"error","name":"MustClearExactPositiveDelta"},{"inputs":[],"type":"error","name":"NonzeroNativeValue"},{"inputs":[],"type":"error","name":"PoolNotInitialized"},{"inputs":[],"type":"error","name":"ProtocolFeeCurrencySynced"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"type":"error","name":"ProtocolFeeTooLarge"},{"inputs":[],"type":"error","name":"SwapAmountCannotBeZero"},{"inputs":[{"internalType":"int24","name":"tickSpacing","type":"int24"}],"type":"error","name":"TickSpacingTooLarge"},{"inputs":[{"internalType":"int24","name":"tickSpacing","type":"int24"}],"type":"error","name":"TickSpacingTooSmall"},{"inputs":[],"type":"error","name":"UnauthorizedDynamicLPFeeUpdate"},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"id","type":"uint256","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false}],"type":"event","name":"Donate","anonymous":false},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32","indexed":true},{"internalType":"Currency","name":"currency0","type":"address","indexed":true},{"internalType":"Currency","name":"currency1","type":"address","indexed":true},{"internalType":"uint24","name":"fee","type":"uint24","indexed":false},{"internalType":"int24","name":"tickSpacing","type":"int24","indexed":false},{"internalType":"contract IHooks","name":"hooks","type":"address","indexed":false},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160","indexed":false},{"internalType":"int24","name":"tick","type":"int24","indexed":false}],"type":"event","name":"Initialize","anonymous":false},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"int24","name":"tickLower","type":"int24","indexed":false},{"internalType":"int24","name":"tickUpper","type":"int24","indexed":false},{"internalType":"int256","name":"liquidityDelta","type":"int256","indexed":false},{"internalType":"bytes32","name":"salt","type":"bytes32","indexed":false}],"type":"event","name":"ModifyLiquidity","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"bool","name":"approved","type":"bool","indexed":false}],"type":"event","name":"OperatorSet","anonymous":false},{"inputs":[{"internalType":"address","name":"protocolFeeController","type":"address","indexed":true}],"type":"event","name":"ProtocolFeeControllerUpdated","anonymous":false},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32","indexed":true},{"internalType":"uint24","name":"protocolFee","type":"uint24","indexed":false}],"type":"event","name":"ProtocolFeeUpdated","anonymous":false},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"int128","name":"amount0","type":"int128","indexed":false},{"internalType":"int128","name":"amount1","type":"int128","indexed":false},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160","indexed":false},{"internalType":"uint128","name":"liquidity","type":"uint128","indexed":false},{"internalType":"int24","name":"tick","type":"int24","indexed":false},{"internalType":"uint24","name":"fee","type":"uint24","indexed":false}],"type":"event","name":"Swap","anonymous":false},{"inputs":[{"internalType":"address","name":"caller","type":"address","indexed":false},{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"id","type":"uint256","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"burn"},{"inputs":[{"internalType":"Currency","name":"currency","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"clear"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"Currency","name":"currency","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"collectProtocolFees","outputs":[{"internalType":"uint256","name":"amountCollected","type":"uint256"}]},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"donate","outputs":[{"internalType":"BalanceDelta","name":"","type":"int256"}]},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"extsload","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"startSlot","type":"bytes32"},{"internalType":"uint256","name":"nSlots","type":"uint256"}],"stateMutability":"view","type":"function","name":"extsload","outputs":[{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}]},{"inputs":[{"internalType":"bytes32[]","name":"slots","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"extsload","outputs":[{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}]},{"inputs":[{"internalType":"bytes32[]","name":"slots","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"exttload","outputs":[{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}]},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"exttload","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"stateMutability":"nonpayable","type":"function","name":"initialize","outputs":[{"internalType":"int24","name":"tick","type":"int24"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"isOperator","outputs":[{"internalType":"bool","name":"approved","type":"bool"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"mint"},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct ModifyLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"modifyLiquidity","outputs":[{"internalType":"BalanceDelta","name":"callerDelta","type":"int256"},{"internalType":"BalanceDelta","name":"feesAccrued","type":"int256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"protocolFeeController","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"Currency","name":"currency","type":"address"}],"stateMutability":"view","type":"function","name":"protocolFeesAccrued","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setOperator","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint24","name":"newProtocolFee","type":"uint24"}],"stateMutability":"nonpayable","type":"function","name":"setProtocolFee"},{"inputs":[{"internalType":"address","name":"controller","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setProtocolFeeController"},{"inputs":[],"stateMutability":"payable","type":"function","name":"settle","outputs":[{"internalType":"uint256","name":"paid","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"stateMutability":"payable","type":"function","name":"settleFor","outputs":[{"internalType":"uint256","name":"paid","type":"uint256"}]},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct SwapParams","name":"params","type":"tuple","components":[{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"swap","outputs":[{"internalType":"BalanceDelta","name":"swapDelta","type":"int256"}]},{"inputs":[{"internalType":"Currency","name":"currency","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"sync"},{"inputs":[{"internalType":"Currency","name":"currency","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"take"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"unlock","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint24","name":"newDynamicLPFee","type":"uint24"}],"stateMutability":"nonpayable","type":"function","name":"updateDynamicLPFee"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address,uint256)":{"params":{"id":"The id of the token.","owner":"The address of the owner.","spender":"The address of the spender."},"returns":{"amount":"The allowance of the token."}},"approve(address,uint256,uint256)":{"params":{"amount":"The amount of the token.","id":"The id of the token.","spender":"The address of the spender."},"returns":{"_0":"bool True, always"}},"balanceOf(address,uint256)":{"params":{"id":"The id of the token.","owner":"The address of the owner."},"returns":{"amount":"The balance of the token."}},"burn(address,uint256,uint256)":{"details":"The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out","params":{"amount":"The amount of currency to burn","from":"The address to burn the tokens from","id":"The currency address to burn from ERC6909s, as a uint256"}},"clear(address,uint256)":{"details":"This could be used to clear a balance that is considered dust. Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared."},"collectProtocolFees(address,address,uint256)":{"details":"This will revert if the contract is unlocked","params":{"amount":"The amount of currency to withdraw","currency":"The currency to withdraw","recipient":"The address to receive the protocol fees"},"returns":{"amountCollected":"The amount of currency successfully withdrawn"}},"donate((address,address,uint24,int24,address),uint256,uint256,bytes)":{"details":"Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds. Donors should keep this in mind when designing donation mechanisms.This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)). Read the comments in `Pool.swap()` for more information about this.","params":{"amount0":"The amount of currency0 to donate","amount1":"The amount of currency1 to donate","hookData":"The data to pass through to the donate hooks","key":"The key of the pool to donate to"},"returns":{"_0":"BalanceDelta The delta of the caller after the donate"}},"extsload(bytes32)":{"params":{"slot":"Key of slot to sload"},"returns":{"value":"The value of the slot as bytes32"}},"extsload(bytes32,uint256)":{"params":{"nSlots":"Number of slots to load into return value","startSlot":"Key of slot to start sloading from"},"returns":{"values":"List of loaded values."}},"extsload(bytes32[])":{"params":{"slots":"List of slots to SLOAD from."},"returns":{"values":"List of loaded values."}},"exttload(bytes32)":{"params":{"slot":"Key of slot to tload"},"returns":{"value":"The value of the slot as bytes32"}},"exttload(bytes32[])":{"params":{"slots":"List of slots to tload"},"returns":{"values":"List of loaded values"}},"initialize((address,address,uint24,int24,address),uint160)":{"details":"A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee","params":{"key":"The pool key for the pool to initialize","sqrtPriceX96":"The initial square root price"},"returns":{"tick":"The initial tick of the pool"}},"isOperator(address,address)":{"params":{"owner":"The address of the owner.","spender":"The address of the spender."},"returns":{"approved":"The approval status."}},"mint(address,uint256,uint256)":{"details":"The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out","params":{"amount":"The amount of currency to mint","id":"The currency address to mint to ERC6909s, as a uint256","to":"The address to mint the tokens to"}},"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"details":"Poke by calling with a zero liquidityDeltaNote that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued) atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme","params":{"hookData":"The data to pass through to the add/removeLiquidity hooks","key":"The pool to modify liquidity in","params":"The parameters for modifying the liquidity"},"returns":{"callerDelta":"The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable","feesAccrued":"The balance delta of the fees generated in the liquidity range. Returned for informational purposes"}},"protocolFeeController()":{"returns":{"_0":"address The current protocol fee controller address"}},"protocolFeesAccrued(address)":{"params":{"currency":"The currency to check"},"returns":{"amount":"The amount of protocol fees accrued in the currency"}},"setOperator(address,bool)":{"params":{"approved":"The approval status.","operator":"The address of the operator."},"returns":{"_0":"bool True, always"}},"setProtocolFee((address,address,uint24,int24,address),uint24)":{"params":{"key":"The key of the pool to set a protocol fee for","newProtocolFee":"The fee to set"}},"setProtocolFeeController(address)":{"params":{"controller":"The new protocol fee controller"}},"settle()":{"returns":{"paid":"The amount of currency settled"}},"settleFor(address)":{"params":{"recipient":"The address to credit for the payment"},"returns":{"paid":"The amount of currency settled"}},"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)":{"details":"Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified. Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.","params":{"hookData":"The data to pass through to the swap hooks","key":"The pool to swap in","params":"The parameters for swapping"},"returns":{"swapDelta":"The balance delta of the address swapping"}},"sync(address)":{"details":"This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped for native tokens because the amount to settle is determined by the sent value. However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle native funds, this function can be called with the native currency to then be able to settle the native currency"},"take(address,address,uint256)":{"details":"Will revert if the requested amount is not available, consider using `mint` insteadCan also be used as a mechanism for free flash loans","params":{"amount":"The amount of currency to withdraw","currency":"The currency to withdraw from the pool manager","to":"The address to withdraw to"}},"transfer(address,uint256,uint256)":{"params":{"amount":"The amount of the token.","id":"The id of the token.","receiver":"The address of the receiver."},"returns":{"_0":"bool True, always, unless the function reverts"}},"transferFrom(address,address,uint256,uint256)":{"params":{"amount":"The amount of the token.","id":"The id of the token.","receiver":"The address of the receiver.","sender":"The address of the sender."},"returns":{"_0":"bool True, always, unless the function reverts"}},"unlock(bytes)":{"details":"The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`","params":{"data":"Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`"},"returns":{"_0":"The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`"}},"updateDynamicLPFee((address,address,uint24,int24,address),uint24)":{"details":"A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee","params":{"key":"The key of the pool to update dynamic LP fees for","newDynamicLPFee":"The new dynamic pool LP fee"}}},"version":1},"userdoc":{"kind":"user","methods":{"allowance(address,address,uint256)":{"notice":"Spender allowance of an id."},"approve(address,uint256,uint256)":{"notice":"Approves an amount of an id to a spender."},"balanceOf(address,uint256)":{"notice":"Owner balance of an id."},"burn(address,uint256,uint256)":{"notice":"Called by the user to move value from ERC6909 balance"},"clear(address,uint256)":{"notice":"WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently. A call to clear will zero out a positive balance WITHOUT a corresponding transfer."},"collectProtocolFees(address,address,uint256)":{"notice":"Collects the protocol fees for a given recipient and currency, returning the amount collected"},"donate((address,address,uint24,int24,address),uint256,uint256,bytes)":{"notice":"Donate the given currency amounts to the in-range liquidity providers of a pool"},"extsload(bytes32)":{"notice":"Called by external contracts to access granular pool state"},"extsload(bytes32,uint256)":{"notice":"Called by external contracts to access granular pool state"},"extsload(bytes32[])":{"notice":"Called by external contracts to access sparse pool state"},"exttload(bytes32)":{"notice":"Called by external contracts to access transient storage of the contract"},"exttload(bytes32[])":{"notice":"Called by external contracts to access sparse transient pool state"},"initialize((address,address,uint24,int24,address),uint160)":{"notice":"Initialize the state for a given pool ID"},"isOperator(address,address)":{"notice":"Checks if a spender is approved by an owner as an operator"},"mint(address,uint256,uint256)":{"notice":"Called by the user to move value into ERC6909 balance"},"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"notice":"Modify the liquidity for the given pool"},"protocolFeeController()":{"notice":"Returns the current protocol fee controller address"},"protocolFeesAccrued(address)":{"notice":"Given a currency address, returns the protocol fees accrued in that currency"},"setOperator(address,bool)":{"notice":"Sets or removes an operator for the caller."},"setProtocolFee((address,address,uint24,int24,address),uint24)":{"notice":"Sets the protocol fee for the given pool"},"setProtocolFeeController(address)":{"notice":"Sets the protocol fee controller"},"settle()":{"notice":"Called by the user to pay what is owed"},"settleFor(address)":{"notice":"Called by the user to pay on behalf of another address"},"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)":{"notice":"Swap against the given pool"},"sync(address)":{"notice":"Writes the current ERC20 balance of the specified currency to transient storage This is used to checkpoint balances for the manager and derive deltas for the caller."},"take(address,address,uint256)":{"notice":"Called by the user to net out some value owed to the user"},"transfer(address,uint256,uint256)":{"notice":"Transfers an amount of an id from the caller to a receiver."},"transferFrom(address,address,uint256,uint256)":{"notice":"Transfers an amount of an id from a sender to a receiver."},"unlock(bytes)":{"notice":"All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract."},"updateDynamicLPFee((address,address,uint24,int24,address),uint24)":{"notice":"Updates the pools lp fees for the a pool that has enabled dynamic lp fees."}},"version":1}},"settings":{"remappings":["@eigenlayer-middleware/=lib/eigenlayer-middleware/src/","@eigenlayer/=lib/eigenlayer-contracts/src/contracts/","@ensdomains/=lib/v4-core/node_modules/@ensdomains/","@forge-std/=lib/forge-std/src/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v4-core/=lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-core/node_modules/hardhat/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-core/lib/solmate/","v4-core/=lib/v4-core/src/","v4-periphery/=lib/v4-periphery/","zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/v4-core/src/interfaces/IPoolManager.sol":"IPoolManager"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/v4-core/src/interfaces/IExtsload.sol":{"keccak256":"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43","urls":["bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1","dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"],"license":"MIT"},"lib/v4-core/src/interfaces/IExttload.sol":{"keccak256":"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937","urls":["bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8","dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"],"license":"MIT"},"lib/v4-core/src/interfaces/IHooks.sol":{"keccak256":"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d","urls":["bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec","dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G"],"license":"MIT"},"lib/v4-core/src/interfaces/IPoolManager.sol":{"keccak256":"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e","urls":["bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4","dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi"],"license":"MIT"},"lib/v4-core/src/interfaces/IProtocolFees.sol":{"keccak256":"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848","urls":["bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d","dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J"],"license":"MIT"},"lib/v4-core/src/interfaces/external/IERC20Minimal.sol":{"keccak256":"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f","urls":["bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de","dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d"],"license":"MIT"},"lib/v4-core/src/interfaces/external/IERC6909Claims.sol":{"keccak256":"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48","urls":["bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f","dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"],"license":"MIT"},"lib/v4-core/src/libraries/CustomRevert.sol":{"keccak256":"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de","urls":["bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd","dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"],"license":"MIT"},"lib/v4-core/src/libraries/SafeCast.sol":{"keccak256":"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86","urls":["bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59","dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj"],"license":"MIT"},"lib/v4-core/src/types/BalanceDelta.sol":{"keccak256":"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f","urls":["bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9","dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"],"license":"MIT"},"lib/v4-core/src/types/BeforeSwapDelta.sol":{"keccak256":"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78","urls":["bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782","dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"],"license":"MIT"},"lib/v4-core/src/types/Currency.sol":{"keccak256":"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93","urls":["bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01","dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5"],"license":"MIT"},"lib/v4-core/src/types/PoolId.sol":{"keccak256":"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af","urls":["bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918","dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"],"license":"MIT"},"lib/v4-core/src/types/PoolKey.sol":{"keccak256":"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786","urls":["bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639","dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"],"license":"MIT"},"lib/v4-core/src/types/PoolOperation.sol":{"keccak256":"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162","urls":["bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07","dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/v4-core/src/interfaces/IPoolManager.sol","id":65917,"exportedSymbols":{"BalanceDelta":[72369],"Currency":[72583],"IERC6909Claims":[66191],"IExtsload":[65412],"IExttload":[65434],"IHooks":[65633],"IPoolManager":[65916],"IProtocolFees":[65993],"ModifyLiquidityParams":[72945],"PoolId":[72883],"PoolKey":[72929],"SwapParams":[72956]},"nodeType":"SourceUnit","src":"32:12803:52","nodes":[{"id":65635,"nodeType":"PragmaDirective","src":"32:24:52","nodes":[],"literals":["solidity","^","0.8",".24"]},{"id":65637,"nodeType":"ImportDirective","src":"58:47:52","nodes":[],"absolutePath":"lib/v4-core/src/types/Currency.sol","file":"../types/Currency.sol","nameLocation":"-1:-1:-1","scope":65917,"sourceUnit":72878,"symbolAliases":[{"foreign":{"id":65636,"name":"Currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72583,"src":"66:8:52","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65639,"nodeType":"ImportDirective","src":"106:45:52","nodes":[],"absolutePath":"lib/v4-core/src/types/PoolKey.sol","file":"../types/PoolKey.sol","nameLocation":"-1:-1:-1","scope":65917,"sourceUnit":72930,"symbolAliases":[{"foreign":{"id":65638,"name":"PoolKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72929,"src":"114:7:52","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65641,"nodeType":"ImportDirective","src":"152:36:52","nodes":[],"absolutePath":"lib/v4-core/src/interfaces/IHooks.sol","file":"./IHooks.sol","nameLocation":"-1:-1:-1","scope":65917,"sourceUnit":65634,"symbolAliases":[{"foreign":{"id":65640,"name":"IHooks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65633,"src":"160:6:52","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65643,"nodeType":"ImportDirective","src":"189:61:52","nodes":[],"absolutePath":"lib/v4-core/src/interfaces/external/IERC6909Claims.sol","file":"./external/IERC6909Claims.sol","nameLocation":"-1:-1:-1","scope":65917,"sourceUnit":66192,"symbolAliases":[{"foreign":{"id":65642,"name":"IERC6909Claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66191,"src":"197:14:52","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65645,"nodeType":"ImportDirective","src":"251:50:52","nodes":[],"absolutePath":"lib/v4-core/src/interfaces/IProtocolFees.sol","file":"./IProtocolFees.sol","nameLocation":"-1:-1:-1","scope":65917,"sourceUnit":65994,"symbolAliases":[{"foreign":{"id":65644,"name":"IProtocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65993,"src":"259:13:52","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65647,"nodeType":"ImportDirective","src":"302:55:52","nodes":[],"absolutePath":"lib/v4-core/src/types/BalanceDelta.sol","file":"../types/BalanceDelta.sol","nameLocation":"-1:-1:-1","scope":65917,"sourceUnit":72528,"symbolAliases":[{"foreign":{"id":65646,"name":"BalanceDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72369,"src":"310:12:52","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65649,"nodeType":"ImportDirective","src":"358:43:52","nodes":[],"absolutePath":"lib/v4-core/src/types/PoolId.sol","file":"../types/PoolId.sol","nameLocation":"-1:-1:-1","scope":65917,"sourceUnit":72898,"symbolAliases":[{"foreign":{"id":65648,"name":"PoolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72883,"src":"366:6:52","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65651,"nodeType":"ImportDirective","src":"402:42:52","nodes":[],"absolutePath":"lib/v4-core/src/interfaces/IExtsload.sol","file":"./IExtsload.sol","nameLocation":"-1:-1:-1","scope":65917,"sourceUnit":65413,"symbolAliases":[{"foreign":{"id":65650,"name":"IExtsload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65412,"src":"410:9:52","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65653,"nodeType":"ImportDirective","src":"445:42:52","nodes":[],"absolutePath":"lib/v4-core/src/interfaces/IExttload.sol","file":"./IExttload.sol","nameLocation":"-1:-1:-1","scope":65917,"sourceUnit":65435,"symbolAliases":[{"foreign":{"id":65652,"name":"IExttload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65434,"src":"453:9:52","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65656,"nodeType":"ImportDirective","src":"488:77:52","nodes":[],"absolutePath":"lib/v4-core/src/types/PoolOperation.sol","file":"../types/PoolOperation.sol","nameLocation":"-1:-1:-1","scope":65917,"sourceUnit":72957,"symbolAliases":[{"foreign":{"id":65654,"name":"ModifyLiquidityParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72945,"src":"496:21:52","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":65655,"name":"SwapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72956,"src":"519:10:52","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65916,"nodeType":"ContractDefinition","src":"609:12225:52","nodes":[{"id":65668,"nodeType":"ErrorDefinition","src":"781:27:52","nodes":[],"documentation":{"id":65666,"nodeType":"StructuredDocumentation","src":"693:83:52","text":"@notice Thrown when a currency is not netted out after the contract is unlocked"},"errorSelector":"5212cba1","name":"CurrencyNotSettled","nameLocation":"787:18:52","parameters":{"id":65667,"nodeType":"ParameterList","parameters":[],"src":"805:2:52"}},{"id":65671,"nodeType":"ErrorDefinition","src":"889:27:52","nodes":[],"documentation":{"id":65669,"nodeType":"StructuredDocumentation","src":"814:70:52","text":"@notice Thrown when trying to interact with a non-initialized pool"},"errorSelector":"486aa307","name":"PoolNotInitialized","nameLocation":"895:18:52","parameters":{"id":65670,"nodeType":"ParameterList","parameters":[],"src":"913:2:52"}},{"id":65674,"nodeType":"ErrorDefinition","src":"1005:24:52","nodes":[],"documentation":{"id":65672,"nodeType":"StructuredDocumentation","src":"922:78:52","text":"@notice Thrown when unlock is called, but the contract is already unlocked"},"errorSelector":"5090d6c6","name":"AlreadyUnlocked","nameLocation":"1011:15:52","parameters":{"id":65673,"nodeType":"ParameterList","parameters":[],"src":"1026:2:52"}},{"id":65677,"nodeType":"ErrorDefinition","src":"1141:22:52","nodes":[],"documentation":{"id":65675,"nodeType":"StructuredDocumentation","src":"1035:101:52","text":"@notice Thrown when a function is called that requires the contract to be unlocked, but it is not"},"errorSelector":"54e3ca0d","name":"ManagerLocked","nameLocation":"1147:13:52","parameters":{"id":65676,"nodeType":"ParameterList","parameters":[],"src":"1160:2:52"}},{"id":65682,"nodeType":"ErrorDefinition","src":"1270:45:52","nodes":[],"documentation":{"id":65678,"nodeType":"StructuredDocumentation","src":"1169:96:52","text":"@notice Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow"},"errorSelector":"b70024f8","name":"TickSpacingTooLarge","nameLocation":"1276:19:52","parameters":{"id":65681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65680,"mutability":"mutable","name":"tickSpacing","nameLocation":"1302:11:52","nodeType":"VariableDeclaration","scope":65682,"src":"1296:17:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":65679,"name":"int24","nodeType":"ElementaryTypeName","src":"1296:5:52","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1295:19:52"}},{"id":65687,"nodeType":"ErrorDefinition","src":"1407:45:52","nodes":[],"documentation":{"id":65683,"nodeType":"StructuredDocumentation","src":"1321:81:52","text":"@notice Pools must have a positive non-zero tickSpacing passed to #initialize"},"errorSelector":"e9e90588","name":"TickSpacingTooSmall","nameLocation":"1413:19:52","parameters":{"id":65686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65685,"mutability":"mutable","name":"tickSpacing","nameLocation":"1439:11:52","nodeType":"VariableDeclaration","scope":65687,"src":"1433:17:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":65684,"name":"int24","nodeType":"ElementaryTypeName","src":"1433:5:52","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1432:19:52"}},{"id":65694,"nodeType":"ErrorDefinition","src":"1549:72:52","nodes":[],"documentation":{"id":65688,"nodeType":"StructuredDocumentation","src":"1458:86:52","text":"@notice PoolKey must have currencies where address(currency0) < address(currency1)"},"errorSelector":"6e6c9830","name":"CurrenciesOutOfOrderOrEqual","nameLocation":"1555:27:52","parameters":{"id":65693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65690,"mutability":"mutable","name":"currency0","nameLocation":"1591:9:52","nodeType":"VariableDeclaration","scope":65694,"src":"1583:17:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65689,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:52","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65692,"mutability":"mutable","name":"currency1","nameLocation":"1610:9:52","nodeType":"VariableDeclaration","scope":65694,"src":"1602:17:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65691,"name":"address","nodeType":"ElementaryTypeName","src":"1602:7:52","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1582:38:52"}},{"id":65697,"nodeType":"ErrorDefinition","src":"1788:39:52","nodes":[],"documentation":{"id":65695,"nodeType":"StructuredDocumentation","src":"1627:156:52","text":"@notice Thrown when a call to updateDynamicLPFee is made by an address that is not the hook,\n or on a pool that does not have a dynamic swap fee."},"errorSelector":"30d21641","name":"UnauthorizedDynamicLPFeeUpdate","nameLocation":"1794:30:52","parameters":{"id":65696,"nodeType":"ParameterList","parameters":[],"src":"1824:2:52"}},{"id":65700,"nodeType":"ErrorDefinition","src":"1888:31:52","nodes":[],"documentation":{"id":65698,"nodeType":"StructuredDocumentation","src":"1833:50:52","text":"@notice Thrown when trying to swap amount of 0"},"errorSelector":"be8b8507","name":"SwapAmountCannotBeZero","nameLocation":"1894:22:52","parameters":{"id":65699,"nodeType":"ParameterList","parameters":[],"src":"1916:2:52"}},{"id":65703,"nodeType":"ErrorDefinition","src":"2005:27:52","nodes":[],"documentation":{"id":65701,"nodeType":"StructuredDocumentation","src":"1925:75:52","text":"@notice Thrown when native currency is passed to a non native settlement"},"errorSelector":"b0ec849e","name":"NonzeroNativeValue","nameLocation":"2011:18:52","parameters":{"id":65702,"nodeType":"ParameterList","parameters":[],"src":"2029:2:52"}},{"id":65706,"nodeType":"ErrorDefinition","src":"2153:36:52","nodes":[],"documentation":{"id":65704,"nodeType":"StructuredDocumentation","src":"2038:110:52","text":"@notice Thrown when `clear` is called with an amount that is not exactly equal to the open currency delta."},"errorSelector":"bda73abf","name":"MustClearExactPositiveDelta","nameLocation":"2159:27:52","parameters":{"id":65705,"nodeType":"ParameterList","parameters":[],"src":"2186:2:52"}},{"id":65729,"nodeType":"EventDefinition","src":"2908:241:52","nodes":[],"anonymous":false,"documentation":{"id":65707,"nodeType":"StructuredDocumentation","src":"2195:708:52","text":"@notice Emitted when a new pool is initialized\n @param id The abi encoded hash of the pool key struct for the new pool\n @param currency0 The first currency of the pool by address sort order\n @param currency1 The second currency of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param hooks The hooks contract address for the pool, or address(0) if none\n @param sqrtPriceX96 The price of the pool on initialization\n @param tick The initial tick of the pool corresponding to the initialized price"},"eventSelector":"dd466e674ea557f56295e2d0218a125ea4b4f0f6f3307b95f85e6110838d6438","name":"Initialize","nameLocation":"2914:10:52","parameters":{"id":65728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65710,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"2949:2:52","nodeType":"VariableDeclaration","scope":65729,"src":"2934:17:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PoolId_$72883","typeString":"PoolId"},"typeName":{"id":65709,"nodeType":"UserDefinedTypeName","pathNode":{"id":65708,"name":"PoolId","nameLocations":["2934:6:52"],"nodeType":"IdentifierPath","referencedDeclaration":72883,"src":"2934:6:52"},"referencedDeclaration":72883,"src":"2934:6:52","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PoolId_$72883","typeString":"PoolId"}},"visibility":"internal"},{"constant":false,"id":65713,"indexed":true,"mutability":"mutable","name":"currency0","nameLocation":"2978:9:52","nodeType":"VariableDeclaration","scope":65729,"src":"2961:26:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Currency_$72583","typeString":"Currency"},"typeName":{"id":65712,"nodeType":"UserDefinedTypeName","pathNode":{"id":65711,"name":"Currency","nameLocations":["2961:8:52"],"nodeType":"IdentifierPath","referencedDeclaration":72583,"src":"2961:8:52"},"referencedDeclaration":72583,"src":"2961:8:52","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Currency_$72583","typeString":"Currency"}},"visibility":"internal"},{"constant":false,"id":65716,"indexed":true,"mutability":"mutable","name":"currency1","nameLocation":"3014:9:52","nodeType":"VariableDeclaration","scope":65729,"src":"2997:26:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Currency_$72583","typeString":"Currency"},"typeName":{"id":65715,"nodeType":"UserDefinedTypeName","pathNode":{"id":65714,"name":"Currency","nameLocations":["2997:8:52"],"nodeType":"IdentifierPath","referencedDeclaration":72583,"src":"2997:8:52"},"referencedDeclaration":72583,"src":"2997:8:52","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Currency_$72583","typeString":"Currency"}},"visibility":"internal"},{"constant":false,"id":65718,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"3040:3:52","nodeType":"VariableDeclaration","scope":65729,"src":"3033:10:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":65717,"name":"uint24","nodeType":"ElementaryTypeName","src":"3033:6:52","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":65720,"indexed":false,"mutability":"mutable","name":"tickSpacing","nameLocation":"3059:11:52","nodeType":"VariableDeclaration","scope":65729,"src":"3053:17:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":65719,"name":"int24","nodeType":"ElementaryTypeName","src":"3053:5:52","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":65723,"indexed":false,"mutability":"mutable","name":"hooks","nameLocation":"3087:5:52","nodeType":"VariableDeclaration","scope":65729,"src":"3080:12:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHooks_$65633","typeString":"contract IHooks"},"typeName":{"id":65722,"nodeType":"UserDefinedTypeName","pathNode":{"id":65721,"name":"IHooks","nameLocations":["3080:6:52"],"nodeType":"IdentifierPath","referencedDeclaration":65633,"src":"3080:6:52"},"referencedDeclaration":65633,"src":"3080:6:52","typeDescriptions":{"typeIdentifier":"t_contract$_IHooks_$65633","typeString":"contract IHooks"}},"visibility":"internal"},{"constant":false,"id":65725,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"3110:12:52","nodeType":"VariableDeclaration","scope":65729,"src":"3102:20:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":65724,"name":"uint160","nodeType":"ElementaryTypeName","src":"3102:7:52","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":65727,"indexed":false,"mutability":"mutable","name":"tick","nameLocation":"3138:4:52","nodeType":"VariableDeclaration","scope":65729,"src":"3132:10:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":65726,"name":"int24","nodeType":"ElementaryTypeName","src":"3132:5:52","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2924:224:52"}},{"id":65745,"nodeType":"EventDefinition","src":"3619:150:52","nodes":[],"anonymous":false,"documentation":{"id":65730,"nodeType":"StructuredDocumentation","src":"3155:459:52","text":"@notice Emitted when a liquidity position is modified\n @param id The abi encoded hash of the pool key struct for the pool that was modified\n @param sender The address that modified the pool\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param liquidityDelta The amount of liquidity that was added or removed\n @param salt The extra data to make positions unique"},"eventSelector":"f208f4912782fd25c7f114ca3723a2d5dd6f3bcc3ac8db5af63baa85f711d5ec","name":"ModifyLiquidity","nameLocation":"3625:15:52","parameters":{"id":65744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65733,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"3665:2:52","nodeType":"VariableDeclaration","scope":65745,"src":"3650:17:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PoolId_$72883","typeString":"PoolId"},"typeName":{"id":65732,"nodeType":"UserDefinedTypeName","pathNode":{"id":65731,"name":"PoolId","nameLocations":["3650:6:52"],"nodeType":"IdentifierPath","referencedDeclaration":72883,"src":"3650:6:52"},"referencedDeclaration":72883,"src":"3650:6:52","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PoolId_$72883","typeString":"PoolId"}},"visibility":"internal"},{"constant":false,"id":65735,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3685:6:52","nodeType":"VariableDeclaration","scope":65745,"src":"3669:22:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65734,"name":"address","nodeType":"ElementaryTypeName","src":"3669:7:52","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65737,"indexed":false,"mutability":"mutable","name":"tickLower","nameLocation":"3699:9:52","nodeType":"VariableDeclaration","scope":65745,"src":"3693:15:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":65736,"name":"int24","nodeType":"ElementaryTypeName","src":"3693:5:52","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":65739,"indexed":false,"mutability":"mutable","name":"tickUpper","nameLocation":"3716:9:52","nodeType":"VariableDeclaration","scope":65745,"src":"3710:15:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":65738,"name":"int24","nodeType":"ElementaryTypeName","src":"3710:5:52","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":65741,"indexed":false,"mutability":"mutable","name":"liquidityDelta","nameLocation":"3734:14:52","nodeType":"VariableDeclaration","scope":65745,"src":"3727:21:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":65740,"name":"int256","nodeType":"ElementaryTypeName","src":"3727:6:52","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":65743,"indexed":false,"mutability":"mutable","name":"salt","nameLocation":"3758:4:52","nodeType":"VariableDeclaration","scope":65745,"src":"3750:12:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3750:7:52","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3640:128:52"}},{"id":65765,"nodeType":"EventDefinition","src":"4454:221:52","nodes":[],"anonymous":false,"documentation":{"id":65746,"nodeType":"StructuredDocumentation","src":"3775:674:52","text":"@notice Emitted for swaps between currency0 and currency1\n @param id The abi encoded hash of the pool key struct for the pool that was modified\n @param sender The address that initiated the swap call, and that received the callback\n @param amount0 The delta of the currency0 balance of the pool\n @param amount1 The delta of the currency1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of the price of the pool after the swap\n @param fee The swap fee in hundredths of a bip"},"eventSelector":"40e9cecb9f5f1f1c5b9c97dec2917b7ee92e57ba5563708daca94dd84ad7112f","name":"Swap","nameLocation":"4460:4:52","parameters":{"id":65764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65749,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"4489:2:52","nodeType":"VariableDeclaration","scope":65765,"src":"4474:17:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PoolId_$72883","typeString":"PoolId"},"typeName":{"id":65748,"nodeType":"UserDefinedTypeName","pathNode":{"id":65747,"name":"PoolId","nameLocations":["4474:6:52"],"nodeType":"IdentifierPath","referencedDeclaration":72883,"src":"4474:6:52"},"referencedDeclaration":72883,"src":"4474:6:52","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PoolId_$72883","typeString":"PoolId"}},"visibility":"internal"},{"constant":false,"id":65751,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"4517:6:52","nodeType":"VariableDeclaration","scope":65765,"src":"4501:22:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65750,"name":"address","nodeType":"ElementaryTypeName","src":"4501:7:52","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65753,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"4540:7:52","nodeType":"VariableDeclaration","scope":65765,"src":"4533:14:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":65752,"name":"int128","nodeType":"ElementaryTypeName","src":"4533:6:52","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":65755,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"4564:7:52","nodeType":"VariableDeclaration","scope":65765,"src":"4557:14:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":65754,"name":"int128","nodeType":"ElementaryTypeName","src":"4557:6:52","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":65757,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"4589:12:52","nodeType":"VariableDeclaration","scope":65765,"src":"4581:20:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":65756,"name":"uint160","nodeType":"ElementaryTypeName","src":"4581:7:52","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":65759,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"4619:9:52","nodeType":"VariableDeclaration","scope":65765,"src":"4611:17:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":65758,"name":"uint128","nodeType":"ElementaryTypeName","src":"4611:7:52","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":65761,"indexed":false,"mutability":"mutable","name":"tick","nameLocation":"4644:4:52","nodeType":"VariableDeclaration","scope":65765,"src":"4638:10:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":65760,"name":"int24","nodeType":"ElementaryTypeName","src":"4638:5:52","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":65763,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"4665:3:52","nodeType":"VariableDeclaration","scope":65765,"src":"4658:10:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":65762,"name":"uint24","nodeType":"ElementaryTypeName","src":"4658:6:52","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"4464:210:52"}},{"id":65777,"nodeType":"EventDefinition","src":"4989:90:52","nodes":[],"anonymous":false,"documentation":{"id":65766,"nodeType":"StructuredDocumentation","src":"4681:303:52","text":"@notice Emitted for donations\n @param id The abi encoded hash of the pool key struct for the pool that was donated to\n @param sender The address that initiated the donate call\n @param amount0 The amount donated in currency0\n @param amount1 The amount donated in currency1"},"eventSelector":"29ef05caaff9404b7cb6d1c0e9bbae9eaa7ab2541feba1a9c4248594c08156cb","name":"Donate","nameLocation":"4995:6:52","parameters":{"id":65776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65769,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"5017:2:52","nodeType":"VariableDeclaration","scope":65777,"src":"5002:17:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PoolId_$72883","typeString":"PoolId"},"typeName":{"id":65768,"nodeType":"UserDefinedTypeName","pathNode":{"id":65767,"name":"PoolId","nameLocations":["5002:6:52"],"nodeType":"IdentifierPath","referencedDeclaration":72883,"src":"5002:6:52"},"referencedDeclaration":72883,"src":"5002:6:52","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PoolId_$72883","typeString":"PoolId"}},"visibility":"internal"},{"constant":false,"id":65771,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"5037:6:52","nodeType":"VariableDeclaration","scope":65777,"src":"5021:22:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65770,"name":"address","nodeType":"ElementaryTypeName","src":"5021:7:52","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65773,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"5053:7:52","nodeType":"VariableDeclaration","scope":65777,"src":"5045:15:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65772,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:52","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":65775,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"5070:7:52","nodeType":"VariableDeclaration","scope":65777,"src":"5062:15:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65774,"name":"uint256","nodeType":"ElementaryTypeName","src":"5062:7:52","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5001:77:52"}},{"id":65785,"nodeType":"FunctionDefinition","src":"5657:69:52","nodes":[],"documentation":{"id":65778,"nodeType":"StructuredDocumentation","src":"5085:567:52","text":"@notice All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement\n `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract.\n @dev The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`\n @param data Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`\n @return The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`"},"functionSelector":"48c89491","implemented":false,"kind":"function","modifiers":[],"name":"unlock","nameLocation":"5666:6:52","parameters":{"id":65781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65780,"mutability":"mutable","name":"data","nameLocation":"5688:4:52","nodeType":"VariableDeclaration","scope":65785,"src":"5673:19:52","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65779,"name":"bytes","nodeType":"ElementaryTypeName","src":"5673:5:52","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5672:21:52"},"returnParameters":{"id":65784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65785,"src":"5712:12:52","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":65782,"name":"bytes","nodeType":"ElementaryTypeName","src":"5712:5:52","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5711:14:52"},"scope":65916,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65796,"nodeType":"FunctionDefinition","src":"6093:92:52","nodes":[],"documentation":{"id":65786,"nodeType":"StructuredDocumentation","src":"5732:356:52","text":"@notice Initialize the state for a given pool ID\n @dev A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\n @param key The pool key for the pool to initialize\n @param sqrtPriceX96 The initial square root price\n @return tick The initial tick of the pool"},"functionSelector":"6276cbbe","implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"6102:10:52","parameters":{"id":65792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65789,"mutability":"mutable","name":"key","nameLocation":"6128:3:52","nodeType":"VariableDeclaration","scope":65796,"src":"6113:18:52","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72929_memory_ptr","typeString":"struct PoolKey"},"typeName":{"id":65788,"nodeType":"UserDefinedTypeName","pathNode":{"id":65787,"name":"PoolKey","nameLocations":["6113:7:52"],"nodeType":"IdentifierPath","referencedDeclaration":72929,"src":"6113:7:52"},"referencedDeclaration":72929,"src":"6113:7:52","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72929_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65791,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"6141:12:52","nodeType":"VariableDeclaration","scope":65796,"src":"6133:20:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":65790,"name":"uint160","nodeType":"ElementaryTypeName","src":"6133:7:52","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"6112:42:52"},"returnParameters":{"id":65795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65794,"mutability":"mutable","name":"tick","nameLocation":"6179:4:52","nodeType":"VariableDeclaration","scope":65796,"src":"6173:10:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":65793,"name":"int24","nodeType":"ElementaryTypeName","src":"6173:5:52","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"6172:12:52"},"scope":65916,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65814,"nodeType":"FunctionDefinition","src":"7181:193:52","nodes":[],"documentation":{"id":65797,"nodeType":"StructuredDocumentation","src":"6191:985:52","text":"@notice Modify the liquidity for the given pool\n @dev Poke by calling with a zero liquidityDelta\n @param key The pool to modify liquidity in\n @param params The parameters for modifying the liquidity\n @param hookData The data to pass through to the add/removeLiquidity hooks\n @return callerDelta The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable\n @return feesAccrued The balance delta of the fees generated in the liquidity range. Returned for informational purposes\n @dev Note that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value\n For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued)\n atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme"},"functionSelector":"5a6bcfda","implemented":false,"kind":"function","modifiers":[],"name":"modifyLiquidity","nameLocation":"7190:15:52","parameters":{"id":65806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65800,"mutability":"mutable","name":"key","nameLocation":"7221:3:52","nodeType":"VariableDeclaration","scope":65814,"src":"7206:18:52","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72929_memory_ptr","typeString":"struct PoolKey"},"typeName":{"id":65799,"nodeType":"UserDefinedTypeName","pathNode":{"id":65798,"name":"PoolKey","nameLocations":["7206:7:52"],"nodeType":"IdentifierPath","referencedDeclaration":72929,"src":"7206:7:52"},"referencedDeclaration":72929,"src":"7206:7:52","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72929_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65803,"mutability":"mutable","name":"params","nameLocation":"7255:6:52","nodeType":"VariableDeclaration","scope":65814,"src":"7226:35:52","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyLiquidityParams_$72945_memory_ptr","typeString":"struct ModifyLiquidityParams"},"typeName":{"id":65802,"nodeType":"UserDefinedTypeName","pathNode":{"id":65801,"name":"ModifyLiquidityParams","nameLocations":["7226:21:52"],"nodeType":"IdentifierPath","referencedDeclaration":72945,"src":"7226:21:52"},"referencedDeclaration":72945,"src":"7226:21:52","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyLiquidityParams_$72945_storage_ptr","typeString":"struct ModifyLiquidityParams"}},"visibility":"internal"},{"constant":false,"id":65805,"mutability":"mutable","name":"hookData","nameLocation":"7278:8:52","nodeType":"VariableDeclaration","scope":65814,"src":"7263:23:52","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65804,"name":"bytes","nodeType":"ElementaryTypeName","src":"7263:5:52","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7205:82:52"},"returnParameters":{"id":65813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65809,"mutability":"mutable","name":"callerDelta","nameLocation":"7335:11:52","nodeType":"VariableDeclaration","scope":65814,"src":"7322:24:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72369","typeString":"BalanceDelta"},"typeName":{"id":65808,"nodeType":"UserDefinedTypeName","pathNode":{"id":65807,"name":"BalanceDelta","nameLocations":["7322:12:52"],"nodeType":"IdentifierPath","referencedDeclaration":72369,"src":"7322:12:52"},"referencedDeclaration":72369,"src":"7322:12:52","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72369","typeString":"BalanceDelta"}},"visibility":"internal"},{"constant":false,"id":65812,"mutability":"mutable","name":"feesAccrued","nameLocation":"7361:11:52","nodeType":"VariableDeclaration","scope":65814,"src":"7348:24:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72369","typeString":"BalanceDelta"},"typeName":{"id":65811,"nodeType":"UserDefinedTypeName","pathNode":{"id":65810,"name":"BalanceDelta","nameLocations":["7348:12:52"],"nodeType":"IdentifierPath","referencedDeclaration":72369,"src":"7348:12:52"},"referencedDeclaration":72369,"src":"7348:12:52","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72369","typeString":"BalanceDelta"}},"visibility":"internal"}],"src":"7321:52:52"},"scope":65916,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65829,"nodeType":"FunctionDefinition","src":"8028:143:52","nodes":[],"documentation":{"id":65815,"nodeType":"StructuredDocumentation","src":"7380:643:52","text":"@notice Swap against the given pool\n @param key The pool to swap in\n @param params The parameters for swapping\n @param hookData The data to pass through to the swap hooks\n @return swapDelta The balance delta of the address swapping\n @dev Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified.\n Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG\n the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta."},"functionSelector":"f3cd914c","implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"8037:4:52","parameters":{"id":65824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65818,"mutability":"mutable","name":"key","nameLocation":"8057:3:52","nodeType":"VariableDeclaration","scope":65829,"src":"8042:18:52","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72929_memory_ptr","typeString":"struct PoolKey"},"typeName":{"id":65817,"nodeType":"UserDefinedTypeName","pathNode":{"id":65816,"name":"PoolKey","nameLocations":["8042:7:52"],"nodeType":"IdentifierPath","referencedDeclaration":72929,"src":"8042:7:52"},"referencedDeclaration":72929,"src":"8042:7:52","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72929_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65821,"mutability":"mutable","name":"params","nameLocation":"8080:6:52","nodeType":"VariableDeclaration","scope":65829,"src":"8062:24:52","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$72956_memory_ptr","typeString":"struct SwapParams"},"typeName":{"id":65820,"nodeType":"UserDefinedTypeName","pathNode":{"id":65819,"name":"SwapParams","nameLocations":["8062:10:52"],"nodeType":"IdentifierPath","referencedDeclaration":72956,"src":"8062:10:52"},"referencedDeclaration":72956,"src":"8062:10:52","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$72956_storage_ptr","typeString":"struct SwapParams"}},"visibility":"internal"},{"constant":false,"id":65823,"mutability":"mutable","name":"hookData","nameLocation":"8103:8:52","nodeType":"VariableDeclaration","scope":65829,"src":"8088:23:52","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65822,"name":"bytes","nodeType":"ElementaryTypeName","src":"8088:5:52","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8041:71:52"},"returnParameters":{"id":65828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65827,"mutability":"mutable","name":"swapDelta","nameLocation":"8160:9:52","nodeType":"VariableDeclaration","scope":65829,"src":"8147:22:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72369","typeString":"BalanceDelta"},"typeName":{"id":65826,"nodeType":"UserDefinedTypeName","pathNode":{"id":65825,"name":"BalanceDelta","nameLocations":["8147:12:52"],"nodeType":"IdentifierPath","referencedDeclaration":72369,"src":"8147:12:52"},"referencedDeclaration":72369,"src":"8147:12:52","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72369","typeString":"BalanceDelta"}},"visibility":"internal"}],"src":"8146:24:52"},"scope":65916,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65845,"nodeType":"FunctionDefinition","src":"9234:143:52","nodes":[],"documentation":{"id":65830,"nodeType":"StructuredDocumentation","src":"8177:1052:52","text":"@notice Donate the given currency amounts to the in-range liquidity providers of a pool\n @dev Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds.\n Donors should keep this in mind when designing donation mechanisms.\n @dev This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of\n a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to\n `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)).\n Read the comments in `Pool.swap()` for more information about this.\n @param key The key of the pool to donate to\n @param amount0 The amount of currency0 to donate\n @param amount1 The amount of currency1 to donate\n @param hookData The data to pass through to the donate hooks\n @return BalanceDelta The delta of the caller after the donate"},"functionSelector":"234266d7","implemented":false,"kind":"function","modifiers":[],"name":"donate","nameLocation":"9243:6:52","parameters":{"id":65840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65833,"mutability":"mutable","name":"key","nameLocation":"9265:3:52","nodeType":"VariableDeclaration","scope":65845,"src":"9250:18:52","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72929_memory_ptr","typeString":"struct PoolKey"},"typeName":{"id":65832,"nodeType":"UserDefinedTypeName","pathNode":{"id":65831,"name":"PoolKey","nameLocations":["9250:7:52"],"nodeType":"IdentifierPath","referencedDeclaration":72929,"src":"9250:7:52"},"referencedDeclaration":72929,"src":"9250:7:52","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72929_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65835,"mutability":"mutable","name":"amount0","nameLocation":"9278:7:52","nodeType":"VariableDeclaration","scope":65845,"src":"9270:15:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65834,"name":"uint256","nodeType":"ElementaryTypeName","src":"9270:7:52","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":65837,"mutability":"mutable","name":"amount1","nameLocation":"9295:7:52","nodeType":"VariableDeclaration","scope":65845,"src":"9287:15:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65836,"name":"uint256","nodeType":"ElementaryTypeName","src":"9287:7:52","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":65839,"mutability":"mutable","name":"hookData","nameLocation":"9319:8:52","nodeType":"VariableDeclaration","scope":65845,"src":"9304:23:52","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":65838,"name":"bytes","nodeType":"ElementaryTypeName","src":"9304:5:52","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9249:79:52"},"returnParameters":{"id":65844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65845,"src":"9363:12:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72369","typeString":"BalanceDelta"},"typeName":{"id":65842,"nodeType":"UserDefinedTypeName","pathNode":{"id":65841,"name":"BalanceDelta","nameLocations":["9363:12:52"],"nodeType":"IdentifierPath","referencedDeclaration":72369,"src":"9363:12:52"},"referencedDeclaration":72369,"src":"9363:12:52","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$72369","typeString":"BalanceDelta"}},"visibility":"internal"}],"src":"9362:14:52"},"scope":65916,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65852,"nodeType":"FunctionDefinition","src":"9993:42:52","nodes":[],"documentation":{"id":65846,"nodeType":"StructuredDocumentation","src":"9383:605:52","text":"@notice Writes the current ERC20 balance of the specified currency to transient storage\n This is used to checkpoint balances for the manager and derive deltas for the caller.\n @dev This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped\n for native tokens because the amount to settle is determined by the sent value.\n However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle\n native funds, this function can be called with the native currency to then be able to settle the native currency"},"functionSelector":"a5841194","implemented":false,"kind":"function","modifiers":[],"name":"sync","nameLocation":"10002:4:52","parameters":{"id":65850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65849,"mutability":"mutable","name":"currency","nameLocation":"10016:8:52","nodeType":"VariableDeclaration","scope":65852,"src":"10007:17:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Currency_$72583","typeString":"Currency"},"typeName":{"id":65848,"nodeType":"UserDefinedTypeName","pathNode":{"id":65847,"name":"Currency","nameLocations":["10007:8:52"],"nodeType":"IdentifierPath","referencedDeclaration":72583,"src":"10007:8:52"},"referencedDeclaration":72583,"src":"10007:8:52","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Currency_$72583","typeString":"Currency"}},"visibility":"internal"}],"src":"10006:19:52"},"returnParameters":{"id":65851,"nodeType":"ParameterList","parameters":[],"src":"10034:0:52"},"scope":65916,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65863,"nodeType":"FunctionDefinition","src":"10451:70:52","nodes":[],"documentation":{"id":65853,"nodeType":"StructuredDocumentation","src":"10041:405:52","text":"@notice Called by the user to net out some value owed to the user\n @dev Will revert if the requested amount is not available, consider using `mint` instead\n @dev Can also be used as a mechanism for free flash loans\n @param currency The currency to withdraw from the pool manager\n @param to The address to withdraw to\n @param amount The amount of currency to withdraw"},"functionSelector":"0b0d9c09","implemented":false,"kind":"function","modifiers":[],"name":"take","nameLocation":"10460:4:52","parameters":{"id":65861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65856,"mutability":"mutable","name":"currency","nameLocation":"10474:8:52","nodeType":"VariableDeclaration","scope":65863,"src":"10465:17:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Currency_$72583","typeString":"Currency"},"typeName":{"id":65855,"nodeType":"UserDefinedTypeName","pathNode":{"id":65854,"name":"Currency","nameLocations":["10465:8:52"],"nodeType":"IdentifierPath","referencedDeclaration":72583,"src":"10465:8:52"},"referencedDeclaration":72583,"src":"10465:8:52","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Currency_$72583","typeString":"Currency"}},"visibility":"internal"},{"constant":false,"id":65858,"mutability":"mutable","name":"to","nameLocation":"10492:2:52","nodeType":"VariableDeclaration","scope":65863,"src":"10484:10:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65857,"name":"address","nodeType":"ElementaryTypeName","src":"10484:7:52","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65860,"mutability":"mutable","name":"amount","nameLocation":"10504:6:52","nodeType":"VariableDeclaration","scope":65863,"src":"10496:14:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65859,"name":"uint256","nodeType":"ElementaryTypeName","src":"10496:7:52","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10464:47:52"},"returnParameters":{"id":65862,"nodeType":"ParameterList","parameters":[],"src":"10520:0:52"},"scope":65916,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65869,"nodeType":"FunctionDefinition","src":"10634:58:52","nodes":[],"documentation":{"id":65864,"nodeType":"StructuredDocumentation","src":"10527:102:52","text":"@notice Called by the user to pay what is owed\n @return paid The amount of currency settled"},"functionSelector":"11da60b4","implemented":false,"kind":"function","modifiers":[],"name":"settle","nameLocation":"10643:6:52","parameters":{"id":65865,"nodeType":"ParameterList","parameters":[],"src":"10649:2:52"},"returnParameters":{"id":65868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65867,"mutability":"mutable","name":"paid","nameLocation":"10686:4:52","nodeType":"VariableDeclaration","scope":65869,"src":"10678:12:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65866,"name":"uint256","nodeType":"ElementaryTypeName","src":"10678:7:52","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10677:14:52"},"scope":65916,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":65877,"nodeType":"FunctionDefinition","src":"10884:78:52","nodes":[],"documentation":{"id":65870,"nodeType":"StructuredDocumentation","src":"10698:181:52","text":"@notice Called by the user to pay on behalf of another address\n @param recipient The address to credit for the payment\n @return paid The amount of currency settled"},"functionSelector":"3dd45adb","implemented":false,"kind":"function","modifiers":[],"name":"settleFor","nameLocation":"10893:9:52","parameters":{"id":65873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65872,"mutability":"mutable","name":"recipient","nameLocation":"10911:9:52","nodeType":"VariableDeclaration","scope":65877,"src":"10903:17:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65871,"name":"address","nodeType":"ElementaryTypeName","src":"10903:7:52","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10902:19:52"},"returnParameters":{"id":65876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65875,"mutability":"mutable","name":"paid","nameLocation":"10956:4:52","nodeType":"VariableDeclaration","scope":65877,"src":"10948:12:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65874,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:52","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10947:14:52"},"scope":65916,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":65886,"nodeType":"FunctionDefinition","src":"11398:59:52","nodes":[],"documentation":{"id":65878,"nodeType":"StructuredDocumentation","src":"10968:425:52","text":"@notice WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently.\n A call to clear will zero out a positive balance WITHOUT a corresponding transfer.\n @dev This could be used to clear a balance that is considered dust.\n Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared."},"functionSelector":"80f0b44c","implemented":false,"kind":"function","modifiers":[],"name":"clear","nameLocation":"11407:5:52","parameters":{"id":65884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65881,"mutability":"mutable","name":"currency","nameLocation":"11422:8:52","nodeType":"VariableDeclaration","scope":65886,"src":"11413:17:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Currency_$72583","typeString":"Currency"},"typeName":{"id":65880,"nodeType":"UserDefinedTypeName","pathNode":{"id":65879,"name":"Currency","nameLocations":["11413:8:52"],"nodeType":"IdentifierPath","referencedDeclaration":72583,"src":"11413:8:52"},"referencedDeclaration":72583,"src":"11413:8:52","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Currency_$72583","typeString":"Currency"}},"visibility":"internal"},{"constant":false,"id":65883,"mutability":"mutable","name":"amount","nameLocation":"11440:6:52","nodeType":"VariableDeclaration","scope":65886,"src":"11432:14:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65882,"name":"uint256","nodeType":"ElementaryTypeName","src":"11432:7:52","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11412:35:52"},"returnParameters":{"id":65885,"nodeType":"ParameterList","parameters":[],"src":"11456:0:52"},"scope":65916,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65896,"nodeType":"FunctionDefinition","src":"11856:63:52","nodes":[],"documentation":{"id":65887,"nodeType":"StructuredDocumentation","src":"11463:388:52","text":"@notice Called by the user to move value into ERC6909 balance\n @param to The address to mint the tokens to\n @param id The currency address to mint to ERC6909s, as a uint256\n @param amount The amount of currency to mint\n @dev The id is converted to a uint160 to correspond to a currency address\n If the upper 12 bytes are not 0, they will be 0-ed out"},"functionSelector":"156e29f6","implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"11865:4:52","parameters":{"id":65894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65889,"mutability":"mutable","name":"to","nameLocation":"11878:2:52","nodeType":"VariableDeclaration","scope":65896,"src":"11870:10:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65888,"name":"address","nodeType":"ElementaryTypeName","src":"11870:7:52","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65891,"mutability":"mutable","name":"id","nameLocation":"11890:2:52","nodeType":"VariableDeclaration","scope":65896,"src":"11882:10:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65890,"name":"uint256","nodeType":"ElementaryTypeName","src":"11882:7:52","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":65893,"mutability":"mutable","name":"amount","nameLocation":"11902:6:52","nodeType":"VariableDeclaration","scope":65896,"src":"11894:14:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65892,"name":"uint256","nodeType":"ElementaryTypeName","src":"11894:7:52","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11869:40:52"},"returnParameters":{"id":65895,"nodeType":"ParameterList","parameters":[],"src":"11918:0:52"},"scope":65916,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65906,"nodeType":"FunctionDefinition","src":"12324:65:52","nodes":[],"documentation":{"id":65897,"nodeType":"StructuredDocumentation","src":"11925:394:52","text":"@notice Called by the user to move value from ERC6909 balance\n @param from The address to burn the tokens from\n @param id The currency address to burn from ERC6909s, as a uint256\n @param amount The amount of currency to burn\n @dev The id is converted to a uint160 to correspond to a currency address\n If the upper 12 bytes are not 0, they will be 0-ed out"},"functionSelector":"f5298aca","implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"12333:4:52","parameters":{"id":65904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65899,"mutability":"mutable","name":"from","nameLocation":"12346:4:52","nodeType":"VariableDeclaration","scope":65906,"src":"12338:12:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65898,"name":"address","nodeType":"ElementaryTypeName","src":"12338:7:52","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65901,"mutability":"mutable","name":"id","nameLocation":"12360:2:52","nodeType":"VariableDeclaration","scope":65906,"src":"12352:10:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65900,"name":"uint256","nodeType":"ElementaryTypeName","src":"12352:7:52","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":65903,"mutability":"mutable","name":"amount","nameLocation":"12372:6:52","nodeType":"VariableDeclaration","scope":65906,"src":"12364:14:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65902,"name":"uint256","nodeType":"ElementaryTypeName","src":"12364:7:52","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12337:42:52"},"returnParameters":{"id":65905,"nodeType":"ParameterList","parameters":[],"src":"12388:0:52"},"scope":65916,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":65915,"nodeType":"FunctionDefinition","src":"12751:81:52","nodes":[],"documentation":{"id":65907,"nodeType":"StructuredDocumentation","src":"12395:351:52","text":"@notice Updates the pools lp fees for the a pool that has enabled dynamic lp fees.\n @dev A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\n @param key The key of the pool to update dynamic LP fees for\n @param newDynamicLPFee The new dynamic pool LP fee"},"functionSelector":"52759651","implemented":false,"kind":"function","modifiers":[],"name":"updateDynamicLPFee","nameLocation":"12760:18:52","parameters":{"id":65913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65910,"mutability":"mutable","name":"key","nameLocation":"12794:3:52","nodeType":"VariableDeclaration","scope":65915,"src":"12779:18:52","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72929_memory_ptr","typeString":"struct PoolKey"},"typeName":{"id":65909,"nodeType":"UserDefinedTypeName","pathNode":{"id":65908,"name":"PoolKey","nameLocations":["12779:7:52"],"nodeType":"IdentifierPath","referencedDeclaration":72929,"src":"12779:7:52"},"referencedDeclaration":72929,"src":"12779:7:52","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$72929_storage_ptr","typeString":"struct PoolKey"}},"visibility":"internal"},{"constant":false,"id":65912,"mutability":"mutable","name":"newDynamicLPFee","nameLocation":"12806:15:52","nodeType":"VariableDeclaration","scope":65915,"src":"12799:22:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":65911,"name":"uint24","nodeType":"ElementaryTypeName","src":"12799:6:52","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"12778:44:52"},"returnParameters":{"id":65914,"nodeType":"ParameterList","parameters":[],"src":"12831:0:52"},"scope":65916,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":65658,"name":"IProtocolFees","nameLocations":["635:13:52"],"nodeType":"IdentifierPath","referencedDeclaration":65993,"src":"635:13:52"},"id":65659,"nodeType":"InheritanceSpecifier","src":"635:13:52"},{"baseName":{"id":65660,"name":"IERC6909Claims","nameLocations":["650:14:52"],"nodeType":"IdentifierPath","referencedDeclaration":66191,"src":"650:14:52"},"id":65661,"nodeType":"InheritanceSpecifier","src":"650:14:52"},{"baseName":{"id":65662,"name":"IExtsload","nameLocations":["666:9:52"],"nodeType":"IdentifierPath","referencedDeclaration":65412,"src":"666:9:52"},"id":65663,"nodeType":"InheritanceSpecifier","src":"666:9:52"},{"baseName":{"id":65664,"name":"IExttload","nameLocations":["677:9:52"],"nodeType":"IdentifierPath","referencedDeclaration":65434,"src":"677:9:52"},"id":65665,"nodeType":"InheritanceSpecifier","src":"677:9:52"}],"canonicalName":"IPoolManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":65657,"nodeType":"StructuredDocumentation","src":"567:42:52","text":"@notice Interface for the PoolManager"},"fullyImplemented":false,"linearizedBaseContracts":[65916,65434,65412,66191,65993],"name":"IPoolManager","nameLocation":"619:12:52","scope":65917,"usedErrors":[65668,65671,65674,65677,65682,65687,65694,65697,65700,65703,65706,65930,65933,65936],"usedEvents":[65729,65745,65765,65777,65941,65949,66088,66098,66110]}],"license":"MIT"},"id":52}