{"abi":[{"type":"constructor","inputs":[{"name":"_poolManager","type":"address","internalType":"contract IPoolManager"},{"name":"_serviceManager","type":"address","internalType":"address"},{"name":"_orderVault","type":"address","internalType":"contract IOrderVault"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterAddLiquidity","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"","type":"tuple","internalType":"struct IPoolManager.ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"","type":"int256","internalType":"BalanceDelta"},{"name":"","type":"int256","internalType":"BalanceDelta"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int256","internalType":"BalanceDelta"}],"stateMutability":"pure"},{"type":"function","name":"afterDonate","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"pure"},{"type":"function","name":"afterInitialize","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"","type":"uint160","internalType":"uint160"},{"name":"","type":"int24","internalType":"int24"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"pure"},{"type":"function","name":"afterRemoveLiquidity","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"","type":"tuple","internalType":"struct IPoolManager.ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"","type":"int256","internalType":"BalanceDelta"},{"name":"","type":"int256","internalType":"BalanceDelta"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int256","internalType":"BalanceDelta"}],"stateMutability":"pure"},{"type":"function","name":"afterSwap","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"","type":"tuple","internalType":"struct IPoolManager.SwapParams","components":[{"name":"zeroForOne","type":"bool","internalType":"bool"},{"name":"amountSpecified","type":"int256","internalType":"int256"},{"name":"sqrtPriceLimitX96","type":"uint160","internalType":"uint160"}]},{"name":"","type":"int256","internalType":"BalanceDelta"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int128","internalType":"int128"}],"stateMutability":"pure"},{"type":"function","name":"beforeAddLiquidity","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"","type":"tuple","internalType":"struct IPoolManager.ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"pure"},{"type":"function","name":"beforeDonate","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"pure"},{"type":"function","name":"beforeInitialize","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"","type":"uint160","internalType":"uint160"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"pure"},{"type":"function","name":"beforeRemoveLiquidity","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"","type":"tuple","internalType":"struct IPoolManager.ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"pure"},{"type":"function","name":"beforeSwap","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct IPoolManager.SwapParams","components":[{"name":"zeroForOne","type":"bool","internalType":"bool"},{"name":"amountSpecified","type":"int256","internalType":"int256"},{"name":"sqrtPriceLimitX96","type":"uint160","internalType":"uint160"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int256","internalType":"BeforeSwapDelta"},{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"nonpayable"},{"type":"function","name":"executeVaultOrder","inputs":[{"name":"orderId","type":"bytes32","internalType":"bytes32"},{"name":"proof","type":"bytes","internalType":"bytes"},{"name":"signatures","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fallbackToAMM","inputs":[{"name":"orderId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getOrder","inputs":[{"name":"orderId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"order","type":"tuple","internalType":"struct IEigenVaultHook.PrivateOrder","components":[{"name":"trader","type":"address","internalType":"address"},{"name":"poolKey","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"zeroForOne","type":"bool","internalType":"bool"},{"name":"amountSpecified","type":"int256","internalType":"int256"},{"name":"commitment","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"timestamp","type":"uint256","internalType":"uint256"},{"name":"executed","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getVaultThreshold","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]}],"outputs":[{"name":"threshold","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isLargeOrder","inputs":[{"name":"amountSpecified","type":"int256","internalType":"int256"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"orderNonce","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"orderVault","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IOrderVault"}],"stateMutability":"view"},{"type":"function","name":"orders","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"trader","type":"address","internalType":"address"},{"name":"poolKey","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"zeroForOne","type":"bool","internalType":"bool"},{"name":"amountSpecified","type":"int256","internalType":"int256"},{"name":"commitment","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"timestamp","type":"uint256","internalType":"uint256"},{"name":"executed","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"poolManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IPoolManager"}],"stateMutability":"view"},{"type":"function","name":"poolThresholds","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"routeToVault","inputs":[{"name":"trader","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct IPoolManager.SwapParams","components":[{"name":"zeroForOne","type":"bool","internalType":"bool"},{"name":"amountSpecified","type":"int256","internalType":"int256"},{"name":"sqrtPriceLimitX96","type":"uint160","internalType":"uint160"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"orderId","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"serviceManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"setPoolThreshold","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"threshold","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateVaultThreshold","inputs":[{"name":"newThreshold","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"usedCommitments","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"vaultThresholdBps","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"OrderFallbackToAMM","inputs":[{"name":"orderId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"trader","type":"address","indexed":true,"internalType":"address"},{"name":"reason","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"OrderRoutedToVault","inputs":[{"name":"trader","type":"address","indexed":true,"internalType":"address"},{"name":"orderId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"poolKey","type":"tuple","indexed":true,"internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"zeroForOne","type":"bool","indexed":false,"internalType":"bool"},{"name":"amountSpecified","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"commitment","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"VaultOrderExecuted","inputs":[{"name":"orderId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"trader","type":"address","indexed":true,"internalType":"address"},{"name":"amountIn","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amountOut","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"proofHash","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"VaultThresholdUpdated","inputs":[{"name":"oldThreshold","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newThreshold","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x60e060405260645f55348015610013575f80fd5b5060405161201938038061201983398101604081905261003291610078565b6001600160a01b0392831660805290821660a0521660c052600580546001600160a01b031916331790556100c2565b6001600160a01b0381168114610075575f80fd5b50565b5f805f6060848603121561008a575f80fd5b835161009581610061565b60208501519093506100a681610061565b60408501519092506100b781610061565b809150509250925092565b60805160a05160c051611f186101015f395f818161038f0152610b8901525f81816102460152610c7c01525f81816104dd0152610ec30152611f185ff3fe608060405234801561000f575f80fd5b50600436106101ba575f3560e01c806391402039116100f3578063cd9a56e811610093578063e1b4af691161006e578063e1b4af69146104ab578063f2fde38b1461050d578063f3539e8a14610520578063f57f9a7d14610533575f80fd5b8063cd9a56e8146104b9578063dc4c90d3146104d8578063dc98354e146104ff575f80fd5b80639f063efc116100ce5780639f063efc146102f15780639f66017514610472578063b47b2fb11461047a578063b6a8b0fa146104ab575f80fd5b8063914020391461035857806393845e461461038a5780639c3f1e90146103b1575f80fd5b80635004194e1161015e5780636c2bbe7e116101395780636c2bbe7e146102f15780636fe7e6eb146103245780638da5cb5b146103325780638f9316a514610345575f80fd5b80635004194e14610280578063575e24b4146102935780635778472a146102d1575f80fd5b806321d0ee701161019957806321d0ee7014610202578063259982e51461020257806328cd016b1461022e5780633998fdd314610241575f80fd5b8062e4fe01146101be57806302d9c708146101d357806316f8de89146101e6575b5f80fd5b6101d16101cc3660046113ff565b610546565b005b6101d16101e13660046113ff565b61070e565b6101ef60045481565b6040519081526020015b60405180910390f35b610215610210366004611492565b6107f5565b6040516001600160e01b031990911681526020016101f9565b6101ef61023c366004611519565b61083f565b6102687f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101f9565b6101d161028e366004611573565b610c71565b6102a66102a1366004611519565b610eb5565b604080516001600160e01b03199094168452602084019290925262ffffff16908201526060016101f9565b6102e46102df3660046113ff565b610f84565b6040516101f991906115cf565b6103046102ff366004611695565b6110c2565b604080516001600160e01b031990931683526020830191909152016101f9565b610215610210366004611736565b600554610268906001600160a01b031681565b6101ef61035336600461178d565b61110e565b61037a6103663660046113ff565b60036020525f908152604090205460ff1681565b60405190151581526020016101f9565b6102687f000000000000000000000000000000000000000000000000000000000000000081565b61045e6103bf3660046113ff565b600160208181525f9283526040928390208054845160a081018652938201546001600160a01b0390811685526002808401548083169587019590955262ffffff600160a01b86041696860196909652600160b81b90930490940b606084015260038101548216608084015260048101546005820154600683015460078401546008850154600990950154959097169660ff938416959294919390921688565b6040516101f99897969594939291906117a7565b6101ef5f5481565b6104886102ff36600461184a565b604080516001600160e01b03199093168352600f9190910b6020830152016101f9565b6102156102103660046118cb565b6101ef6104c73660046113ff565b60026020525f908152604090205481565b6102687f000000000000000000000000000000000000000000000000000000000000000081565b610215610210366004611925565b6101d161051b36600461196c565b61115c565b61037a61052e366004611987565b611227565b6101d16105413660046119b2565b6112ae565b5f81815260016020526040902080546001600160a01b03166105a15760405162461bcd60e51b815260206004820152600f60248201526e13dc99195c881b9bdd08199bdd5b99608a1b60448201526064015b60405180910390fd5b600981015460ff16156105f65760405162461bcd60e51b815260206004820152601660248201527f4f7264657220616c7265616479206578656375746564000000000000000000006044820152606401610598565b8060070154421180610611575080546001600160a01b031633145b61065d5760405162461bcd60e51b815260206004820152601360248201527f43616e6e6f742066616c6c6261636b20796574000000000000000000000000006044820152606401610598565b60098101805460ff1916600117905580546040516001600160a01b039091169083907faf3e26e641eb50ac4b7b95141c3a0592d0d8c104214a1309c355ed68836b4e31906107029060208082526025908201527f446561646c696e65206578636565646564206f7220747261646572207265717560408201527f6573746564000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a35050565b6005546001600160a01b031633146107545760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610598565b5f8111801561076557506103e88111155b6107b15760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207468726573686f6c640000000000000000000000000000006044820152606401610598565b5f80549082905560408051828152602081018490527f5c09043b34023bb9c9c41465d990a9d64199df3969bf28f4b23c1a3e5f3ff886910160405180910390a15050565b60405162461bcd60e51b815260206004820152601460248201527f486f6f6b206e6f7420696d706c656d656e74656400000000000000000000000060448201525f90606401610598565b5f6001600160a01b0386166108965760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964207472616465720000000000000000000000000000000000006044820152606401610598565b5f80806108a585870187611a20565b919450925090506108b84261012c611ada565b821180156108d257506108ce4262015180611ada565b8211155b61091e5760405162461bcd60e51b815260206004820152601060248201527f496e76616c696420646561646c696e65000000000000000000000000000000006044820152606401610598565b5f8381526003602052604090205460ff161561097c5760405162461bcd60e51b815260206004820152601760248201527f436f6d6d69746d656e7420616c726561647920757365640000000000000000006044820152606401610598565b5f838152600360205260409020805460ff191660011790556109ce896109a7368b90038b018b611aff565b6109b6368b90038b018b611ba2565b60045f81546109c490611c09565b9182905550611383565b93505f6040518061010001604052808b6001600160a01b031681526020018a8036038101906109fd9190611aff565b8152602090810190610a11908b018b611c21565b1515815260208a8101358183015260408083018890526060808401889052426080808601919091525f60a09586018190528b81526001808652908490208751815473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b0392831617835589880151805194840180548316958416959095179094559683015160028301805485890151868901519385167fffffffffffffffffff000000000000000000000000000000000000000000000090921691909117600160a01b62ffffff92831602177fffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffff16600160b81b91909316029190911790559183015160038201805490971690831617909555868401516004808701805460ff1990811693151593909317905593880151600587015591870151600686015594860151600785015560c0860151600885015560e0860151600990940180549091169315159390931790925551631cd8551f60e31b81529293507f00000000000000000000000000000000000000000000000000000000000000009091169163e6c2a8f891610bc49189918f9188918a9101611c3a565b5f604051808303815f87803b158015610bdb575f80fd5b505af1158015610bed573d5f803e3d5ffd5b5050505088604051610bff9190611c8d565b604051908190039020856001600160a01b038c167f7a58014263307c9f8bbcf46b5f9c4fa91cbb8f9abbf080a1b94d0864427b4bfa610c4160208d018d611c21565b6040805191151582526020808f013590830152810189905260600160405180910390a45050505095945050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ce95760405162461bcd60e51b815260206004820152601360248201527f4e6f742073657276696365206d616e61676572000000000000000000000000006044820152606401610598565b5f85815260016020526040902080546001600160a01b0316610d3f5760405162461bcd60e51b815260206004820152600f60248201526e13dc99195c881b9bdd08199bdd5b99608a1b6044820152606401610598565b600981015460ff1615610d945760405162461bcd60e51b815260206004820152601660248201527f4f7264657220616c7265616479206578656375746564000000000000000000006044820152606401610598565b8060070154421115610de85760405162461bcd60e51b815260206004820152600d60248201527f4f726465722065787069726564000000000000000000000000000000000000006044820152606401610598565b60098101805460ff1916600117905560058101545f908112610e17578160050154610e1290611d1b565b610e1d565b81600501545b90505f6064610e2d836063611d35565b610e379190611d4c565b83546040519192506001600160a01b03169089907ff65ab2e2fde11ff86822c29f476e8ccf4c230c011ef6f5ba62b96db8607d0cb99085908590610e7e908d908d90611d6b565b604051908190038120610ea39392919283526020830191909152604082015260600190565b60405180910390a35050505050505050565b5f8080336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f305760405162461bcd60e51b815260206004820152601060248201527f4e6f7420706f6f6c206d616e61676572000000000000000000000000000000006044820152606401610598565b610f3e866020013588611227565b15610f69575f610f51898989898961083f565b506315d7892d60e21b93505f9250829150610f799050565b506315d7892d60e21b91505f9050805b955095509592505050565b610ff260408051610100810182525f808252825160a0810184528181526020818101839052938101829052606081018290526080810191909152909182019081525f6020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b505f9081526001602081815260409283902083516101008101855281546001600160a01b039081168252855160a0808201885295840154821681526002808501548084168388015262ffffff600160a01b820416838a0152600160b81b9004900b606080830191909152600385015490921660808083019190915294830152600483015460ff908116151596830196909652600583015490820152600682015492810192909252600781015492820192909252600882015460c0820152600990910154909116151560e082015290565b60405162461bcd60e51b815260206004820152601460248201527f486f6f6b206e6f7420696d706c656d656e74656400000000000000000000000060448201525f908190606401610598565b5f80826040516020016111219190611d7a565b60408051601f1981840301815291815281516020928301205f81815260029093529082205493509150829003611156575f5491505b50919050565b6005546001600160a01b031633146111a25760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610598565b6001600160a01b0381166111f85760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152606401610598565b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b5f805f8412611236578361123f565b61123f84611d1b565b90505f836040516020016112539190611d7a565b60408051601f1981840301815291815281516020928301205f8181526002909352908220549092509081900361128757505f545b69d3c21bcecceda10000005f61129d82846113e0565b909410159450505050505b92915050565b6005546001600160a01b031633146112f45760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610598565b6103e88111156113465760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207468726573686f6c640000000000000000000000000000006044820152606401610598565b5f826040516020016113589190611d7a565b60408051601f1981840301815291815281516020928301205f90815260029092529020919091555050565b8251602080850151604080870151606088015160808901518851898701518a86015195515f996113c0998f999198919796959493928d9101611dfe565b604051602081830303815290604052805190602001209050949350505050565b5f6127106113ee8385611d35565b6113f89190611d4c565b9392505050565b5f6020828403121561140f575f80fd5b5035919050565b6001600160a01b038116811461142a575f80fd5b50565b5f60a08284031215611156575f80fd5b5f60808284031215611156575f80fd5b5f8083601f84011261145d575f80fd5b50813567ffffffffffffffff811115611474575f80fd5b60208301915083602082850101111561148b575f80fd5b9250929050565b5f805f805f61016086880312156114a7575f80fd5b85356114b281611416565b94506114c1876020880161142d565b93506114d08760c0880161143d565b925061014086013567ffffffffffffffff8111156114ec575f80fd5b6114f88882890161144d565b969995985093965092949392505050565b5f60608284031215611156575f80fd5b5f805f805f610140868803121561152e575f80fd5b853561153981611416565b9450611548876020880161142d565b93506115578760c08801611509565b925061012086013567ffffffffffffffff8111156114ec575f80fd5b5f805f805f60608688031215611587575f80fd5b85359450602086013567ffffffffffffffff8111156115a4575f80fd5b6115b08882890161144d565b909550935050604086013567ffffffffffffffff8111156114ec575f80fd5b81516001600160a01b03168152602080830151610180830191611642908401826001600160a01b0381511682526001600160a01b03602082015116602083015262ffffff6040820151166040830152606081015160020b60608301526001600160a01b0360808201511660808301525050565b506040830151151560c0830152606083015160e0830152608083015161010083015260a083015161012083015260c083015161014083015260e083015161168e61016084018215159052565b5092915050565b5f805f805f805f6101a0888a0312156116ac575f80fd5b87356116b781611416565b96506116c68960208a0161142d565b95506116d58960c08a0161143d565b94506101408801359350610160880135925061018088013567ffffffffffffffff811115611701575f80fd5b61170d8a828b0161144d565b989b979a50959850939692959293505050565b8035600281900b8114611731575f80fd5b919050565b5f805f80610100858703121561174a575f80fd5b843561175581611416565b9350611764866020870161142d565b925060c085013561177481611416565b915061178260e08601611720565b905092959194509250565b5f60a0828403121561179d575f80fd5b6113f8838361142d565b6001600160a01b03891681526101808101611813602083018a6001600160a01b0381511682526001600160a01b03602082015116602083015262ffffff6040820151166040830152606081015160020b60608301526001600160a01b0360808201511660808301525050565b96151560c082015260e081019590955261010085019390935261012084019190915261014083015215156101609091015292915050565b5f805f805f806101608789031215611860575f80fd5b863561186b81611416565b955061187a886020890161142d565b94506118898860c08901611509565b9350610120870135925061014087013567ffffffffffffffff8111156118ad575f80fd5b6118b989828a0161144d565b979a9699509497509295939492505050565b5f805f805f8061012087890312156118e1575f80fd5b86356118ec81611416565b95506118fb886020890161142d565b945060c0870135935060e0870135925061010087013567ffffffffffffffff8111156118ad575f80fd5b5f805f60e08486031215611937575f80fd5b833561194281611416565b9250611951856020860161142d565b915060c084013561196181611416565b809150509250925092565b5f6020828403121561197c575f80fd5b81356113f881611416565b5f8060c08385031215611998575f80fd5b823591506119a9846020850161142d565b90509250929050565b5f8060c083850312156119c3575f80fd5b6119cd848461142d565b9460a0939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611a1857611a186119db565b604052919050565b5f805f60608486031215611a32575f80fd5b8335925060208401359150604084013567ffffffffffffffff811115611a56575f80fd5b8401601f81018613611a66575f80fd5b803567ffffffffffffffff811115611a8057611a806119db565b611a93601f8201601f19166020016119ef565b818152876020838501011115611aa7575f80fd5b816020840160208301375f602083830101528093505050509250925092565b634e487b7160e01b5f52601160045260245ffd5b808201808211156112a8576112a8611ac6565b803562ffffff81168114611731575f80fd5b5f60a0828403128015611b10575f80fd5b5060405160a0810167ffffffffffffffff81118282101715611b3457611b346119db565b6040528235611b4281611416565b81526020830135611b5281611416565b6020820152611b6360408401611aed565b6040820152611b7460608401611720565b60608201526080830135611b8781611416565b60808201529392505050565b80358015158114611731575f80fd5b5f6060828403128015611bb3575f80fd5b506040516060810167ffffffffffffffff81118282101715611bd757611bd76119db565b604052611be383611b93565b8152602083810135908201526040830135611bfd81611416565b60408201529392505050565b5f60018201611c1a57611c1a611ac6565b5060010190565b5f60208284031215611c31575f80fd5b6113f882611b93565b8481526001600160a01b0384166020820152608060408201525f8351806080840152806020860160a085015e5f60a0828501015260a0601f19601f83011684010191505082606083015295945050505050565b5f8235611c9981611416565b6001600160a01b03168252602083810135908301611cb682611416565b6001600160a01b03821681526020810162ffffff611cd660408801611aed565b168152611ce560608701611720565b60020b602082015260808601359250611cfd83611416565b6001600160a01b038316604082015250505060a08201905092915050565b5f600160ff1b8201611d2f57611d2f611ac6565b505f0390565b80820281158282048414176112a8576112a8611ac6565b5f82611d6657634e487b7160e01b5f52601260045260245ffd5b500490565b818382375f9101908152919050565b60a081018235611d8981611416565b6001600160a01b031682526020830135611da281611416565b6001600160a01b0316602083015262ffffff611dc060408501611aed565b166040830152611dd260608401611720565b60020b60608301526080830135611de881611416565b6001600160a01b03811660808401525092915050565b6bffffffffffffffffffffffff198b60601b1681526bffffffffffffffffffffffff198a60601b166014820152611e49602882018a60601b6bffffffffffffffffffffffff19169052565b60e888811b7fffffff000000000000000000000000000000000000000000000000000000000016603c83015287901b603f820152611e9b604282018760601b6bffffffffffffffffffffffff19169052565b84151560f81b6056820152836057820152611eca607782018460601b6bffffffffffffffffffffffff19169052565b608b81019190915260ab01999850505050505050505056fea264697066735822122033d70e6f33c9ee1b39d0bbb897efc37fcd1ed3bdf76ff6450155ab1df91261c764736f6c634300081a0033","sourceMap":"876:11249:1:-:0;;;1447:3;1412:38;;2655:577;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2784:26:1;;;;;2820:32;;;;;2862:24;;;2896:5;:18;;-1:-1:-1;;;;;;2896:18:1;2904:10;2896:18;;;876:11249;;14:145:70;-1:-1:-1;;;;;103:31:70;;93:42;;83:70;;149:1;146;139:12;83:70;14:145;:::o;164:603::-;294:6;302;310;363:2;351:9;342:7;338:23;334:32;331:52;;;379:1;376;369:12;331:52;411:9;405:16;430:45;469:5;430:45;:::i;:::-;544:2;529:18;;523:25;494:5;;-1:-1:-1;557:47:70;523:25;557:47;:::i;:::-;675:2;660:18;;654:25;623:7;;-1:-1:-1;688:47:70;654:25;688:47;:::i;:::-;754:7;744:17;;;164:603;;;;;:::o;:::-;876:11249:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561000f575f80fd5b50600436106101ba575f3560e01c806391402039116100f3578063cd9a56e811610093578063e1b4af691161006e578063e1b4af69146104ab578063f2fde38b1461050d578063f3539e8a14610520578063f57f9a7d14610533575f80fd5b8063cd9a56e8146104b9578063dc4c90d3146104d8578063dc98354e146104ff575f80fd5b80639f063efc116100ce5780639f063efc146102f15780639f66017514610472578063b47b2fb11461047a578063b6a8b0fa146104ab575f80fd5b8063914020391461035857806393845e461461038a5780639c3f1e90146103b1575f80fd5b80635004194e1161015e5780636c2bbe7e116101395780636c2bbe7e146102f15780636fe7e6eb146103245780638da5cb5b146103325780638f9316a514610345575f80fd5b80635004194e14610280578063575e24b4146102935780635778472a146102d1575f80fd5b806321d0ee701161019957806321d0ee7014610202578063259982e51461020257806328cd016b1461022e5780633998fdd314610241575f80fd5b8062e4fe01146101be57806302d9c708146101d357806316f8de89146101e6575b5f80fd5b6101d16101cc3660046113ff565b610546565b005b6101d16101e13660046113ff565b61070e565b6101ef60045481565b6040519081526020015b60405180910390f35b610215610210366004611492565b6107f5565b6040516001600160e01b031990911681526020016101f9565b6101ef61023c366004611519565b61083f565b6102687f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101f9565b6101d161028e366004611573565b610c71565b6102a66102a1366004611519565b610eb5565b604080516001600160e01b03199094168452602084019290925262ffffff16908201526060016101f9565b6102e46102df3660046113ff565b610f84565b6040516101f991906115cf565b6103046102ff366004611695565b6110c2565b604080516001600160e01b031990931683526020830191909152016101f9565b610215610210366004611736565b600554610268906001600160a01b031681565b6101ef61035336600461178d565b61110e565b61037a6103663660046113ff565b60036020525f908152604090205460ff1681565b60405190151581526020016101f9565b6102687f000000000000000000000000000000000000000000000000000000000000000081565b61045e6103bf3660046113ff565b600160208181525f9283526040928390208054845160a081018652938201546001600160a01b0390811685526002808401548083169587019590955262ffffff600160a01b86041696860196909652600160b81b90930490940b606084015260038101548216608084015260048101546005820154600683015460078401546008850154600990950154959097169660ff938416959294919390921688565b6040516101f99897969594939291906117a7565b6101ef5f5481565b6104886102ff36600461184a565b604080516001600160e01b03199093168352600f9190910b6020830152016101f9565b6102156102103660046118cb565b6101ef6104c73660046113ff565b60026020525f908152604090205481565b6102687f000000000000000000000000000000000000000000000000000000000000000081565b610215610210366004611925565b6101d161051b36600461196c565b61115c565b61037a61052e366004611987565b611227565b6101d16105413660046119b2565b6112ae565b5f81815260016020526040902080546001600160a01b03166105a15760405162461bcd60e51b815260206004820152600f60248201526e13dc99195c881b9bdd08199bdd5b99608a1b60448201526064015b60405180910390fd5b600981015460ff16156105f65760405162461bcd60e51b815260206004820152601660248201527f4f7264657220616c7265616479206578656375746564000000000000000000006044820152606401610598565b8060070154421180610611575080546001600160a01b031633145b61065d5760405162461bcd60e51b815260206004820152601360248201527f43616e6e6f742066616c6c6261636b20796574000000000000000000000000006044820152606401610598565b60098101805460ff1916600117905580546040516001600160a01b039091169083907faf3e26e641eb50ac4b7b95141c3a0592d0d8c104214a1309c355ed68836b4e31906107029060208082526025908201527f446561646c696e65206578636565646564206f7220747261646572207265717560408201527f6573746564000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a35050565b6005546001600160a01b031633146107545760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610598565b5f8111801561076557506103e88111155b6107b15760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207468726573686f6c640000000000000000000000000000006044820152606401610598565b5f80549082905560408051828152602081018490527f5c09043b34023bb9c9c41465d990a9d64199df3969bf28f4b23c1a3e5f3ff886910160405180910390a15050565b60405162461bcd60e51b815260206004820152601460248201527f486f6f6b206e6f7420696d706c656d656e74656400000000000000000000000060448201525f90606401610598565b5f6001600160a01b0386166108965760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964207472616465720000000000000000000000000000000000006044820152606401610598565b5f80806108a585870187611a20565b919450925090506108b84261012c611ada565b821180156108d257506108ce4262015180611ada565b8211155b61091e5760405162461bcd60e51b815260206004820152601060248201527f496e76616c696420646561646c696e65000000000000000000000000000000006044820152606401610598565b5f8381526003602052604090205460ff161561097c5760405162461bcd60e51b815260206004820152601760248201527f436f6d6d69746d656e7420616c726561647920757365640000000000000000006044820152606401610598565b5f838152600360205260409020805460ff191660011790556109ce896109a7368b90038b018b611aff565b6109b6368b90038b018b611ba2565b60045f81546109c490611c09565b9182905550611383565b93505f6040518061010001604052808b6001600160a01b031681526020018a8036038101906109fd9190611aff565b8152602090810190610a11908b018b611c21565b1515815260208a8101358183015260408083018890526060808401889052426080808601919091525f60a09586018190528b81526001808652908490208751815473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b0392831617835589880151805194840180548316958416959095179094559683015160028301805485890151868901519385167fffffffffffffffffff000000000000000000000000000000000000000000000090921691909117600160a01b62ffffff92831602177fffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffff16600160b81b91909316029190911790559183015160038201805490971690831617909555868401516004808701805460ff1990811693151593909317905593880151600587015591870151600686015594860151600785015560c0860151600885015560e0860151600990940180549091169315159390931790925551631cd8551f60e31b81529293507f00000000000000000000000000000000000000000000000000000000000000009091169163e6c2a8f891610bc49189918f9188918a9101611c3a565b5f604051808303815f87803b158015610bdb575f80fd5b505af1158015610bed573d5f803e3d5ffd5b5050505088604051610bff9190611c8d565b604051908190039020856001600160a01b038c167f7a58014263307c9f8bbcf46b5f9c4fa91cbb8f9abbf080a1b94d0864427b4bfa610c4160208d018d611c21565b6040805191151582526020808f013590830152810189905260600160405180910390a45050505095945050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ce95760405162461bcd60e51b815260206004820152601360248201527f4e6f742073657276696365206d616e61676572000000000000000000000000006044820152606401610598565b5f85815260016020526040902080546001600160a01b0316610d3f5760405162461bcd60e51b815260206004820152600f60248201526e13dc99195c881b9bdd08199bdd5b99608a1b6044820152606401610598565b600981015460ff1615610d945760405162461bcd60e51b815260206004820152601660248201527f4f7264657220616c7265616479206578656375746564000000000000000000006044820152606401610598565b8060070154421115610de85760405162461bcd60e51b815260206004820152600d60248201527f4f726465722065787069726564000000000000000000000000000000000000006044820152606401610598565b60098101805460ff1916600117905560058101545f908112610e17578160050154610e1290611d1b565b610e1d565b81600501545b90505f6064610e2d836063611d35565b610e379190611d4c565b83546040519192506001600160a01b03169089907ff65ab2e2fde11ff86822c29f476e8ccf4c230c011ef6f5ba62b96db8607d0cb99085908590610e7e908d908d90611d6b565b604051908190038120610ea39392919283526020830191909152604082015260600190565b60405180910390a35050505050505050565b5f8080336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f305760405162461bcd60e51b815260206004820152601060248201527f4e6f7420706f6f6c206d616e61676572000000000000000000000000000000006044820152606401610598565b610f3e866020013588611227565b15610f69575f610f51898989898961083f565b506315d7892d60e21b93505f9250829150610f799050565b506315d7892d60e21b91505f9050805b955095509592505050565b610ff260408051610100810182525f808252825160a0810184528181526020818101839052938101829052606081018290526080810191909152909182019081525f6020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b505f9081526001602081815260409283902083516101008101855281546001600160a01b039081168252855160a0808201885295840154821681526002808501548084168388015262ffffff600160a01b820416838a0152600160b81b9004900b606080830191909152600385015490921660808083019190915294830152600483015460ff908116151596830196909652600583015490820152600682015492810192909252600781015492820192909252600882015460c0820152600990910154909116151560e082015290565b60405162461bcd60e51b815260206004820152601460248201527f486f6f6b206e6f7420696d706c656d656e74656400000000000000000000000060448201525f908190606401610598565b5f80826040516020016111219190611d7a565b60408051601f1981840301815291815281516020928301205f81815260029093529082205493509150829003611156575f5491505b50919050565b6005546001600160a01b031633146111a25760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610598565b6001600160a01b0381166111f85760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152606401610598565b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b5f805f8412611236578361123f565b61123f84611d1b565b90505f836040516020016112539190611d7a565b60408051601f1981840301815291815281516020928301205f8181526002909352908220549092509081900361128757505f545b69d3c21bcecceda10000005f61129d82846113e0565b909410159450505050505b92915050565b6005546001600160a01b031633146112f45760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610598565b6103e88111156113465760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207468726573686f6c640000000000000000000000000000006044820152606401610598565b5f826040516020016113589190611d7a565b60408051601f1981840301815291815281516020928301205f90815260029092529020919091555050565b8251602080850151604080870151606088015160808901518851898701518a86015195515f996113c0998f999198919796959493928d9101611dfe565b604051602081830303815290604052805190602001209050949350505050565b5f6127106113ee8385611d35565b6113f89190611d4c565b9392505050565b5f6020828403121561140f575f80fd5b5035919050565b6001600160a01b038116811461142a575f80fd5b50565b5f60a08284031215611156575f80fd5b5f60808284031215611156575f80fd5b5f8083601f84011261145d575f80fd5b50813567ffffffffffffffff811115611474575f80fd5b60208301915083602082850101111561148b575f80fd5b9250929050565b5f805f805f61016086880312156114a7575f80fd5b85356114b281611416565b94506114c1876020880161142d565b93506114d08760c0880161143d565b925061014086013567ffffffffffffffff8111156114ec575f80fd5b6114f88882890161144d565b969995985093965092949392505050565b5f60608284031215611156575f80fd5b5f805f805f610140868803121561152e575f80fd5b853561153981611416565b9450611548876020880161142d565b93506115578760c08801611509565b925061012086013567ffffffffffffffff8111156114ec575f80fd5b5f805f805f60608688031215611587575f80fd5b85359450602086013567ffffffffffffffff8111156115a4575f80fd5b6115b08882890161144d565b909550935050604086013567ffffffffffffffff8111156114ec575f80fd5b81516001600160a01b03168152602080830151610180830191611642908401826001600160a01b0381511682526001600160a01b03602082015116602083015262ffffff6040820151166040830152606081015160020b60608301526001600160a01b0360808201511660808301525050565b506040830151151560c0830152606083015160e0830152608083015161010083015260a083015161012083015260c083015161014083015260e083015161168e61016084018215159052565b5092915050565b5f805f805f805f6101a0888a0312156116ac575f80fd5b87356116b781611416565b96506116c68960208a0161142d565b95506116d58960c08a0161143d565b94506101408801359350610160880135925061018088013567ffffffffffffffff811115611701575f80fd5b61170d8a828b0161144d565b989b979a50959850939692959293505050565b8035600281900b8114611731575f80fd5b919050565b5f805f80610100858703121561174a575f80fd5b843561175581611416565b9350611764866020870161142d565b925060c085013561177481611416565b915061178260e08601611720565b905092959194509250565b5f60a0828403121561179d575f80fd5b6113f8838361142d565b6001600160a01b03891681526101808101611813602083018a6001600160a01b0381511682526001600160a01b03602082015116602083015262ffffff6040820151166040830152606081015160020b60608301526001600160a01b0360808201511660808301525050565b96151560c082015260e081019590955261010085019390935261012084019190915261014083015215156101609091015292915050565b5f805f805f806101608789031215611860575f80fd5b863561186b81611416565b955061187a886020890161142d565b94506118898860c08901611509565b9350610120870135925061014087013567ffffffffffffffff8111156118ad575f80fd5b6118b989828a0161144d565b979a9699509497509295939492505050565b5f805f805f8061012087890312156118e1575f80fd5b86356118ec81611416565b95506118fb886020890161142d565b945060c0870135935060e0870135925061010087013567ffffffffffffffff8111156118ad575f80fd5b5f805f60e08486031215611937575f80fd5b833561194281611416565b9250611951856020860161142d565b915060c084013561196181611416565b809150509250925092565b5f6020828403121561197c575f80fd5b81356113f881611416565b5f8060c08385031215611998575f80fd5b823591506119a9846020850161142d565b90509250929050565b5f8060c083850312156119c3575f80fd5b6119cd848461142d565b9460a0939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611a1857611a186119db565b604052919050565b5f805f60608486031215611a32575f80fd5b8335925060208401359150604084013567ffffffffffffffff811115611a56575f80fd5b8401601f81018613611a66575f80fd5b803567ffffffffffffffff811115611a8057611a806119db565b611a93601f8201601f19166020016119ef565b818152876020838501011115611aa7575f80fd5b816020840160208301375f602083830101528093505050509250925092565b634e487b7160e01b5f52601160045260245ffd5b808201808211156112a8576112a8611ac6565b803562ffffff81168114611731575f80fd5b5f60a0828403128015611b10575f80fd5b5060405160a0810167ffffffffffffffff81118282101715611b3457611b346119db565b6040528235611b4281611416565b81526020830135611b5281611416565b6020820152611b6360408401611aed565b6040820152611b7460608401611720565b60608201526080830135611b8781611416565b60808201529392505050565b80358015158114611731575f80fd5b5f6060828403128015611bb3575f80fd5b506040516060810167ffffffffffffffff81118282101715611bd757611bd76119db565b604052611be383611b93565b8152602083810135908201526040830135611bfd81611416565b60408201529392505050565b5f60018201611c1a57611c1a611ac6565b5060010190565b5f60208284031215611c31575f80fd5b6113f882611b93565b8481526001600160a01b0384166020820152608060408201525f8351806080840152806020860160a085015e5f60a0828501015260a0601f19601f83011684010191505082606083015295945050505050565b5f8235611c9981611416565b6001600160a01b03168252602083810135908301611cb682611416565b6001600160a01b03821681526020810162ffffff611cd660408801611aed565b168152611ce560608701611720565b60020b602082015260808601359250611cfd83611416565b6001600160a01b038316604082015250505060a08201905092915050565b5f600160ff1b8201611d2f57611d2f611ac6565b505f0390565b80820281158282048414176112a8576112a8611ac6565b5f82611d6657634e487b7160e01b5f52601260045260245ffd5b500490565b818382375f9101908152919050565b60a081018235611d8981611416565b6001600160a01b031682526020830135611da281611416565b6001600160a01b0316602083015262ffffff611dc060408501611aed565b166040830152611dd260608401611720565b60020b60608301526080830135611de881611416565b6001600160a01b03811660808401525092915050565b6bffffffffffffffffffffffff198b60601b1681526bffffffffffffffffffffffff198a60601b166014820152611e49602882018a60601b6bffffffffffffffffffffffff19169052565b60e888811b7fffffff000000000000000000000000000000000000000000000000000000000016603c83015287901b603f820152611e9b604282018760601b6bffffffffffffffffffffffff19169052565b84151560f81b6056820152836057820152611eca607782018460601b6bffffffffffffffffffffffff19169052565b608b81019190915260ab01999850505050505050505056fea264697066735822122033d70e6f33c9ee1b39d0bbb897efc37fcd1ed3bdf76ff6450155ab1df91261c764736f6c634300081a0033","sourceMap":"876:11249:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10124:518;;;;;;:::i;:::-;;:::i;:::-;;11170:325;;;;;;:::i;:::-;;:::i;1843:25::-;;;;;;;;;622::70;;;610:2;595:18;1843:25:1;;;;;;;;4260:235;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;2501:33:70;;;2483:52;;2471:2;2456:18;4260:235:1;2339:202:70;7336:1788:1;;;;;;:::i;:::-;;:::i;1172:39::-;;;;;;;;-1:-1:-1;;;;;3867:55:70;;;3849:74;;3837:2;3822:18;1172:39:1;3703:226:70;9166:916:1;;;;;;:::i;:::-;;:::i;4853:893::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;5017:33:70;;;4999:52;;5082:2;5067:18;;5060:34;;;;5142:8;5130:21;5110:18;;;5103:49;4987:2;4972:18;4853:893:1;4765:393:70;10684:124:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4528:292::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;8002:33:70;;;7984:52;;8067:2;8052:18;;8045:34;;;;7957:18;4528:292:1;7779:306:70;3466:174:1;;;;;;:::i;1910:20::-;;;;;-1:-1:-1;;;;;1910:20:1;;;10850:278;;;;;;:::i;:::-;;:::i;1749:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9258:14:70;;9251:22;9233:41;;9221:2;9206:18;1749:47:1;9093:187:70;1291:39:1;;;;;1511:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1511:46:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1511:46:1;;;;;;;;;;-1:-1:-1;;;1511:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1412:38::-;;;;;;5779:224;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;11515:33:70;;;11497:52;;11596:2;11585:22;;;;11580:2;11565:18;;11558:50;11470:18;5779:224:1;11327:287:70;6036:189:1;;;;;;:::i;1626:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1056:41;;;;;3265:168;;;;;;:::i;11966:157::-;;;;;;:::i;:::-;;:::i;6488:806::-;;;;;;:::i;:::-;;:::i;11632:247::-;;;;;;:::i;:::-;;:::i;10124:518::-;10183:26;10212:15;;;:6;:15;;;;;10245:12;;-1:-1:-1;;;;;10245:12:1;10237:54;;;;-1:-1:-1;;;10237:54:1;;14486:2:70;10237:54:1;;;14468:21:70;14525:2;14505:18;;;14498:30;-1:-1:-1;;;14544:18:70;;;14537:45;14599:18;;10237:54:1;;;;;;;;;10310:14;;;;;;10309:15;10301:50;;;;-1:-1:-1;;;10301:50:1;;14830:2:70;10301:50:1;;;14812:21:70;14869:2;14849:18;;;14842:30;14908:24;14888:18;;;14881:52;14950:18;;10301:50:1;14628:346:70;10301:50:1;10400:5;:14;;;10382:15;:32;:62;;;-1:-1:-1;10432:12:1;;-1:-1:-1;;;;;10432:12:1;10418:10;:26;10382:62;10361:128;;;;-1:-1:-1;;;10361:128:1;;15181:2:70;10361:128:1;;;15163:21:70;15220:2;15200:18;;;15193:30;15259:21;15239:18;;;15232:49;15298:18;;10361:128:1;14979:343:70;10361:128:1;10508:14;;;:21;;-1:-1:-1;;10508:21:1;10525:4;10508:21;;;10581:12;;10553:82;;-1:-1:-1;;;;;10581:12:1;;;;10572:7;;10553:82;;;;15529:2:70;15511:21;;;15568:2;15548:18;;;15541:30;15607:34;15602:2;15587:18;;15580:62;15678:7;15673:2;15658:18;;15651:35;15718:3;15703:19;;15327:401;10553:82:1;;;;;;;;10173:469;10124:518;:::o;11170:325::-;2227:5;;-1:-1:-1;;;;;2227:5:1;2213:10;:19;2205:41;;;;-1:-1:-1;;;2205:41:1;;15935:2:70;2205:41:1;;;15917:21:70;15974:1;15954:18;;;15947:29;-1:-1:-1;;;15992:18:70;;;15985:39;16041:18;;2205:41:1;15733:332:70;2205:41:1;11274:1:::1;11259:12;:16;:40;;;;;11295:4;11279:12;:20;;11259:40;11251:70;;;::::0;-1:-1:-1;;;11251:70:1;;16272:2:70;11251:70:1::1;::::0;::::1;16254:21:70::0;16311:2;16291:18;;;16284:30;16350:19;16330:18;;;16323:47;16387:18;;11251:70:1::1;16070:341:70::0;11251:70:1::1;11342:20;11365:17:::0;;11392:32;;;;11439:49:::1;::::0;;16590:25:70;;;16646:2;16631:18;;16624:34;;;11439:49:1::1;::::0;16563:18:70;11439:49:1::1;;;;;;;11241:254;11170:325:::0;:::o;4260:235::-;4458:30;;-1:-1:-1;;;4458:30:1;;16871:2:70;4458:30:1;;;16853:21:70;16910:2;16890:18;;;16883:30;16949:22;16929:18;;;16922:50;4440:6:1;;16989:18:70;;4458:30:1;16669:344:70;7336:1788:1;7516:15;-1:-1:-1;;;;;7551:20:1;;7543:47;;;;-1:-1:-1;;;7543:47:1;;17220:2:70;7543:47:1;;;17202:21:70;17259:2;17239:18;;;17232:30;17298:16;17278:18;;;17271:44;17332:18;;7543:47:1;17018:338:70;7543:47:1;7665:18;;;7747:47;;;;7758:8;7747:47;:::i;:::-;7664:130;;-1:-1:-1;7664:130:1;-1:-1:-1;7664:130:1;-1:-1:-1;7874:27:1;:15;7892:9;7874:27;:::i;:::-;7863:8;:38;:93;;;;-1:-1:-1;7930:26:1;:15;7948:8;7930:26;:::i;:::-;7918:8;:38;;7863:93;7842:156;;;;-1:-1:-1;;;7842:156:1;;19241:2:70;7842:156:1;;;19223:21:70;19280:2;19260:18;;;19253:30;19319:18;19299;;;19292:46;19355:18;;7842:156:1;19039:340:70;7842:156:1;8071:27;;;;:15;:27;;;;;;;;8070:28;8062:64;;;;-1:-1:-1;;;8062:64:1;;19586:2:70;8062:64:1;;;19568:21:70;19625:2;19605:18;;;19598:30;19664:25;19644:18;;;19637:53;19707:18;;8062:64:1;19384:347:70;8062:64:1;8136:27;;;;:15;:27;;;;;:34;;-1:-1:-1;;8136:34:1;8166:4;8136:34;;;8235:59;8260:6;8235:59;;;;;;;8268:3;8235:59;:::i;:::-;;;;;;;;8273:6;8235:59;:::i;:::-;8283:10;;8281:12;;;;;:::i;:::-;;;;;-1:-1:-1;8235:24:1;:59::i;:::-;8225:69;;8345:25;8373:311;;;;;;;;8408:6;-1:-1:-1;;;;;8373:311:1;;;;;8437:3;8373:311;;;;;;;;;;:::i;:::-;;;;;;;;8466:17;;;;:6;:17;:::i;:::-;8373:311;;;;;8514:22;;;;8373:311;;;;;;;;;;;;;;;;;;8629:15;8373:311;;;;;;;;-1:-1:-1;8373:311:1;;;;;;;8726:15;;;8373:311;8726:15;;;;;;;:23;;;;-1:-1:-1;;8726:23:1;;;-1:-1:-1;;;;;8726:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8726:23:1;;;;;;;;-1:-1:-1;;;8726:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8726:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8810:64;-1:-1:-1;;;8810:64:1;;8726:23;;-1:-1:-1;8810:10:1;:21;;;;;;:64;;8726:15;;8841:6;;8849:14;;8373:311;;8810:64;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8971:3;8898:186;;;;;;:::i;:::-;;;;;;;;;8950:7;-1:-1:-1;;;;;8898:186:1;;;8988:17;;;;:6;:17;:::i;:::-;8898:186;;;24114:14:70;;24107:22;24089:41;;9027:22:1;;;;;24146:18:70;;;24139:34;24189:18;;24182:34;;;24077:2;24062:18;8898:186:1;;;;;;;9103:14;;;;7336:1788;;;;;;;:::o;9166:916::-;2381:10;-1:-1:-1;;;;;2395:14:1;2381:28;;2373:60;;;;-1:-1:-1;;;2373:60:1;;24429:2:70;2373:60:1;;;24411:21:70;24468:2;24448:18;;;24441:30;24507:21;24487:18;;;24480:49;24546:18;;2373:60:1;24227:343:70;2373:60:1;9327:26:::1;9356:15:::0;;;:6:::1;:15;::::0;;;;9389:12;;-1:-1:-1;;;;;9389:12:1::1;9381:54;;;::::0;-1:-1:-1;;;9381:54:1;;14486:2:70;9381:54:1::1;::::0;::::1;14468:21:70::0;14525:2;14505:18;;;14498:30;-1:-1:-1;;;14544:18:70;;;14537:45;14599:18;;9381:54:1::1;14284:339:70::0;9381:54:1::1;9454:14;::::0;::::1;::::0;::::1;;9453:15;9445:50;;;::::0;-1:-1:-1;;;9445:50:1;;14830:2:70;9445:50:1::1;::::0;::::1;14812:21:70::0;14869:2;14849:18;;;14842:30;14908:24;14888:18;;;14881:52;14950:18;;9445:50:1::1;14628:346:70::0;9445:50:1::1;9532:5;:14;;;9513:15;:33;;9505:59;;;::::0;-1:-1:-1;;;9505:59:1;;24777:2:70;9505:59:1::1;::::0;::::1;24759:21:70::0;24816:2;24796:18;;;24789:30;24855:15;24835:18;;;24828:43;24888:18;;9505:59:1::1;24575:337:70::0;9505:59:1::1;9617:14;::::0;::::1;:21:::0;;-1:-1:-1;;9617:21:1::1;9634:4;9617:21;::::0;;9757::::1;::::0;::::1;::::0;9617:14:::1;::::0;9757:25;-1:-1:-1;9757:74:1::1;;9810:5;:21;;;9809:22;;;:::i;:::-;9757:74;;;9785:5;:21;;;9757:74;9730:102:::0;-1:-1:-1;9842:17:1::1;9878:3;9862:13;9730:102:::0;9873:2:::1;9862:13;:::i;:::-;:19;;;;:::i;:::-;9978:12:::0;;10049:16:::1;::::0;9842:39;;-1:-1:-1;;;;;;9978:12:1::1;::::0;9957:7;;9925:150:::1;::::0;10004:8;;9842:39;;10049:16:::1;::::0;10059:5;;;;10049:16:::1;:::i;:::-;;::::0;;;;::::1;::::0;;9925:150:::1;::::0;;;25931:25:70;;;25987:2;25972:18;;25965:34;;;;26030:2;26015:18;;26008:34;25919:2;25904:18;;25729:319;9925:150:1::1;;;;;;;;9317:765;;;9166:916:::0;;;;;:::o;4853:893::-;5049:6;;;2042:10;-1:-1:-1;;;;;2064:11:1;2042:34;;2034:63;;;;-1:-1:-1;;;2034:63:1;;26255:2:70;2034:63:1;;;26237:21:70;26294:2;26274:18;;;26267:30;26333:18;26313;;;26306:46;26369:18;;2034:63:1;26053:340:70;2034:63:1;5169:41:::1;5182:6;:22;;;5206:3;5169:12;:41::i;:::-;5165:428;;;5226:15;5244:43;5257:6;5265:3;5270:6;5278:8;;5244:12;:43::i;:::-;-1:-1:-1::0;;;;5472:26:1;-1:-1:-1;830:1:65::1;::::0;-1:-1:-1;830:1:65;;-1:-1:-1;5447:135:1::1;::::0;-1:-1:-1;5447:135:1::1;5165:428;-1:-1:-1::0;;;;5674:26:1;-1:-1:-1;830:1:65::1;::::0;-1:-1:-1;830:1:65;2107::1::1;4853:893:::0;;;;;;;;;:::o;10684:124::-;10742:25;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10742:25:1;-1:-1:-1;10786:15:1;;;;:6;:15;;;;;;;;;10779:22;;;;;;;;;-1:-1:-1;;;;;10779:22:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10779:22:1;;;;;;;-1:-1:-1;;;10779:22:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10684:124::o;4528:292::-;4783:30;;-1:-1:-1;;;4783:30:1;;16871:2:70;4783:30:1;;;16853:21:70;16910:2;16890:18;;;16883:30;16949:22;16929:18;;;16922:50;4751:6:1;;;;16989:18:70;;4783:30:1;16669:344:70;10850:278:1;10922:17;10951:14;10989:3;10978:15;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10978:15:1;;;;;;;;;10968:26;;10978:15;10968:26;;;;11016:22;;;;:14;:22;;;;;;;;-1:-1:-1;10968:26:1;-1:-1:-1;11052:14:1;;;11048:74;;11094:17;;11082:29;;11048:74;10941:187;10850:278;;;:::o;11966:157::-;2227:5;;-1:-1:-1;;;;;2227:5:1;2213:10;:19;2205:41;;;;-1:-1:-1;;;2205:41:1;;15935:2:70;2205:41:1;;;15917:21:70;15974:1;15954:18;;;15947:29;-1:-1:-1;;;15992:18:70;;;15985:39;16041:18;;2205:41:1;15733:332:70;2205:41:1;-1:-1:-1;;;;;12048:22:1;::::1;12040:50;;;::::0;-1:-1:-1;;;12040:50:1;;27530:2:70;12040:50:1::1;::::0;::::1;27512:21:70::0;27569:2;27549:18;;;27542:30;27608:17;27588:18;;;27581:45;27643:18;;12040:50:1::1;27328:339:70::0;12040:50:1::1;12100:5;:16:::0;;-1:-1:-1;;12100:16:1::1;-1:-1:-1::0;;;;;12100:16:1;;;::::1;::::0;;;::::1;::::0;;11966:157::o;6488:806::-;6577:4;6593:17;6631:1;6613:15;:19;:74;;6671:15;6613:74;;;6643:16;6644:15;6643:16;:::i;:::-;6593:94;;6760:14;6798:3;6787:15;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6787:15:1;;;;;;;;;6777:26;;6787:15;6777:26;;;;6813:17;6833:22;;;:14;:22;;;;;;;6777:26;;-1:-1:-1;6833:22:1;6869:14;;;6865:74;;-1:-1:-1;6911:17:1;;6865:74;7107:10;7083:21;7180:53;7107:10;7223:9;7180:27;:53::i;:::-;7259:28;;;;;-1:-1:-1;;;;;6488:806:1;;;;;:::o;11632:247::-;2227:5;;-1:-1:-1;;;;;2227:5:1;2213:10;:19;2205:41;;;;-1:-1:-1;;;2205:41:1;;15935:2:70;2205:41:1;;;15917:21:70;15974:1;15954:18;;;15947:29;-1:-1:-1;;;15992:18:70;;;15985:39;16041:18;;2205:41:1;15733:332:70;2205:41:1;11749:4:::1;11736:9;:17;;11728:47;;;::::0;-1:-1:-1;;;11728:47:1;;16272:2:70;11728:47:1::1;::::0;::::1;16254:21:70::0;16311:2;16291:18;;;16284:30;16350:19;16330:18;;;16323:47;16387:18;;11728:47:1::1;16070:341:70::0;11728:47:1::1;11785:14;11823:3;11812:15;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;11812:15:1;;::::1;::::0;;;;;;11802:26;;11812:15:::1;11802:26:::0;;::::1;::::0;11838:22:::1;::::0;;;:14:::1;:22:::0;;;;;:34;;;;-1:-1:-1;;11632:247:1:o;1821:615:5:-;2116:17;;2151;;;;;2186:11;;;;;2215:19;;;;2252:13;;;;2283:17;;2318:22;;;;2358:24;;;;2058:361;;2001:15;;2058:361;;2092:6;;2116:17;;2151;;2186:11;2215:19;2252:13;2283:17;2318:22;2400:5;;2058:361;;:::i;:::-;;;;;;;;;;;;;2035:394;;;;;;2028:401;;1821:615;;;;;;:::o;4909:199::-;5027:17;5096:5;5064:28;5080:12;5064:13;:28;:::i;:::-;5063:38;;;;:::i;:::-;5056:45;4909:199;-1:-1:-1;;;4909:199:5:o;14:226:70:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:70;;14:226;-1:-1:-1;14:226:70:o;658:154::-;-1:-1:-1;;;;;737:5:70;733:54;726:5;723:65;713:93;;802:1;799;792:12;713:93;658:154;:::o;817:156::-;877:5;922:3;913:6;908:3;904:16;900:26;897:46;;;939:1;936;929:12;978:170;1052:5;1097:3;1088:6;1083:3;1079:16;1075:26;1072:46;;;1114:1;1111;1104:12;1153:347;1204:8;1214:6;1268:3;1261:4;1253:6;1249:17;1245:27;1235:55;;1286:1;1283;1276:12;1235:55;-1:-1:-1;1309:20:70;;1352:18;1341:30;;1338:50;;;1384:1;1381;1374:12;1338:50;1421:4;1413:6;1409:17;1397:29;;1473:3;1466:4;1457:6;1449;1445:19;1441:30;1438:39;1435:59;;;1490:1;1487;1480:12;1435:59;1153:347;;;;;:::o;1505:829::-;1672:6;1680;1688;1696;1704;1757:3;1745:9;1736:7;1732:23;1728:33;1725:53;;;1774:1;1771;1764:12;1725:53;1813:9;1800:23;1832:31;1857:5;1832:31;:::i;:::-;1882:5;-1:-1:-1;1906:63:70;1961:7;1956:2;1941:18;;1906:63;:::i;:::-;1896:73;;1988:78;2058:7;2052:3;2041:9;2037:19;1988:78;:::i;:::-;1978:88;;2117:3;2106:9;2102:19;2089:33;2145:18;2137:6;2134:30;2131:50;;;2177:1;2174;2167:12;2131:50;2216:58;2266:7;2257:6;2246:9;2242:22;2216:58;:::i;:::-;1505:829;;;;-1:-1:-1;1505:829:70;;-1:-1:-1;2293:8:70;;2190:84;1505:829;-1:-1:-1;;;1505:829:70:o;2546:158::-;2609:5;2654:2;2645:6;2640:3;2636:16;2632:25;2629:45;;;2670:1;2667;2660:12;2709:807;2865:6;2873;2881;2889;2897;2950:3;2938:9;2929:7;2925:23;2921:33;2918:53;;;2967:1;2964;2957:12;2918:53;3006:9;2993:23;3025:31;3050:5;3025:31;:::i;:::-;3075:5;-1:-1:-1;3099:63:70;3154:7;3149:2;3134:18;;3099:63;:::i;:::-;3089:73;;3181:67;3240:7;3234:3;3223:9;3219:19;3181:67;:::i;:::-;3171:77;;3299:3;3288:9;3284:19;3271:33;3327:18;3319:6;3316:30;3313:50;;;3359:1;3356;3349:12;3934:826;4033:6;4041;4049;4057;4065;4118:2;4106:9;4097:7;4093:23;4089:32;4086:52;;;4134:1;4131;4124:12;4086:52;4179:23;;;-1:-1:-1;4277:2:70;4262:18;;4249:32;4304:18;4293:30;;4290:50;;;4336:1;4333;4326:12;4290:50;4375:58;4425:7;4416:6;4405:9;4401:22;4375:58;:::i;:::-;4452:8;;-1:-1:-1;4349:84:70;-1:-1:-1;;4540:2:70;4525:18;;4512:32;4569:18;4556:32;;4553:52;;;4601:1;4598;4591:12;5757:873;5986:13;;-1:-1:-1;;;;;5982:62:70;5964:81;;6092:4;6080:17;;;6074:24;5951:3;5936:19;;;6107:61;;6147:20;;6074:24;-1:-1:-1;;;;;5246:5:70;5240:12;5236:61;5231:3;5224:74;-1:-1:-1;;;;;5351:4:70;5344:5;5340:16;5334:23;5330:72;5323:4;5318:3;5314:14;5307:96;5464:8;5456:4;5449:5;5445:16;5439:23;5435:38;5428:4;5423:3;5419:14;5412:62;5537:4;5530:5;5526:16;5520:23;5517:1;5506:38;5499:4;5494:3;5490:14;5483:62;-1:-1:-1;;;;;5598:4:70;5591:5;5587:16;5581:23;5577:72;5570:4;5565:3;5561:14;5554:96;;;5163:493;6107:61;;6238:4;6230:6;6226:17;6220:24;6213:32;6206:40;6199:4;6188:9;6184:20;6177:70;6303:4;6295:6;6291:17;6285:24;6278:4;6267:9;6263:20;6256:54;6368:4;6360:6;6356:17;6350:24;6341:6;6330:9;6326:22;6319:56;6433:4;6425:6;6421:17;6415:24;6406:6;6395:9;6391:22;6384:56;6498:4;6490:6;6486:17;6480:24;6471:6;6460:9;6456:22;6449:56;6554:4;6546:6;6542:17;6536:24;6569:55;6616:6;6605:9;6601:22;6585:14;5731:13;5724:21;5712:34;;5661:91;6569:55;;5757:873;;;;:::o;6635:1139::-;6888:6;6896;6904;6912;6920;6928;6936;6989:3;6977:9;6968:7;6964:23;6960:33;6957:53;;;7006:1;7003;6996:12;6957:53;7045:9;7032:23;7064:31;7089:5;7064:31;:::i;:::-;7114:5;-1:-1:-1;7138:63:70;7193:7;7188:2;7173:18;;7138:63;:::i;:::-;7128:73;;7220:78;7290:7;7284:3;7273:9;7269:19;7220:78;:::i;:::-;7210:88;-1:-1:-1;7371:3:70;7356:19;;7343:33;;-1:-1:-1;7475:3:70;7460:19;;7447:33;;-1:-1:-1;7557:3:70;7542:19;;7529:33;7585:18;7574:30;;7571:50;;;7617:1;7614;7607:12;7571:50;7656:58;7706:7;7697:6;7686:9;7682:22;7656:58;:::i;:::-;6635:1139;;;;-1:-1:-1;6635:1139:70;;-1:-1:-1;6635:1139:70;;;;7630:84;;-1:-1:-1;;;6635:1139:70:o;8090:160::-;8156:20;;8216:1;8205:20;;;8195:31;;8185:59;;8240:1;8237;8230:12;8185:59;8090:160;;;:::o;8255:588::-;8367:6;8375;8383;8391;8444:3;8432:9;8423:7;8419:23;8415:33;8412:53;;;8461:1;8458;8451:12;8412:53;8500:9;8487:23;8519:31;8544:5;8519:31;:::i;:::-;8569:5;-1:-1:-1;8593:63:70;8648:7;8643:2;8628:18;;8593:63;:::i;:::-;8583:73;;8708:3;8697:9;8693:19;8680:33;8722;8747:7;8722:33;:::i;:::-;8774:7;-1:-1:-1;8800:37:70;8832:3;8817:19;;8800:37;:::i;:::-;8790:47;;8255:588;;;;;;;:::o;8848:240::-;8935:6;8988:3;8976:9;8967:7;8963:23;8959:33;8956:53;;;9005:1;9002;8995:12;8956:53;9028:54;9074:7;9063:9;9028:54;:::i;9536:819::-;-1:-1:-1;;;;;9935:55:70;;9917:74;;9904:3;9889:19;;10000:53;10049:2;10034:18;;10026:6;-1:-1:-1;;;;;5246:5:70;5240:12;5236:61;5231:3;5224:74;-1:-1:-1;;;;;5351:4:70;5344:5;5340:16;5334:23;5330:72;5323:4;5318:3;5314:14;5307:96;5464:8;5456:4;5449:5;5445:16;5439:23;5435:38;5428:4;5423:3;5419:14;5412:62;5537:4;5530:5;5526:16;5520:23;5517:1;5506:38;5499:4;5494:3;5490:14;5483:62;-1:-1:-1;;;;;5598:4:70;5591:5;5587:16;5581:23;5577:72;5570:4;5565:3;5561:14;5554:96;;;5163:493;10000:53;10097:14;;10090:22;10084:3;10069:19;;10062:51;10144:3;10129:19;;10122:35;;;;10188:3;10173:19;;10166:35;;;;10232:3;10217:19;;10210:35;;;;10276:3;10261:19;;10254:35;10333:14;10326:22;10320:3;10305:19;;;10298:51;9536:819;;-1:-1:-1;;9536:819:70:o;10360:962::-;10559:6;10567;10575;10583;10591;10599;10652:3;10640:9;10631:7;10627:23;10623:33;10620:53;;;10669:1;10666;10659:12;10620:53;10708:9;10695:23;10727:31;10752:5;10727:31;:::i;:::-;10777:5;-1:-1:-1;10801:63:70;10856:7;10851:2;10836:18;;10801:63;:::i;:::-;10791:73;;10883:67;10942:7;10936:3;10925:9;10921:19;10883:67;:::i;:::-;10873:77;-1:-1:-1;11023:3:70;11008:19;;10995:33;;-1:-1:-1;11105:3:70;11090:19;;11077:33;11133:18;11122:30;;11119:50;;;11165:1;11162;11155:12;11119:50;11204:58;11254:7;11245:6;11234:9;11230:22;11204:58;:::i;:::-;10360:962;;;;-1:-1:-1;10360:962:70;;-1:-1:-1;10360:962:70;;11281:8;;10360:962;-1:-1:-1;;;10360:962:70:o;11619:915::-;11753:6;11761;11769;11777;11785;11793;11846:3;11834:9;11825:7;11821:23;11817:33;11814:53;;;11863:1;11860;11853:12;11814:53;11902:9;11889:23;11921:31;11946:5;11921:31;:::i;:::-;11971:5;-1:-1:-1;11995:63:70;12050:7;12045:2;12030:18;;11995:63;:::i;:::-;11985:73;-1:-1:-1;12131:3:70;12116:19;;12103:33;;-1:-1:-1;12235:3:70;12220:19;;12207:33;;-1:-1:-1;12317:3:70;12302:19;;12289:33;12345:18;12334:30;;12331:50;;;12377:1;12374;12367:12;12792:517;12897:6;12905;12913;12966:3;12954:9;12945:7;12941:23;12937:33;12934:53;;;12983:1;12980;12973:12;12934:53;13022:9;13009:23;13041:31;13066:5;13041:31;:::i;:::-;13091:5;-1:-1:-1;13115:63:70;13170:7;13165:2;13150:18;;13115:63;:::i;:::-;13105:73;;13230:3;13219:9;13215:19;13202:33;13244;13269:7;13244:33;:::i;:::-;13296:7;13286:17;;;12792:517;;;;;:::o;13314:247::-;13373:6;13426:2;13414:9;13405:7;13401:23;13397:32;13394:52;;;13442:1;13439;13432:12;13394:52;13481:9;13468:23;13500:31;13525:5;13500:31;:::i;13566:353::-;13661:6;13669;13722:3;13710:9;13701:7;13697:23;13693:33;13690:53;;;13739:1;13736;13729:12;13690:53;13784:23;;;-1:-1:-1;13850:63:70;13905:7;13900:2;13885:18;;13850:63;:::i;:::-;13840:73;;13566:353;;;;;:::o;13924:355::-;14020:6;14028;14081:3;14069:9;14060:7;14056:23;14052:33;14049:53;;;14098:1;14095;14088:12;14049:53;14121:54;14167:7;14156:9;14121:54;:::i;:::-;14111:64;14244:3;14229:19;;;;14216:33;;-1:-1:-1;;;13924:355:70:o;17361:127::-;17422:10;17417:3;17413:20;17410:1;17403:31;17453:4;17450:1;17443:15;17477:4;17474:1;17467:15;17493:275;17564:2;17558:9;17629:2;17610:13;;-1:-1:-1;;17606:27:70;17594:40;;17664:18;17649:34;;17685:22;;;17646:62;17643:88;;;17711:18;;:::i;:::-;17747:2;17740:22;17493:275;;-1:-1:-1;17493:275:70:o;17773:999::-;17859:6;17867;17875;17928:2;17916:9;17907:7;17903:23;17899:32;17896:52;;;17944:1;17941;17934:12;17896:52;17989:23;;;-1:-1:-1;18109:2:70;18094:18;;18081:32;;-1:-1:-1;18190:2:70;18175:18;;18162:32;18217:18;18206:30;;18203:50;;;18249:1;18246;18239:12;18203:50;18272:22;;18325:4;18317:13;;18313:27;-1:-1:-1;18303:55:70;;18354:1;18351;18344:12;18303:55;18394:2;18381:16;18420:18;18412:6;18409:30;18406:56;;;18442:18;;:::i;:::-;18484:57;18531:2;18508:17;;-1:-1:-1;;18504:31:70;18537:2;18500:40;18484:57;:::i;:::-;18564:6;18557:5;18550:21;18612:7;18607:2;18598:6;18594:2;18590:15;18586:24;18583:37;18580:57;;;18633:1;18630;18623:12;18580:57;18688:6;18683:2;18679;18675:11;18670:2;18663:5;18659:14;18646:49;18740:1;18735:2;18726:6;18719:5;18715:18;18711:27;18704:38;18761:5;18751:15;;;;;17773:999;;;;;:::o;18777:127::-;18838:10;18833:3;18829:20;18826:1;18819:31;18869:4;18866:1;18859:15;18893:4;18890:1;18883:15;18909:125;18974:9;;;18995:10;;;18992:36;;;19008:18;;:::i;19736:161::-;19803:20;;19863:8;19852:20;;19842:31;;19832:59;;19887:1;19884;19877:12;19902:986;19987:6;20047:3;20035:9;20026:7;20022:23;20018:33;20063:2;20060:22;;;20078:1;20075;20068:12;20060:22;-1:-1:-1;20147:2:70;20141:9;20189:3;20177:16;;20223:18;20208:34;;20244:22;;;20205:62;20202:88;;;20270:18;;:::i;:::-;20306:2;20299:22;20343:23;;20375:31;20343:23;20375:31;:::i;:::-;20415:21;;20488:2;20473:18;;20460:32;20501:33;20460:32;20501:33;:::i;:::-;20562:2;20550:15;;20543:32;20608:37;20641:2;20626:18;;20608:37;:::i;:::-;20603:2;20595:6;20591:15;20584:62;20679:36;20711:2;20700:9;20696:18;20679:36;:::i;:::-;20674:2;20666:6;20662:15;20655:61;20768:3;20757:9;20753:19;20740:33;20782;20807:7;20782:33;:::i;:::-;20843:3;20831:16;;20824:33;20835:6;19902:986;-1:-1:-1;;;19902:986:70:o;20893:160::-;20958:20;;21014:13;;21007:21;20997:32;;20987:60;;21043:1;21040;21033:12;21058:753;21146:6;21206:2;21194:9;21185:7;21181:23;21177:32;21221:2;21218:22;;;21236:1;21233;21226:12;21218:22;-1:-1:-1;21305:2:70;21299:9;21347:2;21335:15;;21380:18;21365:34;;21401:22;;;21362:62;21359:88;;;21427:18;;:::i;:::-;21463:2;21456:22;21502:26;21518:9;21502:26;:::i;:::-;21487:42;;21598:2;21583:18;;;21570:32;21618:15;;;21611:30;21693:2;21678:18;;21665:32;21706:33;21665:32;21706:33;:::i;:::-;21767:2;21755:15;;21748:32;21759:6;21058:753;-1:-1:-1;;;21058:753:70:o;21816:135::-;21855:3;21876:17;;;21873:43;;21896:18;;:::i;:::-;-1:-1:-1;21943:1:70;21932:13;;21816:135::o;21956:180::-;22012:6;22065:2;22053:9;22044:7;22040:23;22036:32;22033:52;;;22081:1;22078;22071:12;22033:52;22104:26;22120:9;22104:26;:::i;22141:683::-;22372:6;22361:9;22354:25;-1:-1:-1;;;;;22419:6:70;22415:55;22410:2;22399:9;22395:18;22388:83;22507:3;22502:2;22491:9;22487:18;22480:31;22335:4;22540:6;22534:13;22584:6;22578:3;22567:9;22563:19;22556:35;22644:6;22639:2;22631:6;22627:15;22621:3;22610:9;22606:19;22600:51;22701:1;22695:3;22686:6;22675:9;22671:22;22667:32;22660:43;22771:3;22764:2;22760:7;22755:2;22747:6;22743:15;22739:29;22728:9;22724:45;22720:55;22712:63;;;22811:6;22806:2;22795:9;22791:18;22784:34;22141:683;;;;;;;:::o;22829:1059::-;22994:3;23038:6;23025:20;23054:31;23079:5;23054:31;:::i;:::-;-1:-1:-1;;;;;23134:54:70;23122:67;;23221:4;23263:17;;;23250:31;;23212:14;;23290:33;23250:31;23290:33;:::i;:::-;-1:-1:-1;;;;;23381:56:70;;23362:76;;23479:4;23463:21;;23556:8;23518:36;23548:4;23536:17;;23518:36;:::i;:::-;23514:51;23500:12;23493:73;23621:35;23650:4;23642:6;23638:17;23621:35;:::i;:::-;23618:1;23607:50;23600:4;23586:12;23582:23;23575:83;23707:4;23699:6;23695:17;23682:31;23667:46;;23722:33;23747:7;23722:33;:::i;:::-;-1:-1:-1;;;;;23800:7:70;23796:56;23789:4;23775:12;23771:23;23764:89;;;;23878:3;23873;23869:13;23862:20;;22829:1059;;;;:::o;24917:136::-;24952:3;-1:-1:-1;;;24973:22:70;;24970:48;;24998:18;;:::i;:::-;-1:-1:-1;25038:1:70;25034:13;;24917:136::o;25058:168::-;25131:9;;;25162;;25179:15;;;25173:22;;25159:37;25149:71;;25200:18;;:::i;25231:217::-;25271:1;25297;25287:132;;25341:10;25336:3;25332:20;25329:1;25322:31;25376:4;25373:1;25366:15;25404:4;25401:1;25394:15;25287:132;-1:-1:-1;25433:9:70;;25231:217::o;25453:271::-;25636:6;25628;25623:3;25610:33;25592:3;25662:16;;25687:13;;;25662:16;25453:271;-1:-1:-1;25453:271:70:o;26398:925::-;26586:3;26571:19;;26612:20;;26641:31;26612:20;26641:31;:::i;:::-;-1:-1:-1;;;;;26699:54:70;26681:73;;26803:4;26791:17;;26778:31;26818:33;26778:31;26818:33;:::i;:::-;-1:-1:-1;;;;;26889:56:70;26882:4;26867:20;;26860:86;27026:8;26988:36;27018:4;27006:17;;26988:36;:::i;:::-;26984:51;26977:4;26966:9;26962:20;26955:81;27088:35;27117:4;27109:6;27105:17;27088:35;:::i;:::-;27085:1;27074:50;27067:4;27056:9;27052:20;27045:80;27174:4;27166:6;27162:17;27149:31;27189:33;27214:7;27189:33;:::i;:::-;-1:-1:-1;;;;;27264:7:70;27260:56;27253:4;27242:9;27238:20;27231:86;;26398:925;;;;:::o;27802:1033::-;28282:26;28278:31;28269:6;28265:2;28261:15;28257:53;28252:3;28245:66;28366:26;28362:31;28353:6;28349:2;28345:15;28341:53;28336:2;28331:3;28327:12;28320:75;28404:40;28440:2;28435:3;28431:12;28423:6;27746:2;27742:14;-1:-1:-1;;27738:52:70;27726:65;;27672:125;28404:40;28500:3;28478:16;;;28496:18;28474:41;28469:2;28460:12;;28453:63;28546:16;;;28541:2;28532:12;;28525:38;28572:40;28608:2;28599:12;;28591:6;27746:2;27742:14;-1:-1:-1;;27738:52:70;27726:65;;27672:125;28572:40;28665:6;28658:14;28651:22;28646:3;28642:32;28637:2;28632:3;28628:12;28621:54;28705:6;28700:2;28695:3;28691:12;28684:28;28721:41;28757:3;28752;28748:13;28740:6;27746:2;27742:14;-1:-1:-1;;27738:52:70;27726:65;;27672:125;28721:41;28787:3;28778:13;;28771:29;;;;28825:3;28816:13;;27802:1033;-1:-1:-1;;;;;;;;;27802:1033:70:o","linkReferences":{},"immutableReferences":{"1148":[{"start":1245,"length":32},{"start":3779,"length":32}],"1151":[{"start":582,"length":32},{"start":3196,"length":32}],"1155":[{"start":911,"length":32},{"start":2953,"length":32}]}},"methodIdentifiers":{"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":"9f063efc","afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":"e1b4af69","afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)":"6fe7e6eb","afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":"6c2bbe7e","afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)":"b47b2fb1","beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":"259982e5","beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":"b6a8b0fa","beforeInitialize(address,(address,address,uint24,int24,address),uint160)":"dc98354e","beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":"21d0ee70","beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":"575e24b4","executeVaultOrder(bytes32,bytes,bytes)":"5004194e","fallbackToAMM(bytes32)":"00e4fe01","getOrder(bytes32)":"5778472a","getVaultThreshold((address,address,uint24,int24,address))":"8f9316a5","isLargeOrder(int256,(address,address,uint24,int24,address))":"f3539e8a","orderNonce()":"16f8de89","orderVault()":"93845e46","orders(bytes32)":"9c3f1e90","owner()":"8da5cb5b","poolManager()":"dc4c90d3","poolThresholds(bytes32)":"cd9a56e8","routeToVault(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":"28cd016b","serviceManager()":"3998fdd3","setPoolThreshold((address,address,uint24,int24,address),uint256)":"f57f9a7d","transferOwnership(address)":"f2fde38b","updateVaultThreshold(uint256)":"02d9c708","usedCommitments(bytes32)":"91402039","vaultThresholdBps()":"9f660175"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_poolManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_serviceManager\",\"type\":\"address\"},{\"internalType\":\"contract IOrderVault\",\"name\":\"_orderVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"OrderFallbackToAMM\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"indexed\":true,\"internalType\":\"struct PoolKey\",\"name\":\"poolKey\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSpecified\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"OrderRoutedToVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"}],\"name\":\"VaultOrderExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"}],\"name\":\"VaultThresholdUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"executeVaultOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"fallbackToAMM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"poolKey\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"internalType\":\"struct IEigenVaultHook.PrivateOrder\",\"name\":\"order\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"getVaultThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"isLargeOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderVault\",\"outputs\":[{\"internalType\":\"contract IOrderVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"poolKey\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"poolThresholds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"routeToVault\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"serviceManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"setPoolThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"}],\"name\":\"updateVaultThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedCommitments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultThresholdBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\",\"tick\":\"The current tick after the state of a pool is initialized\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"params\":{\"delta\":\"The amount owed to the caller (positive) or owed to the pool (negative)\",\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"_2\":\"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)\"}},\"constructor\":{\"params\":{\"_orderVault\":\"The order vault contract\",\"_poolManager\":\"The Uniswap v4 pool manager\",\"_serviceManager\":\"The EigenLayer service manager\"}},\"executeVaultOrder(bytes32,bytes,bytes)\":{\"params\":{\"orderId\":\"The order identifier\",\"proof\":\"The ZK proof of valid matching\",\"signatures\":\"The operator signatures\"}},\"fallbackToAMM(bytes32)\":{\"params\":{\"orderId\":\"The order identifier\"}},\"getOrder(bytes32)\":{\"params\":{\"orderId\":\"The order identifier\"},\"returns\":{\"order\":\"The private order details\"}},\"getVaultThreshold((address,address,uint24,int24,address))\":{\"params\":{\"key\":\"The pool key\"},\"returns\":{\"threshold\":\"The threshold in basis points\"}},\"isLargeOrder(int256,(address,address,uint24,int24,address))\":{\"params\":{\"amountSpecified\":\"The amount being swapped\",\"key\":\"The pool key\"},\"returns\":{\"_0\":\"Whether the order should be routed to vault\"}},\"routeToVault(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"params\":{\"hookData\":\"Additional hook data\",\"key\":\"The pool key\",\"params\":\"The swap parameters\",\"trader\":\"The trader address\"},\"returns\":{\"orderId\":\"The unique order identifier\"}},\"setPoolThreshold((address,address,uint24,int24,address),uint256)\":{\"params\":{\"key\":\"The pool key\",\"threshold\":\"The threshold in basis points\"}},\"transferOwnership(address)\":{\"params\":{\"newOwner\":\"The new owner address\"}},\"updateVaultThreshold(uint256)\":{\"params\":{\"newThreshold\":\"The new threshold in basis points\"}}},\"title\":\"SimplifiedEigenVaultHook\",\"version\":1},\"userdoc\":{\"events\":{\"OrderFallbackToAMM(bytes32,address,string)\":{\"notice\":\"Emitted when an order falls back to AMM\"},\"OrderRoutedToVault(address,bytes32,(address,address,uint24,int24,address),bool,uint256,bytes32)\":{\"notice\":\"Emitted when a large order is routed to the vault\"},\"VaultOrderExecuted(bytes32,address,uint256,uint256,bytes32)\":{\"notice\":\"Emitted when a vault order is executed\"},\"VaultThresholdUpdated(uint256,uint256)\":{\"notice\":\"Emitted when vault threshold is updated\"}},\"kind\":\"user\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is added\"},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate\"},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"notice\":\"The hook called after the state of a pool is initialized\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is removed\"},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"notice\":\"The hook called after a swap\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is added\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"notice\":\"The hook called before the state of a pool is initialized\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is removed\"},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"The hook called before a swap\"},\"constructor\":{\"notice\":\"Constructor\"},\"executeVaultOrder(bytes32,bytes,bytes)\":{\"notice\":\"Execute a matched vault order\"},\"fallbackToAMM(bytes32)\":{\"notice\":\"Fallback to AMM execution for unmatched orders\"},\"getOrder(bytes32)\":{\"notice\":\"Get order details\"},\"getVaultThreshold((address,address,uint24,int24,address))\":{\"notice\":\"Get vault threshold for a pool\"},\"isLargeOrder(int256,(address,address,uint24,int24,address))\":{\"notice\":\"Check if an order qualifies as a large order for vault routing\"},\"orderNonce()\":{\"notice\":\"Order nonce counter\"},\"orderVault()\":{\"notice\":\"The order vault contract for encrypted order storage\"},\"orders(bytes32)\":{\"notice\":\"Mapping of order IDs to order details\"},\"owner()\":{\"notice\":\"Contract owner\"},\"poolManager()\":{\"notice\":\"The pool manager\"},\"poolThresholds(bytes32)\":{\"notice\":\"Mapping of pool keys to custom thresholds\"},\"routeToVault(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"Route a large order to the AVS for private matching\"},\"serviceManager()\":{\"notice\":\"The service manager contract for EigenLayer AVS\"},\"setPoolThreshold((address,address,uint24,int24,address),uint256)\":{\"notice\":\"Set pool-specific threshold\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership\"},\"updateVaultThreshold(uint256)\":{\"notice\":\"Update vault threshold (admin only)\"},\"usedCommitments(bytes32)\":{\"notice\":\"Mapping of order commitments to prevent replay\"},\"vaultThresholdBps()\":{\"notice\":\"Default vault threshold in basis points (1% = 100 bps)\"}},\"notice\":\"A simplified version of EigenVault Hook for demonstration\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/SimplifiedEigenVaultHook.sol\":\"SimplifiedEigenVaultHook\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/src/\",\":@eigenlayer/=lib/eigenlayer-contracts/src/contracts/\",\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\",\":zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/\"]},\"sources\":{\"contracts/src/SimplifiedEigenVaultHook.sol\":{\"keccak256\":\"0x951c6fa76ed459631fd73cb6295892d235487bb719873f4198bae43007f30252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://221ed4fce9cd7083f2fd42c623c0f323a42e5eee3c8a49424916416cdf009a76\",\"dweb:/ipfs/QmdjPjQvhGfyhFD84DL31iopcfjpYTwdaqgTtJkSKUuFaX\"]},\"contracts/src/interfaces/IEigenVaultHook.sol\":{\"keccak256\":\"0x9d2992dd8717a7213f0c75283aebdfad9c83a1b4a5c05cb2b894fc106c1441e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c0c7646adca5b5af59d09155c2b07e2d167c5740c1a775b5e2ad5c877746906\",\"dweb:/ipfs/QmawFrV1ax6MSE8ZYWQgG35dR1bW43rUE9mVdC8CfmW9zZ\"]},\"contracts/src/interfaces/IOrderVault.sol\":{\"keccak256\":\"0xc5ff6358b8e9cce00dc4adabf8b9c0204c65829fdf0187fc39095739308fcc9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baa00c37407a03afa88a2e1553a593ac95047ad710d7d5c86d673de1cd64f51c\",\"dweb:/ipfs/QmS3QkD1Pej8Fnyn8mMBuAhGy5cd5Wh5NBveHz3kZsFkUx\"]},\"contracts/src/libraries/OrderLib.sol\":{\"keccak256\":\"0xd978876b8767b4229a681ef7a35c03e84de731105250bb6ed383829b84e14cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2da82c1d75636416de6e25103c401a7a8e40ffbbdb667d881395e5cab35a83fe\",\"dweb:/ipfs/QmYxd2NYteKQUHicH2yB8cbVbgu9MWJyyB1TqjKtNW9YHy\"]},\"lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c\",\"dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb\"]},\"lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27\",\"dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V\"]},\"lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0x27b1c3b8aa3d07d8e3123970695745929315685a5ffaa7342c3ba3582f37fecb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa3bb092dc205eaa1b9defc93e9bbad5f4c5c44e1c4aa531dfca2574c2aba9ba\",\"dweb:/ipfs/QmR1soxkepHNkbGxAMaK4XqhQ4VxWn69dewzGkQJNx5byM\"]},\"lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475\",\"dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J\"]},\"lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17\",\"dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa\"]},\"lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IPoolManager","name":"_poolManager","type":"address"},{"internalType":"address","name":"_serviceManager","type":"address"},{"internalType":"contract IOrderVault","name":"_orderVault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32","indexed":true},{"internalType":"address","name":"trader","type":"address","indexed":true},{"internalType":"string","name":"reason","type":"string","indexed":false}],"type":"event","name":"OrderFallbackToAMM","anonymous":false},{"inputs":[{"internalType":"address","name":"trader","type":"address","indexed":true},{"internalType":"bytes32","name":"orderId","type":"bytes32","indexed":true},{"internalType":"struct PoolKey","name":"poolKey","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}],"indexed":true},{"internalType":"bool","name":"zeroForOne","type":"bool","indexed":false},{"internalType":"uint256","name":"amountSpecified","type":"uint256","indexed":false},{"internalType":"bytes32","name":"commitment","type":"bytes32","indexed":false}],"type":"event","name":"OrderRoutedToVault","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32","indexed":true},{"internalType":"address","name":"trader","type":"address","indexed":true},{"internalType":"uint256","name":"amountIn","type":"uint256","indexed":false},{"internalType":"uint256","name":"amountOut","type":"uint256","indexed":false},{"internalType":"bytes32","name":"proofHash","type":"bytes32","indexed":false}],"type":"event","name":"VaultOrderExecuted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"oldThreshold","type":"uint256","indexed":false},{"internalType":"uint256","name":"newThreshold","type":"uint256","indexed":false}],"type":"event","name":"VaultThresholdUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"struct PoolKey","name":"","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct IPoolManager.ModifyLiquidityParams","name":"","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"BalanceDelta","name":"","type":"int256"},{"internalType":"BalanceDelta","name":"","type":"int256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function","name":"afterAddLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"BalanceDelta","name":"","type":"int256"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"struct PoolKey","name":"","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function","name":"afterDonate","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"struct PoolKey","name":"","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint160","name":"","type":"uint160"},{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"pure","type":"function","name":"afterInitialize","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"struct PoolKey","name":"","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct IPoolManager.ModifyLiquidityParams","name":"","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"BalanceDelta","name":"","type":"int256"},{"internalType":"BalanceDelta","name":"","type":"int256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function","name":"afterRemoveLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"BalanceDelta","name":"","type":"int256"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"struct PoolKey","name":"","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct IPoolManager.SwapParams","name":"","type":"tuple","components":[{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}]},{"internalType":"BalanceDelta","name":"","type":"int256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function","name":"afterSwap","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"int128","name":"","type":"int128"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"struct PoolKey","name":"","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct IPoolManager.ModifyLiquidityParams","name":"","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function","name":"beforeAddLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"struct PoolKey","name":"","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function","name":"beforeDonate","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"struct PoolKey","name":"","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint160","name":"","type":"uint160"}],"stateMutability":"pure","type":"function","name":"beforeInitialize","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"struct PoolKey","name":"","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct IPoolManager.ModifyLiquidityParams","name":"","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function","name":"beforeRemoveLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct IPoolManager.SwapParams","name":"params","type":"tuple","components":[{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeSwap","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"BeforeSwapDelta","name":"","type":"int256"},{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"},{"internalType":"bytes","name":"proof","type":"bytes"},{"internalType":"bytes","name":"signatures","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"executeVaultOrder"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"fallbackToAMM"},{"inputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getOrder","outputs":[{"internalType":"struct IEigenVaultHook.PrivateOrder","name":"order","type":"tuple","components":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"struct PoolKey","name":"poolKey","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"bytes32","name":"commitment","type":"bytes32"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"executed","type":"bool"}]}]},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]}],"stateMutability":"view","type":"function","name":"getVaultThreshold","outputs":[{"internalType":"uint256","name":"threshold","type":"uint256"}]},{"inputs":[{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]}],"stateMutability":"view","type":"function","name":"isLargeOrder","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"orderNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"orderVault","outputs":[{"internalType":"contract IOrderVault","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"orders","outputs":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"struct PoolKey","name":"poolKey","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"bytes32","name":"commitment","type":"bytes32"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"executed","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"poolManager","outputs":[{"internalType":"contract IPoolManager","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"poolThresholds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"trader","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct IPoolManager.SwapParams","name":"params","type":"tuple","components":[{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"routeToVault","outputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"serviceManager","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint256","name":"threshold","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setPoolThreshold"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[{"internalType":"uint256","name":"newThreshold","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateVaultThreshold"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"usedCommitments","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"vaultThresholdBps","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"params":{"delta":"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta","feesAccrued":"The fees accrued since the last time fees were collected from this position","hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook","key":"The key for the pool","params":"The parameters for adding liquidity","sender":"The initial msg.sender for the add liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"}},"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"params":{"amount0":"The amount of token0 being donated","amount1":"The amount of token1 being donated","hookData":"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook","key":"The key for the pool","sender":"The initial msg.sender for the donate call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)":{"params":{"key":"The key for the pool being initialized","sender":"The initial msg.sender for the initialize call","sqrtPriceX96":"The sqrt(price) of the pool as a Q64.96","tick":"The current tick after the state of a pool is initialized"},"returns":{"_0":"bytes4 The function selector for the hook"}},"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"params":{"delta":"The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta","feesAccrued":"The fees accrued since the last time fees were collected from this position","hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook","key":"The key for the pool","params":"The parameters for removing liquidity","sender":"The initial msg.sender for the remove liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"}},"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)":{"params":{"delta":"The amount owed to the caller (positive) or owed to the pool (negative)","hookData":"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook","key":"The key for the pool","params":"The parameters for the swap","sender":"The initial msg.sender for the swap call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"}},"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"params":{"hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook","key":"The key for the pool","params":"The parameters for adding liquidity","sender":"The initial msg.sender for the add liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"params":{"amount0":"The amount of token0 being donated","amount1":"The amount of token1 being donated","hookData":"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook","key":"The key for the pool","sender":"The initial msg.sender for the donate call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeInitialize(address,(address,address,uint24,int24,address),uint160)":{"params":{"key":"The key for the pool being initialized","sender":"The initial msg.sender for the initialize call","sqrtPriceX96":"The sqrt(price) of the pool as a Q64.96"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"params":{"hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook","key":"The key for the pool","params":"The parameters for removing liquidity","sender":"The initial msg.sender for the remove liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":{"params":{"hookData":"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook","key":"The key for the pool","params":"The parameters for the swap","sender":"The initial msg.sender for the swap call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency","_2":"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"}},"constructor":{"params":{"_orderVault":"The order vault contract","_poolManager":"The Uniswap v4 pool manager","_serviceManager":"The EigenLayer service manager"}},"executeVaultOrder(bytes32,bytes,bytes)":{"params":{"orderId":"The order identifier","proof":"The ZK proof of valid matching","signatures":"The operator signatures"}},"fallbackToAMM(bytes32)":{"params":{"orderId":"The order identifier"}},"getOrder(bytes32)":{"params":{"orderId":"The order identifier"},"returns":{"order":"The private order details"}},"getVaultThreshold((address,address,uint24,int24,address))":{"params":{"key":"The pool key"},"returns":{"threshold":"The threshold in basis points"}},"isLargeOrder(int256,(address,address,uint24,int24,address))":{"params":{"amountSpecified":"The amount being swapped","key":"The pool key"},"returns":{"_0":"Whether the order should be routed to vault"}},"routeToVault(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":{"params":{"hookData":"Additional hook data","key":"The pool key","params":"The swap parameters","trader":"The trader address"},"returns":{"orderId":"The unique order identifier"}},"setPoolThreshold((address,address,uint24,int24,address),uint256)":{"params":{"key":"The pool key","threshold":"The threshold in basis points"}},"transferOwnership(address)":{"params":{"newOwner":"The new owner address"}},"updateVaultThreshold(uint256)":{"params":{"newThreshold":"The new threshold in basis points"}}},"version":1},"userdoc":{"kind":"user","methods":{"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"notice":"The hook called after liquidity is added"},"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"notice":"The hook called after donate"},"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)":{"notice":"The hook called after the state of a pool is initialized"},"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"notice":"The hook called after liquidity is removed"},"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)":{"notice":"The hook called after a swap"},"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"notice":"The hook called before liquidity is added"},"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"notice":"The hook called before donate"},"beforeInitialize(address,(address,address,uint24,int24,address),uint160)":{"notice":"The hook called before the state of a pool is initialized"},"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"notice":"The hook called before liquidity is removed"},"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":{"notice":"The hook called before a swap"},"constructor":{"notice":"Constructor"},"executeVaultOrder(bytes32,bytes,bytes)":{"notice":"Execute a matched vault order"},"fallbackToAMM(bytes32)":{"notice":"Fallback to AMM execution for unmatched orders"},"getOrder(bytes32)":{"notice":"Get order details"},"getVaultThreshold((address,address,uint24,int24,address))":{"notice":"Get vault threshold for a pool"},"isLargeOrder(int256,(address,address,uint24,int24,address))":{"notice":"Check if an order qualifies as a large order for vault routing"},"orderNonce()":{"notice":"Order nonce counter"},"orderVault()":{"notice":"The order vault contract for encrypted order storage"},"orders(bytes32)":{"notice":"Mapping of order IDs to order details"},"owner()":{"notice":"Contract owner"},"poolManager()":{"notice":"The pool manager"},"poolThresholds(bytes32)":{"notice":"Mapping of pool keys to custom thresholds"},"routeToVault(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":{"notice":"Route a large order to the AVS for private matching"},"serviceManager()":{"notice":"The service manager contract for EigenLayer AVS"},"setPoolThreshold((address,address,uint24,int24,address),uint256)":{"notice":"Set pool-specific threshold"},"transferOwnership(address)":{"notice":"Transfer ownership"},"updateVaultThreshold(uint256)":{"notice":"Update vault threshold (admin only)"},"usedCommitments(bytes32)":{"notice":"Mapping of order commitments to prevent replay"},"vaultThresholdBps()":{"notice":"Default vault threshold in basis points (1% = 100 bps)"}},"version":1}},"settings":{"remappings":["@eigenlayer-middleware/=lib/eigenlayer-middleware/src/","@eigenlayer/=lib/eigenlayer-contracts/src/contracts/","@ensdomains/=lib/v4-core/node_modules/@ensdomains/","@forge-std/=lib/forge-std/src/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v4-core/=lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-core/node_modules/hardhat/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-core/lib/solmate/","v4-core/=lib/v4-core/src/","v4-periphery/=lib/v4-periphery/","zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":800},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/src/SimplifiedEigenVaultHook.sol":"SimplifiedEigenVaultHook"},"evmVersion":"cancun","libraries":{}},"sources":{"contracts/src/SimplifiedEigenVaultHook.sol":{"keccak256":"0x951c6fa76ed459631fd73cb6295892d235487bb719873f4198bae43007f30252","urls":["bzz-raw://221ed4fce9cd7083f2fd42c623c0f323a42e5eee3c8a49424916416cdf009a76","dweb:/ipfs/QmdjPjQvhGfyhFD84DL31iopcfjpYTwdaqgTtJkSKUuFaX"],"license":"MIT"},"contracts/src/interfaces/IEigenVaultHook.sol":{"keccak256":"0x9d2992dd8717a7213f0c75283aebdfad9c83a1b4a5c05cb2b894fc106c1441e1","urls":["bzz-raw://5c0c7646adca5b5af59d09155c2b07e2d167c5740c1a775b5e2ad5c877746906","dweb:/ipfs/QmawFrV1ax6MSE8ZYWQgG35dR1bW43rUE9mVdC8CfmW9zZ"],"license":"MIT"},"contracts/src/interfaces/IOrderVault.sol":{"keccak256":"0xc5ff6358b8e9cce00dc4adabf8b9c0204c65829fdf0187fc39095739308fcc9d","urls":["bzz-raw://baa00c37407a03afa88a2e1553a593ac95047ad710d7d5c86d673de1cd64f51c","dweb:/ipfs/QmS3QkD1Pej8Fnyn8mMBuAhGy5cd5Wh5NBveHz3kZsFkUx"],"license":"MIT"},"contracts/src/libraries/OrderLib.sol":{"keccak256":"0xd978876b8767b4229a681ef7a35c03e84de731105250bb6ed383829b84e14cc3","urls":["bzz-raw://2da82c1d75636416de6e25103c401a7a8e40ffbbdb667d881395e5cab35a83fe","dweb:/ipfs/QmYxd2NYteKQUHicH2yB8cbVbgu9MWJyyB1TqjKtNW9YHy"],"license":"MIT"},"lib/v4-core/src/interfaces/IExtsload.sol":{"keccak256":"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43","urls":["bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1","dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"],"license":"MIT"},"lib/v4-core/src/interfaces/IExttload.sol":{"keccak256":"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937","urls":["bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8","dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"],"license":"MIT"},"lib/v4-core/src/interfaces/IHooks.sol":{"keccak256":"0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0","urls":["bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c","dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb"],"license":"MIT"},"lib/v4-core/src/interfaces/IPoolManager.sol":{"keccak256":"0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea","urls":["bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27","dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V"],"license":"MIT"},"lib/v4-core/src/interfaces/IProtocolFees.sol":{"keccak256":"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848","urls":["bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d","dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J"],"license":"MIT"},"lib/v4-core/src/interfaces/external/IERC20Minimal.sol":{"keccak256":"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f","urls":["bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de","dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d"],"license":"MIT"},"lib/v4-core/src/interfaces/external/IERC6909Claims.sol":{"keccak256":"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48","urls":["bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f","dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"],"license":"MIT"},"lib/v4-core/src/libraries/CustomRevert.sol":{"keccak256":"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de","urls":["bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd","dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"],"license":"MIT"},"lib/v4-core/src/libraries/Hooks.sol":{"keccak256":"0x27b1c3b8aa3d07d8e3123970695745929315685a5ffaa7342c3ba3582f37fecb","urls":["bzz-raw://fa3bb092dc205eaa1b9defc93e9bbad5f4c5c44e1c4aa531dfca2574c2aba9ba","dweb:/ipfs/QmR1soxkepHNkbGxAMaK4XqhQ4VxWn69dewzGkQJNx5byM"],"license":"MIT"},"lib/v4-core/src/libraries/LPFeeLibrary.sol":{"keccak256":"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b","urls":["bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475","dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J"],"license":"MIT"},"lib/v4-core/src/libraries/ParseBytes.sol":{"keccak256":"0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15","urls":["bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17","dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa"],"license":"MIT"},"lib/v4-core/src/libraries/SafeCast.sol":{"keccak256":"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86","urls":["bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59","dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj"],"license":"MIT"},"lib/v4-core/src/types/BalanceDelta.sol":{"keccak256":"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f","urls":["bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9","dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"],"license":"MIT"},"lib/v4-core/src/types/BeforeSwapDelta.sol":{"keccak256":"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78","urls":["bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782","dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"],"license":"MIT"},"lib/v4-core/src/types/Currency.sol":{"keccak256":"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93","urls":["bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01","dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5"],"license":"MIT"},"lib/v4-core/src/types/PoolId.sol":{"keccak256":"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af","urls":["bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918","dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"],"license":"MIT"},"lib/v4-core/src/types/PoolKey.sol":{"keccak256":"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786","urls":["bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639","dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"],"license":"MIT"}},"version":1},"id":1}